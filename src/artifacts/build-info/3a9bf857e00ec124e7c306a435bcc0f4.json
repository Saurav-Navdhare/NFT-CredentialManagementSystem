{"id":"3a9bf857e00ec124e7c306a435bcc0f4","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IERC721Metadata} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {IERC721Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\n    struct ERC721Storage {\n        // Token name\n        string _name;\n\n        // Token symbol\n        string _symbol;\n\n        mapping(uint256 tokenId => address) _owners;\n\n        mapping(address owner => uint256) _balances;\n\n        mapping(uint256 tokenId => address) _tokenApprovals;\n\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC721\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\n\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\n        assembly {\n            $.slot := ERC721StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC721Storage storage $ = _getERC721Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return $._balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        unchecked {\n            $._balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                $._balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                $._balances[to] += 1;\n            }\n        }\n\n        $._owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        $._tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/NFTCMSvDigitalSignature.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\"; // to avoid non reenterent while func execution\r\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n// import \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\ncontract NFTCMS is \r\n    Initializable, \r\n    ERC721Upgradeable, \r\n    AccessControlUpgradeable, \r\n    PausableUpgradeable,\r\n    UUPSUpgradeable,\r\n    ReentrancyGuard {\r\n   \r\n    using ECDSA for bytes32;\r\n    using Address for address;\r\n    \r\n    uint256 private _tokenId=0;\r\n\r\n    function incrementTokenId() internal {\r\n        _tokenId++;\r\n    }\r\n\r\n    function getCurrentTokenId() internal view returns(uint256) {\r\n        return _tokenId;\r\n    }\r\n\r\n    // Role definitions\r\n    bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\");\r\n    bytes32 public constant INSTITUTION_ROLE = keccak256(\"INSTITUTION_ROLE\");\r\n\r\n    struct Credential {\r\n        uint256 tokenId;\r\n        string ipfsURI;\r\n        CredentialStatus status;\r\n        bytes signature;\r\n        address signer;\r\n    }\r\n\r\n    enum CredentialStatus {\r\n        VALID,\r\n        REVOKED\r\n        // INVALID\r\n    }\r\n\r\n    // Mapping of token IDs to credentials\r\n    mapping(uint256 => Credential) public credentials;\r\n    mapping(string => uint256) private _ipfsURIs; // used to avoid multiple credentials on the same ipfsURL\r\n\r\n    // Events\r\n    event CredentialIssued(\r\n        uint256 indexed tokenId,\r\n        address indexed student,\r\n        address indexed institution\r\n    );\r\n\r\n    event CredentialStatusChanged(\r\n        uint256 indexed tokenId, \r\n        CredentialStatus previousStatus, \r\n        CredentialStatus newStatus, \r\n        string reason\r\n    );\r\n    \r\n    event InstitutionRegistered(address indexed institution);\r\n    event ManagerRegistered(address indexed manager);\r\n\r\n    event ManagerRevoked(\r\n        address indexed manager,\r\n        string reason\r\n    );\r\n\r\n    event InstitutionRevoked(\r\n        address indexed institution,\r\n        string reason\r\n    );\r\n\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    function initialize() public initializer {\r\n        __ERC721_init(\"Academic Credentials\", \"ACRED\");\r\n        __AccessControl_init();\r\n        __Pausable_init();\r\n        __UUPSUpgradeable_init();\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        // _grantRole(MANAGER_ROLE, msg.sender);  // ERC721 does not have multiple-role support\r\n    }\r\n\r\n    // Modifiers\r\n    modifier onlyAdmin(){\r\n        _checkRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier onlyManager() {\r\n        _checkRole(MANAGER_ROLE, msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier onlyInstitution() {\r\n        _checkRole(INSTITUTION_ROLE, msg.sender);\r\n        _;\r\n    }\r\n\r\n    function registerManager(address _manager)\r\n        external\r\n        onlyAdmin {\r\n        require(!hasRole(MANAGER_ROLE, _manager), \"Address is already a manager\");\r\n        require(!hasRole(INSTITUTION_ROLE, _manager), \"Address is already an institution\");\r\n        require(!hasRole(DEFAULT_ADMIN_ROLE, _manager), \"Address is already an admin\");\r\n        grantRole(MANAGER_ROLE, _manager);\r\n        emit ManagerRegistered(_manager);\r\n    }\r\n\r\n    function revokeManager(\r\n        address _manager,\r\n        string memory reason\r\n    )   external\r\n        onlyAdmin {\r\n        require(hasRole(MANAGER_ROLE, _manager), \"Address is not a manager\");\r\n        revokeRole(MANAGER_ROLE, _manager);\r\n        emit ManagerRevoked(_manager,  reason);\r\n    }\r\n\r\n    // Institution Registration\r\n    function registerInstitution(address _institution) \r\n        external \r\n        onlyManager {\r\n        require(!hasRole(MANAGER_ROLE, _institution), \"Address is already a manager\");\r\n        require(!hasRole(INSTITUTION_ROLE, _institution), \"Address is already an institution\");\r\n        require(!hasRole(DEFAULT_ADMIN_ROLE, _institution), \"Address is already an admin\");\r\n        grantRole(INSTITUTION_ROLE, _institution);\r\n        emit InstitutionRegistered(_institution);\r\n    }\r\n\r\n    function revokeInstitution(\r\n        address _institution,\r\n        string memory reason\r\n    )   external\r\n        onlyManager {\r\n        require(hasRole(INSTITUTION_ROLE, _institution), \"Address is not an institution\");\r\n        revokeRole(INSTITUTION_ROLE, _institution);\r\n        emit InstitutionRevoked(_institution, reason);\r\n    }\r\n\r\n    function verifySignature(\r\n            bytes32 message,\r\n            address signer,\r\n            bytes memory signature\r\n        )   public\r\n            pure\r\n            returns (bool) {\r\n            bytes32 hash = MessageHashUtils.toEthSignedMessageHash(message);\r\n            address recoveredSigner = hash.recover(signature);\r\n            return signer == recoveredSigner;\r\n    }\r\n\r\n    // Credential Issuance with Enhanced Validation\r\n    function issueCredential(\r\n        address _student,\r\n        string memory _ipfsURI,\r\n        bytes32 _hash,\r\n        bytes memory _signature\r\n    )   public\r\n        onlyInstitution\r\n        whenNotPaused\r\n        nonReentrant {\r\n        incrementTokenId();\r\n        uint256 newTokenId = getCurrentTokenId();\r\n        require(credentials[newTokenId].tokenId == 0, \"Token ID already exists\");\r\n        require(_ipfsURIs[_ipfsURI]==0, \"The IPFS URI is already issued for a credential\");\r\n        require(verifySignature(   // check signature before storing it into smart contract\r\n            _hash,\r\n            msg.sender,\r\n            _signature\r\n        ), \"Invalid signature\");\r\n\r\n\r\n        credentials[newTokenId] = Credential({\r\n            tokenId: newTokenId,\r\n            status: CredentialStatus.VALID,\r\n            ipfsURI: _ipfsURI,\r\n            signature: _signature,\r\n            signer: msg.sender\r\n        });\r\n\r\n        _ipfsURIs[_ipfsURI]=newTokenId;\r\n\r\n        _mint(_student, newTokenId);\r\n        emit CredentialIssued(newTokenId, _student, msg.sender);\r\n    }\r\n\r\n    function verifyCredential(\r\n        uint256 tokenId,\r\n        bytes32 hash\r\n    )   external\r\n        view\r\n        returns (bool) {\r\n        require(_isMinted(tokenId), \"Token does not exist\");\r\n        // require(credentials[tokenId].status != CredentialStatus.INVALID, \"The credential is already invalidated\");\r\n        bytes memory signature = credentials[tokenId].signature;\r\n        address signer = credentials[tokenId].signer;\r\n        bool isVerified = verifySignature(hash, signer, signature);\r\n        // if(!isVerified){\r\n        //     credentials[tokenId].status = CredentialStatus.INVALID;\r\n        // }\r\n        return isVerified;\r\n    }\r\n\r\n    // Enhanced Revocation Mechanism\r\n    function revokeCredential(\r\n        uint256 tokenId, \r\n        string memory reason\r\n    )   public\r\n        onlyInstitution\r\n        nonReentrant {\r\n        require(_isMinted(tokenId), \"Token does not exist\");\r\n        Credential storage cred = credentials[tokenId];\r\n        require(cred.status == CredentialStatus.VALID, \"Credential is already REVOKED\");\r\n        \r\n        CredentialStatus previousStatus = cred.status;\r\n        cred.status = CredentialStatus.REVOKED;\r\n        \r\n        emit CredentialStatusChanged(\r\n            tokenId, \r\n            previousStatus, \r\n            CredentialStatus.REVOKED, \r\n            reason\r\n        );\r\n    }\r\n\r\n    // Internal helper function to verify token existence\r\n    function _isMinted(uint256 tokenId)\r\n        internal\r\n        view\r\n        returns (bool) {\r\n        try this.ownerOf(tokenId) returns (address) {\r\n            return true;\r\n        } catch {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Token URI with IPFS Integration\r\n    function tokenURI(uint256 tokenId) \r\n        public \r\n        view \r\n        virtual \r\n        override \r\n        returns (string memory) {\r\n        require(_isMinted(tokenId), \"Token does not exist\");\r\n        return credentials[tokenId].ipfsURI;\r\n    }\r\n\r\n    // Pausability Functions\r\n    function pause() external onlyManager {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyManager {\r\n        _unpause();\r\n    }\r\n\r\n    // UUPS Upgradeable Authorization\r\n    function _authorizeUpgrade(address newImplementation)\r\n        internal\r\n        onlyManager\r\n        override {}\r\n\r\n    // Interface Support\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721Upgradeable, AccessControlUpgradeable)\r\n        returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[1924],"ERC165Upgradeable":[2140],"IAccessControl":[2223],"Initializable":[616]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":2224,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1925,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":2141,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":617,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1924,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":2223,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":2140,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,2140,4215,2223,1924,616],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nativeSrc":"2896:62:0","nodeType":"YulBlock","src":"2896:62:0","statements":[{"nativeSrc":"2910:38:0","nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:0","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:0","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2139],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2223_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2223_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$2223","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2190],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2198],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2206],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2214],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2222],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7976:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8015:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7986:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7986:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7986:20:0"},"referencedDeclaration":35,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8019:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8019:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7986:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8067:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8073:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8059:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8237:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8258:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8251:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8055:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8083:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8097:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8099:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8097:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8106:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8097:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8112:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8097:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8120:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8097:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8131:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8097:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8097:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8167:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8173:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"8182:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8182:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"8155:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8155:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8150:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8216:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8209:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7901:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7921:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7913:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7913:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7935:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7927:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7912:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7970:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7970:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7969:6:0"},"scope":362,"src":"7892:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6192:0","usedErrors":[379,382,2150,2153],"usedEvents":[387,2162,2171,2180]}],"src":"108:8175:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[616]},"id":617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":616,"linearizedBaseContracts":[616],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":373,"members":[{"constant":false,"id":369,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":373,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":368,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":373,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":371,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":616,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":376,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":616,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":379,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":382,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":387,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":387,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":384,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":469,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":469,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":391,"nodeType":"UserDefinedTypeName","pathNode":{"id":390,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"4158:20:1"},"referencedDeclaration":373,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":393,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[397],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":469,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":401,"initialValue":{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":398,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":469,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":402,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":406,"initialValue":{"expression":{"id":404,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":407,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":414,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":412,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":429,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":430,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":432,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":438,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":437,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":440,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":445,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":446,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":453,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":447,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":452,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":455,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":456,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":467,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":457,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":463,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":470,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":516,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[477],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":516,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"6357:20:1"},"referencedDeclaration":373,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":481,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":485,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":492,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":491,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":490,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":493,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":496,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":498,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":499,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":505,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":506,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":513,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":512,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":517,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":517,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":472,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":523,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":525,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":529,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":535,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":534,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":616,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":583,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"7826:20:1"},"referencedDeclaration":373,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":545,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":548,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":554,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":553,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":550,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":552,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":555,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":558,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":581,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":563,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":572,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":575,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":573,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":616,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":590,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":589,"id":593,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":587,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":616,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":600,"id":604,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":598,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":616,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":614,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":611,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":376,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":613,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":615,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"8795:20:1"},"referencedDeclaration":373,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":616,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":617,"src":"2349:6560:1","usedErrors":[379,382],"usedEvents":[387]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[2685],"IERC1822Proxiable":[2254],"Initializable":[616],"UUPSUpgradeable":[798]},"id":799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":618,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":799,"sourceUnit":2255,"src":"141:88:2","symbolAliases":[{"foreign":{"id":619,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":622,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":799,"sourceUnit":2686,"src":"230:84:2","symbolAliases":[{"foreign":{"id":621,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":799,"sourceUnit":617,"src":"315:50:2","symbolAliases":[{"foreign":{"id":623,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":626,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"1023:13:2"},"id":627,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":628,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2254,"src":"1038:17:2"},"id":629,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":798,"linearizedBaseContracts":[798,2254,616],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":636,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":798,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":634,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}],"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":640,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":798,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":638,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":643,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":648,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":648,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":655,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":651,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":654,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":656,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":662,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":664,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":669,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":670,"implemented":true,"kind":"function","modifiers":[{"id":667,"kind":"modifierInvocation","modifierName":{"id":666,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":798,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":676,"implemented":true,"kind":"function","modifiers":[{"id":673,"kind":"modifierInvocation","modifierName":{"id":672,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":798,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2253],"body":{"id":687,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":684,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2685_$","typeString":"type(library ERC1967Utils)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":683,"id":686,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":688,"implemented":true,"kind":"function","modifiers":[{"id":680,"kind":"modifierInvocation","modifierName":{"id":679,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":798,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":707,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":699,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":698,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":703,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":704,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":702,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":708,"implemented":true,"kind":"function","modifiers":[{"id":696,"kind":"modifierInvocation","modifierName":{"id":695,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":656,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":708,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":708,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":692,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":798,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":729,"nodeType":"Block","src":"4648:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":714,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4683:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4675:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"4675:7:2","typeDescriptions":{}}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4675:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":716,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4692:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4675:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":718,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"4753:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2685_$","typeString":"type(library ERC1967Utils)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4766:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"4753:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4753:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":721,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4789:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4753:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4675:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":728,"nodeType":"IfStatement","src":"4658:251:2","trueBody":{"id":727,"nodeType":"Block","src":"4848:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":724,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4869:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":726,"nodeType":"RevertStatement","src":"4862:36:2"}]}}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"4381:217:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."},"id":730,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4612:11:2","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"4623:2:2"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"4648:0:2"},"scope":798,"src":"4603:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":745,"nodeType":"Block","src":"5084:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":736,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5106:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5098:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"5098:7:2","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":738,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"5115:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5098:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"IfStatement","src":"5094:145:2","trueBody":{"id":743,"nodeType":"Block","src":"5123:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":740,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"5199:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":742,"nodeType":"RevertStatement","src":"5192:36:2"}]}}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"4921:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5041:18:2","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"5059:2:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"5084:0:2"},"scope":798,"src":"5032:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"5251:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":752,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5637:17:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"newImplementation","nameLocation":"5663:17:2","nodeType":"VariableDeclaration","scope":752,"src":"5655:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"5655:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5654:27:2"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"5698:0:2"},"scope":798,"src":"5628:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":796,"nodeType":"Block","src":"6142:453:2","statements":[{"clauses":[{"block":{"id":785,"nodeType":"Block","src":"6232:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":768,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6250:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":769,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6258:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2685_$","typeString":"type(library ERC1967Utils)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6271:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"6258:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6250:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":777,"nodeType":"IfStatement","src":"6246:120:2","trueBody":{"id":776,"nodeType":"Block","src":"6292:74:2","statements":[{"errorCall":{"arguments":[{"id":773,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6346:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":772,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"6317:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":775,"nodeType":"RevertStatement","src":"6310:41:2"}]}},{"expression":{"arguments":[{"id":781,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6409:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":782,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6428:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":778,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6379:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2685_$","typeString":"type(library ERC1967Utils)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6392:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"6379:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"6379:54:2"}]},"errorName":"","id":786,"nodeType":"TryCatchClause","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"slot","nameLocation":"6226:4:2","nodeType":"VariableDeclaration","scope":786,"src":"6218:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6218:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:14:2"},"src":"6209:235:2"},{"block":{"id":793,"nodeType":"Block","src":"6451:138:2","statements":[{"errorCall":{"arguments":[{"id":790,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6560:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":787,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6518:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2685_$","typeString":"type(library ERC1967Utils)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6531:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"6518:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6518:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":792,"nodeType":"RevertStatement","src":"6511:67:2"}]},"errorName":"","id":794,"nodeType":"TryCatchClause","src":"6445:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":761,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6174:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"6156:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$2254_$","typeString":"type(contract IERC1822Proxiable)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$2254","typeString":"contract IERC1822Proxiable"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6193:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":2253,"src":"6156:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":795,"nodeType":"TryStatement","src":"6152:437:2"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"5705:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":797,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6066:21:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"newImplementation","nameLocation":"6096:17:2","nodeType":"VariableDeclaration","scope":797,"src":"6088:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"6088:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"data","nameLocation":"6128:4:2","nodeType":"VariableDeclaration","scope":797,"src":"6115:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":756,"name":"bytes","nodeType":"ElementaryTypeName","src":"6115:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6087:46:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"6142:0:2"},"scope":798,"src":"6057:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":799,"src":"986:5611:2","usedErrors":[379,382,643,648,2411,2424,2945,3207],"usedEvents":[387,2231]}],"src":"115:6483:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1924],"ERC165Upgradeable":[2140],"ERC721Upgradeable":[1878],"ERC721Utils":[2935],"IERC165":[4215],"IERC721":[2812],"IERC721Errors":[2344],"IERC721Metadata":[2858],"Initializable":[616],"Strings":[3781]},"id":1879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":2813,"src":"133:73:3","symbolAliases":[{"foreign":{"id":801,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":2859,"src":"207:100:3","symbolAliases":[{"foreign":{"id":803,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"215:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","id":806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":2936,"src":"308:87:3","symbolAliases":[{"foreign":{"id":805,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"316:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":808,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":1925,"src":"396:70:3","symbolAliases":[{"foreign":{"id":807,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"404:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":810,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":3782,"src":"467:66:3","symbolAliases":[{"foreign":{"id":809,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"475:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":812,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":4216,"src":"534:80:3","symbolAliases":[{"foreign":{"id":811,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"542:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":2141,"src":"615:82:3","symbolAliases":[{"foreign":{"id":813,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"623:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":2392,"src":"698:84:3","symbolAliases":[{"foreign":{"id":815,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"706:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":617,"src":"783:66:3","symbolAliases":[{"foreign":{"id":817,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"791:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":820,"name":"Initializable","nameLocations":["1138:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"1138:13:3"},"id":821,"nodeType":"InheritanceSpecifier","src":"1138:13:3"},{"baseName":{"id":822,"name":"ContextUpgradeable","nameLocations":["1153:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1924,"src":"1153:18:3"},"id":823,"nodeType":"InheritanceSpecifier","src":"1153:18:3"},{"baseName":{"id":824,"name":"ERC165Upgradeable","nameLocations":["1173:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2140,"src":"1173:17:3"},"id":825,"nodeType":"InheritanceSpecifier","src":"1173:17:3"},{"baseName":{"id":826,"name":"IERC721","nameLocations":["1192:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2812,"src":"1192:7:3"},"id":827,"nodeType":"InheritanceSpecifier","src":"1192:7:3"},{"baseName":{"id":828,"name":"IERC721Metadata","nameLocations":["1201:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":2858,"src":"1201:15:3"},"id":829,"nodeType":"InheritanceSpecifier","src":"1201:15:3"},{"baseName":{"id":830,"name":"IERC721Errors","nameLocations":["1218:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":2344,"src":"1218:13:3"},"id":831,"nodeType":"InheritanceSpecifier","src":"1218:13:3"}],"canonicalName":"ERC721Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"851:247:3","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1878,"linearizedBaseContracts":[1878,2344,2858,2812,2140,4215,1924,616],"name":"ERC721Upgradeable","nameLocation":"1117:17:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":834,"libraryName":{"id":832,"name":"Strings","nameLocations":["1244:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"1244:7:3"},"nodeType":"UsingForDirective","src":"1238:26:3","typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"ERC721Upgradeable.ERC721Storage","documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"1270:64:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC721"},"id":858,"members":[{"constant":false,"id":837,"mutability":"mutable","name":"_name","nameLocation":"1399:5:3","nodeType":"VariableDeclaration","scope":858,"src":"1392:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":836,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"_symbol","nameLocation":"1446:7:3","nodeType":"VariableDeclaration","scope":858,"src":"1439:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":838,"name":"string","nodeType":"ElementaryTypeName","src":"1439:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"_owners","nameLocation":"1500:7:3","nodeType":"VariableDeclaration","scope":858,"src":"1464:43:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":842,"keyName":"tokenId","keyNameLocation":"1480:7:3","keyType":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1464:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"_balances","nameLocation":"1552:9:3","nodeType":"VariableDeclaration","scope":858,"src":"1518:43:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":846,"keyName":"owner","keyNameLocation":"1534:5:3","keyType":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1526:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1518:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1608:15:3","nodeType":"VariableDeclaration","scope":858,"src":"1572:51:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":850,"keyName":"tokenId","keyNameLocation":"1588:7:3","keyType":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1572:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"1599:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1694:18:3","nodeType":"VariableDeclaration","scope":858,"src":"1634:78:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":856,"keyName":"owner","keyNameLocation":"1650:5:3","keyType":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1634:59:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":855,"keyName":"operator","keyNameLocation":"1675:8:3","keyType":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":854,"name":"bool","nodeType":"ElementaryTypeName","src":"1687:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"}],"name":"ERC721Storage","nameLocation":"1346:13:3","nodeType":"StructDefinition","scope":1878,"src":"1339:380:3","visibility":"public"},{"constant":true,"id":861,"mutability":"constant","name":"ERC721StorageLocation","nameLocation":"1860:21:3","nodeType":"VariableDeclaration","scope":1878,"src":"1835:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1835:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838306262326236333863633230626334643061363064363639343066336162346130306331643762333133343937636138326662306234616230303739333030","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:66:3","typeDescriptions":{"typeIdentifier":"t_rational_58226744478722834339948329933988999792353370511964151963072532422914231210752_by_1","typeString":"int_const 5822...(69 digits omitted)...0752"},"value":"0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300"},"visibility":"private"},{"body":{"id":868,"nodeType":"Block","src":"2033:80:3","statements":[{"AST":{"nativeSrc":"2052:55:3","nodeType":"YulBlock","src":"2052:55:3","statements":[{"nativeSrc":"2066:31:3","nodeType":"YulAssignment","src":"2066:31:3","value":{"name":"ERC721StorageLocation","nativeSrc":"2076:21:3","nodeType":"YulIdentifier","src":"2076:21:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2066:6:3","nodeType":"YulIdentifier","src":"2066:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":865,"isOffset":false,"isSlot":true,"src":"2066:6:3","suffix":"slot","valueSize":1},{"declaration":861,"isOffset":false,"isSlot":false,"src":"2076:21:3","valueSize":1}],"id":867,"nodeType":"InlineAssembly","src":"2043:64:3"}]},"id":869,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC721Storage","nameLocation":"1966:17:3","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"1983:2:3"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"$","nameLocation":"2030:1:3","nodeType":"VariableDeclaration","scope":869,"src":"2008:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":864,"nodeType":"UserDefinedTypeName","pathNode":{"id":863,"name":"ERC721Storage","nameLocations":["2008:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"2008:13:3"},"referencedDeclaration":858,"src":"2008:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"src":"2007:25:3"},"scope":1878,"src":"1957:156:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":884,"nodeType":"Block","src":"2325:56:3","statements":[{"expression":{"arguments":[{"id":880,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2359:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":881,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2366:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":879,"name":"__ERC721_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"2335:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"2335:39:3"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"2119:108:3","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":885,"implemented":true,"kind":"function","modifiers":[{"id":877,"kind":"modifierInvocation","modifierName":{"id":876,"name":"onlyInitializing","nameLocations":["2308:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"2308:16:3"},"nodeType":"ModifierInvocation","src":"2308:16:3"}],"name":"__ERC721_init","nameLocation":"2241:13:3","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"name_","nameLocation":"2269:5:3","nodeType":"VariableDeclaration","scope":885,"src":"2255:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":871,"name":"string","nodeType":"ElementaryTypeName","src":"2255:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"symbol_","nameLocation":"2290:7:3","nodeType":"VariableDeclaration","scope":885,"src":"2276:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":873,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2254:44:3"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"2325:0:3"},"scope":1878,"src":"2232:149:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":912,"nodeType":"Block","src":"2490:116:3","statements":[{"assignments":[896],"declarations":[{"constant":false,"id":896,"mutability":"mutable","name":"$","nameLocation":"2522:1:3","nodeType":"VariableDeclaration","scope":912,"src":"2500:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":895,"nodeType":"UserDefinedTypeName","pathNode":{"id":894,"name":"ERC721Storage","nameLocations":["2500:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"2500:13:3"},"referencedDeclaration":858,"src":"2500:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":899,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":897,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2526:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2500:45:3"},{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":900,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2555:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2557:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":837,"src":"2555:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":903,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2565:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2555:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":905,"nodeType":"ExpressionStatement","src":"2555:15:3"},{"expression":{"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":906,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2580:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2582:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":839,"src":"2580:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":909,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"2592:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2580:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":911,"nodeType":"ExpressionStatement","src":"2580:19:3"}]},"id":913,"implemented":true,"kind":"function","modifiers":[{"id":892,"kind":"modifierInvocation","modifierName":{"id":891,"name":"onlyInitializing","nameLocations":["2473:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"2473:16:3"},"nodeType":"ModifierInvocation","src":"2473:16:3"}],"name":"__ERC721_init_unchained","nameLocation":"2396:23:3","nodeType":"FunctionDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"name_","nameLocation":"2434:5:3","nodeType":"VariableDeclaration","scope":913,"src":"2420:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":886,"name":"string","nodeType":"ElementaryTypeName","src":"2420:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"symbol_","nameLocation":"2455:7:3","nodeType":"VariableDeclaration","scope":913,"src":"2441:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":888,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2419:44:3"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"2490:0:3"},"scope":1878,"src":"2387:219:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2139,4214],"body":{"id":943,"nodeType":"Block","src":"2792:192:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2821:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":926,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"2841:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2812_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2812_$","typeString":"type(contract IERC721)"}],"id":925,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2836:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2836:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2812","typeString":"type(contract IERC721)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2850:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2836:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2821:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2877:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":932,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2897:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2858_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2858_$","typeString":"type(contract IERC721Metadata)"}],"id":931,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2892:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2892:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2858","typeString":"type(contract IERC721Metadata)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2914:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2892:33:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2877:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2821:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":939,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2965:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":937,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2941:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Upgradeable_$1878_$","typeString":"type(contract super ERC721Upgradeable)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2947:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2941:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2941:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2821:156:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":923,"id":942,"nodeType":"Return","src":"2802:175:3"}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"2612:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":944,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2682:17:3","nodeType":"FunctionDefinition","overrides":{"id":920,"nodeType":"OverrideSpecifier","overrides":[{"id":918,"name":"ERC165Upgradeable","nameLocations":["2749:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2140,"src":"2749:17:3"},{"id":919,"name":"IERC165","nameLocations":["2768:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4215,"src":"2768:7:3"}],"src":"2740:36:3"},"parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"interfaceId","nameLocation":"2707:11:3","nodeType":"VariableDeclaration","scope":944,"src":"2700:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":915,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2700:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2699:20:3"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"2786:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":921,"name":"bool","nodeType":"ElementaryTypeName","src":"2786:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2785:6:3"},"scope":1878,"src":"2673:311:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2737],"body":{"id":978,"nodeType":"Block","src":"3115:193:3","statements":[{"assignments":[954],"declarations":[{"constant":false,"id":954,"mutability":"mutable","name":"$","nameLocation":"3147:1:3","nodeType":"VariableDeclaration","scope":978,"src":"3125:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":953,"nodeType":"UserDefinedTypeName","pathNode":{"id":952,"name":"ERC721Storage","nameLocations":["3125:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"3125:13:3"},"referencedDeclaration":858,"src":"3125:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":957,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":955,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"3151:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3151:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3125:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3184:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3201:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3193:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"3193:7:3","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3193:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3184:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":972,"nodeType":"IfStatement","src":"3180:87:3","trueBody":{"id":971,"nodeType":"Block","src":"3205:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3253:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3245:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"3245:7:3","typeDescriptions":{}}},"id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":964,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"3226:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":970,"nodeType":"RevertStatement","src":"3219:37:3"}]}},{"expression":{"baseExpression":{"expression":{"id":973,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"3283:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3285:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":847,"src":"3283:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":976,"indexExpression":{"id":975,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3295:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3283:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":951,"id":977,"nodeType":"Return","src":"3276:25:3"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"2990:48:3","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":979,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3052:9:3","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"owner","nameLocation":"3070:5:3","nodeType":"VariableDeclaration","scope":979,"src":"3062:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"3062:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3061:15:3"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":979,"src":"3106:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3105:9:3"},"scope":1878,"src":"3043:265:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2745],"body":{"id":991,"nodeType":"Block","src":"3437:46:3","statements":[{"expression":{"arguments":[{"id":988,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3468:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":987,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3454:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3454:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":986,"id":990,"nodeType":"Return","src":"3447:29:3"}]},"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"3314:46:3","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":992,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3374:7:3","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"tokenId","nameLocation":"3390:7:3","nodeType":"VariableDeclaration","scope":992,"src":"3382:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"3382:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3381:17:3"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"3428:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"3428:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:9:3"},"scope":1878,"src":"3365:118:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2843],"body":{"id":1007,"nodeType":"Block","src":"3605:86:3","statements":[{"assignments":[1000],"declarations":[{"constant":false,"id":1000,"mutability":"mutable","name":"$","nameLocation":"3637:1:3","nodeType":"VariableDeclaration","scope":1007,"src":"3615:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":999,"nodeType":"UserDefinedTypeName","pathNode":{"id":998,"name":"ERC721Storage","nameLocations":["3615:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"3615:13:3"},"referencedDeclaration":858,"src":"3615:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1003,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1001,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"3641:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3641:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3615:45:3"},{"expression":{"expression":{"id":1004,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"3677:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3679:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":837,"src":"3677:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":997,"id":1006,"nodeType":"Return","src":"3670:14:3"}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"3489:51:3","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1008,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3554:4:3","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"3558:2:3"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1008,"src":"3590:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":995,"name":"string","nodeType":"ElementaryTypeName","src":"3590:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3589:15:3"},"scope":1878,"src":"3545:146:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2849],"body":{"id":1023,"nodeType":"Block","src":"3817:88:3","statements":[{"assignments":[1016],"declarations":[{"constant":false,"id":1016,"mutability":"mutable","name":"$","nameLocation":"3849:1:3","nodeType":"VariableDeclaration","scope":1023,"src":"3827:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1015,"nodeType":"UserDefinedTypeName","pathNode":{"id":1014,"name":"ERC721Storage","nameLocations":["3827:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"3827:13:3"},"referencedDeclaration":858,"src":"3827:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1019,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1017,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"3853:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3853:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3827:45:3"},{"expression":{"expression":{"id":1020,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"3889:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3891:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":839,"src":"3889:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1013,"id":1022,"nodeType":"Return","src":"3882:16:3"}]},"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"3697:53:3","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3764:6:3","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"3770:2:3"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"3802:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1011,"name":"string","nodeType":"ElementaryTypeName","src":"3802:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3801:15:3"},"scope":1878,"src":"3755:150:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2857],"body":{"id":1059,"nodeType":"Block","src":"4050:176:3","statements":[{"expression":{"arguments":[{"id":1033,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"4074:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1032,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4060:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4060:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1035,"nodeType":"ExpressionStatement","src":"4060:22:3"},{"assignments":[1037],"declarations":[{"constant":false,"id":1037,"mutability":"mutable","name":"baseURI","nameLocation":"4107:7:3","nodeType":"VariableDeclaration","scope":1059,"src":"4093:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1036,"name":"string","nodeType":"ElementaryTypeName","src":"4093:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1040,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1038,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"4117:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4117:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"4093:34:3"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1043,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4150:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"4144:5:3","typeDescriptions":{}}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4159:6:3","memberName":"length","nodeType":"MemberAccess","src":"4144:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4168:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4144:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4217:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4144:75:3","trueExpression":{"arguments":[{"id":1051,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4186:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1052,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"4195:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4203:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3529,"src":"4195:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4195:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4172:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1048,"name":"string","nodeType":"ElementaryTypeName","src":"4172:6:3","typeDescriptions":{}}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4179:6:3","memberName":"concat","nodeType":"MemberAccess","src":"4172:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4172:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1031,"id":1058,"nodeType":"Return","src":"4137:82:3"}]},"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"3911:55:3","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3980:8:3","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"tokenId","nameLocation":"3997:7:3","nodeType":"VariableDeclaration","scope":1060,"src":"3989:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3989:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3988:17:3"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1060,"src":"4035:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1029,"name":"string","nodeType":"ElementaryTypeName","src":"4035:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:15:3"},"scope":1878,"src":"3971:255:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1068,"nodeType":"Block","src":"4534:26:3","statements":[{"expression":{"hexValue":"","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4551:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1065,"id":1067,"nodeType":"Return","src":"4544:9:3"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"4232:231:3","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"4477:8:3","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"4485:2:3"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"4519:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1063,"name":"string","nodeType":"ElementaryTypeName","src":"4519:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4518:15:3"},"scope":1878,"src":"4468:92:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2785],"body":{"id":1084,"nodeType":"Block","src":"4678:52:3","statements":[{"expression":{"arguments":[{"id":1078,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4697:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"4701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1080,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4710:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4710:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1077,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1729,1803],"referencedDeclaration":1729,"src":"4688:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4688:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"ExpressionStatement","src":"4688:35:3"}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"4566:46:3","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4626:7:3","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"to","nameLocation":"4642:2:3","nodeType":"VariableDeclaration","scope":1085,"src":"4634:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"tokenId","nameLocation":"4654:7:3","nodeType":"VariableDeclaration","scope":1085,"src":"4646:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"4646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:29:3"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"4678:0:3"},"scope":1878,"src":"4617:113:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2801],"body":{"id":1101,"nodeType":"Block","src":"4867:78:3","statements":[{"expression":{"arguments":[{"id":1094,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"4891:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1093,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4877:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4877:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1096,"nodeType":"ExpressionStatement","src":"4877:22:3"},{"expression":{"arguments":[{"id":1098,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"4930:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1097,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"4917:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1092,"id":1100,"nodeType":"Return","src":"4910:28:3"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"4736:50:3","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4800:11:3","nodeType":"FunctionDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"tokenId","nameLocation":"4820:7:3","nodeType":"VariableDeclaration","scope":1102,"src":"4812:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4812:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:17:3"},"returnParameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"4858:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"4858:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4857:9:3"},"scope":1878,"src":"4791:154:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2793],"body":{"id":1117,"nodeType":"Block","src":"5087:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5116:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"5130:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"5140:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1110,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"5097:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"5097:52:3"}]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"4951:56:3","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"5021:17:3","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"operator","nameLocation":"5047:8:3","nodeType":"VariableDeclaration","scope":1118,"src":"5039:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"approved","nameLocation":"5062:8:3","nodeType":"VariableDeclaration","scope":1118,"src":"5057:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1106,"name":"bool","nodeType":"ElementaryTypeName","src":"5057:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5038:33:3"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[],"src":"5087:0:3"},"scope":1878,"src":"5012:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2811],"body":{"id":1141,"nodeType":"Block","src":"5316:116:3","statements":[{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"$","nameLocation":"5348:1:3","nodeType":"VariableDeclaration","scope":1141,"src":"5326:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1129,"nodeType":"UserDefinedTypeName","pathNode":{"id":1128,"name":"ERC721Storage","nameLocations":["5326:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"5326:13:3"},"referencedDeclaration":858,"src":"5326:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1131,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"5352:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5352:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5326:45:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1134,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5388:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5390:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":857,"src":"5388:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1137,"indexExpression":{"id":1136,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5409:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5388:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1139,"indexExpression":{"id":1138,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5416:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5388:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1127,"id":1140,"nodeType":"Return","src":"5381:44:3"}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"5162:55:3","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"5231:16:3","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"owner","nameLocation":"5256:5:3","nodeType":"VariableDeclaration","scope":1142,"src":"5248:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"5248:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"operator","nameLocation":"5271:8:3","nodeType":"VariableDeclaration","scope":1142,"src":"5263:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5247:33:3"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1142,"src":"5310:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1125,"name":"bool","nodeType":"ElementaryTypeName","src":"5310:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5309:6:3"},"scope":1878,"src":"5222:210:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2777],"body":{"id":1187,"nodeType":"Block","src":"5574:498:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"5588:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5602:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5594:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:3","typeDescriptions":{}}},"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5594:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5588:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"IfStatement","src":"5584:87:3","trueBody":{"id":1165,"nodeType":"Block","src":"5606:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5657:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5649:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"5649:7:3","typeDescriptions":{}}},"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5649:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1158,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"5627:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5627:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1164,"nodeType":"RevertStatement","src":"5620:40:3"}]}},{"assignments":[1168],"declarations":[{"constant":false,"id":1168,"mutability":"mutable","name":"previousOwner","nameLocation":"5897:13:3","nodeType":"VariableDeclaration","scope":1187,"src":"5889:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"5889:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1175,"initialValue":{"arguments":[{"id":1170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"5921:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"5925:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1172,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5934:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5934:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"5913:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5913:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5889:58:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1176,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5961:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1177,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"5978:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5961:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1186,"nodeType":"IfStatement","src":"5957:109:3","trueBody":{"id":1185,"nodeType":"Block","src":"5984:82:3","statements":[{"errorCall":{"arguments":[{"id":1180,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6026:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1181,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1182,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"6041:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1179,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"6005:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6005:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1184,"nodeType":"RevertStatement","src":"5998:57:3"}]}}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"5438:51:3","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1188,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5503:12:3","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"from","nameLocation":"5524:4:3","nodeType":"VariableDeclaration","scope":1188,"src":"5516:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"5516:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"to","nameLocation":"5538:2:3","nodeType":"VariableDeclaration","scope":1188,"src":"5530:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"5530:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"tokenId","nameLocation":"5550:7:3","nodeType":"VariableDeclaration","scope":1188,"src":"5542:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"5542:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5515:43:3"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"5574:0:3"},"scope":1878,"src":"5494:578:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2767],"body":{"id":1205,"nodeType":"Block","src":"6214:56:3","statements":[{"expression":{"arguments":[{"id":1199,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6241:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"6247:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1201,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"6251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6260:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1198,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1206,1236],"referencedDeclaration":1236,"src":"6224:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"ExpressionStatement","src":"6224:39:3"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"6078:55:3","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6147:16:3","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"from","nameLocation":"6172:4:3","nodeType":"VariableDeclaration","scope":1206,"src":"6164:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"6164:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"to","nameLocation":"6186:2:3","nodeType":"VariableDeclaration","scope":1206,"src":"6178:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"6178:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"tokenId","nameLocation":"6198:7:3","nodeType":"VariableDeclaration","scope":1206,"src":"6190:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"6190:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6163:43:3"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"6214:0:3"},"scope":1878,"src":"6138:132:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2757],"body":{"id":1235,"nodeType":"Block","src":"6439:130:3","statements":[{"expression":{"arguments":[{"id":1219,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6462:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1220,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6468:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1221,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1218,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6449:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6449:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"6449:31:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1227,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"6524:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6524:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1229,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6538:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1230,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6544:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1231,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6548:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1232,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"6557:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1224,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6490:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2935_$","typeString":"type(library ERC721Utils)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6502:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"6490:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6490:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"ExpressionStatement","src":"6490:72:3"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"6276:55:3","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6345:16:3","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"from","nameLocation":"6370:4:3","nodeType":"VariableDeclaration","scope":1236,"src":"6362:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"6362:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"to","nameLocation":"6384:2:3","nodeType":"VariableDeclaration","scope":1236,"src":"6376:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"6376:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"tokenId","nameLocation":"6396:7:3","nodeType":"VariableDeclaration","scope":1236,"src":"6388:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"6388:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"data","nameLocation":"6418:4:3","nodeType":"VariableDeclaration","scope":1236,"src":"6405:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1214,"name":"bytes","nodeType":"ElementaryTypeName","src":"6405:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6361:62:3"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"6439:0:3"},"scope":1878,"src":"6336:233:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1255,"nodeType":"Block","src":"7159:97:3","statements":[{"assignments":[1246],"declarations":[{"constant":false,"id":1246,"mutability":"mutable","name":"$","nameLocation":"7191:1:3","nodeType":"VariableDeclaration","scope":1255,"src":"7169:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1245,"nodeType":"UserDefinedTypeName","pathNode":{"id":1244,"name":"ERC721Storage","nameLocations":["7169:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"7169:13:3"},"referencedDeclaration":858,"src":"7169:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1249,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1247,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"7195:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7195:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7169:45:3"},{"expression":{"baseExpression":{"expression":{"id":1250,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"7231:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7233:7:3","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":843,"src":"7231:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1253,"indexExpression":{"id":1252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"7241:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7231:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1243,"id":1254,"nodeType":"Return","src":"7224:25:3"}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"6575:504:3","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1256,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"7093:8:3","nodeType":"FunctionDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"tokenId","nameLocation":"7110:7:3","nodeType":"VariableDeclaration","scope":1256,"src":"7102:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"7102:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7101:17:3"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"7150:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"7150:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7149:9:3"},"scope":1878,"src":"7084:172:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"7451:105:3","statements":[{"assignments":[1266],"declarations":[{"constant":false,"id":1266,"mutability":"mutable","name":"$","nameLocation":"7483:1:3","nodeType":"VariableDeclaration","scope":1275,"src":"7461:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1265,"nodeType":"UserDefinedTypeName","pathNode":{"id":1264,"name":"ERC721Storage","nameLocations":["7461:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"7461:13:3"},"referencedDeclaration":858,"src":"7461:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1267,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"7487:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7487:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7461:45:3"},{"expression":{"baseExpression":{"expression":{"id":1270,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7523:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7525:15:3","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":851,"src":"7523:17:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1273,"indexExpression":{"id":1272,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7541:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7523:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1263,"id":1274,"nodeType":"Return","src":"7516:33:3"}]},"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"7262:105:3","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"7381:12:3","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"tokenId","nameLocation":"7402:7:3","nodeType":"VariableDeclaration","scope":1276,"src":"7394:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7393:17:3"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"7442:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"7442:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7441:9:3"},"scope":1878,"src":"7372:184:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1311,"nodeType":"Block","src":"7976:163:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1288,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"8005:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8024:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8016:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"8016:7:3","typeDescriptions":{}}},"id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8016:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8005:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"8043:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"8052:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8043:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1298,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"8080:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"8087:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1297,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8063:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8063:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8043:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1303,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"8112:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1302,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"8099:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1305,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"8124:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8099:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8043:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8042:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8005:127:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1287,"id":1310,"nodeType":"Return","src":"7986:146:3"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"7562:300:3","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1312,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"7876:13:3","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"owner","nameLocation":"7898:5:3","nodeType":"VariableDeclaration","scope":1312,"src":"7890:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"7890:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"spender","nameLocation":"7913:7:3","nodeType":"VariableDeclaration","scope":1312,"src":"7905:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"7905:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"tokenId","nameLocation":"7930:7:3","nodeType":"VariableDeclaration","scope":1312,"src":"7922:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"7922:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7889:49:3"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1312,"src":"7970:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"7970:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7969:6:3"},"scope":1878,"src":"7867:272:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1348,"nodeType":"Block","src":"8668:271:3","statements":[{"condition":{"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8682:39:3","subExpression":{"arguments":[{"id":1323,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"8697:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1324,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8704:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1325,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8713:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1322,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"8683:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8683:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1347,"nodeType":"IfStatement","src":"8678:255:3","trueBody":{"id":1346,"nodeType":"Block","src":"8723:210:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"8741:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8758:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"8750:7:3","typeDescriptions":{}}},"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8741:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1344,"nodeType":"Block","src":"8839:84:3","statements":[{"errorCall":{"arguments":[{"id":1340,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8891:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1341,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1339,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"8864:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8864:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1343,"nodeType":"RevertStatement","src":"8857:51:3"}]},"id":1345,"nodeType":"IfStatement","src":"8737:186:3","trueBody":{"id":1338,"nodeType":"Block","src":"8762:71:3","statements":[{"errorCall":{"arguments":[{"id":1335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8810:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1334,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"8787:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8787:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1337,"nodeType":"RevertStatement","src":"8780:38:3"}]}}]}}]},"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"8145:421:3","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1349,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"8580:16:3","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"owner","nameLocation":"8605:5:3","nodeType":"VariableDeclaration","scope":1349,"src":"8597:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"8597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"spender","nameLocation":"8620:7:3","nodeType":"VariableDeclaration","scope":1349,"src":"8612:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"tokenId","nameLocation":"8637:7:3","nodeType":"VariableDeclaration","scope":1349,"src":"8629:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"8629:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8596:49:3"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"8668:0:3"},"scope":1878,"src":"8571:368:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1372,"nodeType":"Block","src":"9656:135:3","statements":[{"assignments":[1359],"declarations":[{"constant":false,"id":1359,"mutability":"mutable","name":"$","nameLocation":"9688:1:3","nodeType":"VariableDeclaration","scope":1372,"src":"9666:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1358,"nodeType":"UserDefinedTypeName","pathNode":{"id":1357,"name":"ERC721Storage","nameLocations":["9666:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"9666:13:3"},"referencedDeclaration":858,"src":"9666:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1362,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1360,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"9692:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9692:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"9666:45:3"},{"id":1371,"nodeType":"UncheckedBlock","src":"9721:64:3","statements":[{"expression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1363,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"9745:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9747:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":847,"src":"9745:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1367,"indexExpression":{"id":1365,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"9757:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9745:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"9769:5:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9745:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1370,"nodeType":"ExpressionStatement","src":"9745:29:3"}]}]},"documentation":{"id":1350,"nodeType":"StructuredDocumentation","src":"8945:631:3","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"9590:16:3","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"account","nameLocation":"9615:7:3","nodeType":"VariableDeclaration","scope":1373,"src":"9607:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"9607:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"value","nameLocation":"9632:5:3","nodeType":"VariableDeclaration","scope":1373,"src":"9624:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1353,"name":"uint128","nodeType":"ElementaryTypeName","src":"9624:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9606:32:3"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"9656:0:3"},"scope":1878,"src":"9581:210:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1474,"nodeType":"Block","src":"10479:761:3","statements":[{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"$","nameLocation":"10511:1:3","nodeType":"VariableDeclaration","scope":1474,"src":"10489:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"ERC721Storage","nameLocations":["10489:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"10489:13:3"},"referencedDeclaration":858,"src":"10489:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1390,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1388,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"10515:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10515:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10489:45:3"},{"assignments":[1392],"declarations":[{"constant":false,"id":1392,"mutability":"mutable","name":"from","nameLocation":"10552:4:3","nodeType":"VariableDeclaration","scope":1474,"src":"10544:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"10544:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1396,"initialValue":{"arguments":[{"id":1394,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"10568:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1393,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"10559:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10559:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10544:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"10636:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:3","typeDescriptions":{}}},"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1410,"nodeType":"IfStatement","src":"10632:86:3","trueBody":{"id":1409,"nodeType":"Block","src":"10656:62:3","statements":[{"expression":{"arguments":[{"id":1404,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"10687:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1405,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"10693:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1406,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"10699:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1403,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"10670:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10670:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"ExpressionStatement","src":"10670:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"10762:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10778:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10770:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1412,"name":"address","nodeType":"ElementaryTypeName","src":"10770:7:3","typeDescriptions":{}}},"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10770:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10762:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1440,"nodeType":"IfStatement","src":"10758:258:3","trueBody":{"id":1439,"nodeType":"Block","src":"10782:234:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10895:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10887:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"10887:7:3","typeDescriptions":{}}},"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10887:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"10899:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10916:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10908:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"10908:7:3","typeDescriptions":{}}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10908:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10920:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1417,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1729,1803],"referencedDeclaration":1803,"src":"10878:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10878:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1429,"nodeType":"ExpressionStatement","src":"10878:48:3"},{"id":1438,"nodeType":"UncheckedBlock","src":"10941:65:3","statements":[{"expression":{"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1430,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"10969:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10971:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":847,"src":"10969:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1434,"indexExpression":{"id":1432,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"10981:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10969:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10990:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10969:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1437,"nodeType":"ExpressionStatement","src":"10969:22:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"11030:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11044:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11036:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"11036:7:3","typeDescriptions":{}}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11036:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11030:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"nodeType":"IfStatement","src":"11026:109:3","trueBody":{"id":1456,"nodeType":"Block","src":"11048:87:3","statements":[{"id":1455,"nodeType":"UncheckedBlock","src":"11062:63:3","statements":[{"expression":{"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1447,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"11090:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11092:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":847,"src":"11090:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1451,"indexExpression":{"id":1449,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"11102:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11090:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11109:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11090:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1454,"nodeType":"ExpressionStatement","src":"11090:20:3"}]}]}},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1458,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"11145:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11147:7:3","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":843,"src":"11145:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1462,"indexExpression":{"id":1460,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"11155:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11145:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1463,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"11166:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11145:23:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1465,"nodeType":"ExpressionStatement","src":"11145:23:3"},{"eventCall":{"arguments":[{"id":1467,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"11193:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"11199:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1469,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"11203:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1466,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"11184:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11184:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1471,"nodeType":"EmitStatement","src":"11179:32:3"},{"expression":{"id":1472,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"11229:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1384,"id":1473,"nodeType":"Return","src":"11222:11:3"}]},"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"9797:582:3","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1475,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"10393:7:3","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"to","nameLocation":"10409:2:3","nodeType":"VariableDeclaration","scope":1475,"src":"10401:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"10401:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"tokenId","nameLocation":"10421:7:3","nodeType":"VariableDeclaration","scope":1475,"src":"10413:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"10413:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"auth","nameLocation":"10438:4:3","nodeType":"VariableDeclaration","scope":1475,"src":"10430:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"10430:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10400:43:3"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1475,"src":"10470:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"10470:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10469:9:3"},"scope":1878,"src":"10384:856:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1524,"nodeType":"Block","src":"11615:274:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1483,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"11629:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11643:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11635:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"11635:7:3","typeDescriptions":{}}},"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11635:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11629:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1497,"nodeType":"IfStatement","src":"11625:87:3","trueBody":{"id":1496,"nodeType":"Block","src":"11647:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11698:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11690:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"11690:7:3","typeDescriptions":{}}},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11690:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1489,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"11668:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11668:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1495,"nodeType":"RevertStatement","src":"11661:40:3"}]}},{"assignments":[1499],"declarations":[{"constant":false,"id":1499,"mutability":"mutable","name":"previousOwner","nameLocation":"11729:13:3","nodeType":"VariableDeclaration","scope":1524,"src":"11721:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"11721:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1508,"initialValue":{"arguments":[{"id":1501,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"11753:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1502,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"11757:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11774:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11766:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"11766:7:3","typeDescriptions":{}}},"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11766:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1500,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11745:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11721:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"11791:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11816:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11808:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"11808:7:3","typeDescriptions":{}}},"id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11808:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11791:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1523,"nodeType":"IfStatement","src":"11787:96:3","trueBody":{"id":1522,"nodeType":"Block","src":"11820:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11869:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11861:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"11861:7:3","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11861:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1515,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"11841:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11841:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1521,"nodeType":"RevertStatement","src":"11834:38:3"}]}}]},"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"11246:311:3","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1525,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11571:5:3","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"to","nameLocation":"11585:2:3","nodeType":"VariableDeclaration","scope":1525,"src":"11577:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"11577:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"tokenId","nameLocation":"11597:7:3","nodeType":"VariableDeclaration","scope":1525,"src":"11589:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"11589:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11576:29:3"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[],"src":"11615:0:3"},"scope":1878,"src":"11562:327:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1539,"nodeType":"Block","src":"12297:43:3","statements":[{"expression":{"arguments":[{"id":1534,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"12317:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1535,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"12321:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12330:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1533,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1540,1570],"referencedDeclaration":1570,"src":"12307:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12307:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"ExpressionStatement","src":"12307:26:3"}]},"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"11895:340:3","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12249:9:3","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"to","nameLocation":"12267:2:3","nodeType":"VariableDeclaration","scope":1540,"src":"12259:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"12259:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"tokenId","nameLocation":"12279:7:3","nodeType":"VariableDeclaration","scope":1540,"src":"12271:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"12271:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12258:29:3"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[],"src":"12297:0:3"},"scope":1878,"src":"12240:100:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1569,"nodeType":"Block","src":"12645:123:3","statements":[{"expression":{"arguments":[{"id":1551,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"12661:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1552,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"12665:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1550,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"12655:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12655:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1554,"nodeType":"ExpressionStatement","src":"12655:18:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1558,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"12717:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12717:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12739:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12731:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"12731:7:3","typeDescriptions":{}}},"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12731:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"12743:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"12747:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1566,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"12756:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1555,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"12683:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2935_$","typeString":"type(library ERC721Utils)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12695:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"12683:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12683:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"12683:78:3"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"12346:210:3","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12570:9:3","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"to","nameLocation":"12588:2:3","nodeType":"VariableDeclaration","scope":1570,"src":"12580:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"12580:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"tokenId","nameLocation":"12600:7:3","nodeType":"VariableDeclaration","scope":1570,"src":"12592:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"12592:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"data","nameLocation":"12622:4:3","nodeType":"VariableDeclaration","scope":1570,"src":"12609:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1546,"name":"bytes","nodeType":"ElementaryTypeName","src":"12609:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12579:48:3"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[],"src":"12645:0:3"},"scope":1878,"src":"12561:207:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1602,"nodeType":"Block","src":"13135:186:3","statements":[{"assignments":[1577],"declarations":[{"constant":false,"id":1577,"mutability":"mutable","name":"previousOwner","nameLocation":"13153:13:3","nodeType":"VariableDeclaration","scope":1602,"src":"13145:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"13145:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1589,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13185:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13177:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"13177:7:3","typeDescriptions":{}}},"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13177:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1583,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"13189:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13206:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13198:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"13198:7:3","typeDescriptions":{}}},"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13198:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1578,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"13169:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13169:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13145:64:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1590,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"13223:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13248:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13240:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"13240:7:3","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13240:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13223:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1601,"nodeType":"IfStatement","src":"13219:96:3","trueBody":{"id":1600,"nodeType":"Block","src":"13252:63:3","statements":[{"errorCall":{"arguments":[{"id":1597,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"13296:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1596,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"13273:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13273:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1599,"nodeType":"RevertStatement","src":"13266:38:3"}]}}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"12774:315:3","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1603,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13103:5:3","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"tokenId","nameLocation":"13117:7:3","nodeType":"VariableDeclaration","scope":1603,"src":"13109:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"13109:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13108:17:3"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"13135:0:3"},"scope":1878,"src":"13094:227:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1662,"nodeType":"Block","src":"13716:389:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"13730:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13744:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13736:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"13736:7:3","typeDescriptions":{}}},"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13736:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13730:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1627,"nodeType":"IfStatement","src":"13726:87:3","trueBody":{"id":1626,"nodeType":"Block","src":"13748:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13799:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13791:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"13791:7:3","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13791:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1619,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"13769:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13769:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1625,"nodeType":"RevertStatement","src":"13762:40:3"}]}},{"assignments":[1629],"declarations":[{"constant":false,"id":1629,"mutability":"mutable","name":"previousOwner","nameLocation":"13830:13:3","nodeType":"VariableDeclaration","scope":1662,"src":"13822:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"13822:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1638,"initialValue":{"arguments":[{"id":1631,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"13854:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1632,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"13858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13875:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13867:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"13867:7:3","typeDescriptions":{}}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13867:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1630,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"13846:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13846:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13822:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1639,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"13892:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13917:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13909:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"13909:7:3","typeDescriptions":{}}},"id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13909:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13892:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"13994:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1651,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"14011:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13994:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1660,"nodeType":"IfStatement","src":"13990:109:3","trueBody":{"id":1659,"nodeType":"Block","src":"14017:82:3","statements":[{"errorCall":{"arguments":[{"id":1654,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"14059:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1655,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"14065:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1656,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"14074:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1653,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"14038:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14038:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1658,"nodeType":"RevertStatement","src":"14031:57:3"}]}},"id":1661,"nodeType":"IfStatement","src":"13888:211:3","trueBody":{"id":1649,"nodeType":"Block","src":"13921:63:3","statements":[{"errorCall":{"arguments":[{"id":1646,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"13965:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1645,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"13942:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13942:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1648,"nodeType":"RevertStatement","src":"13935:38:3"}]}}]},"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"13327:313:3","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"13654:9:3","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"from","nameLocation":"13672:4:3","nodeType":"VariableDeclaration","scope":1663,"src":"13664:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"13664:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"to","nameLocation":"13686:2:3","nodeType":"VariableDeclaration","scope":1663,"src":"13678:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"13678:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"tokenId","nameLocation":"13698:7:3","nodeType":"VariableDeclaration","scope":1663,"src":"13690:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"13690:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13663:43:3"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[],"src":"13716:0:3"},"scope":1878,"src":"13645:460:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1680,"nodeType":"Block","src":"15114:53:3","statements":[{"expression":{"arguments":[{"id":1674,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"15138:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1675,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"15144:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"15148:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15157:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1673,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1681,1711],"referencedDeclaration":1711,"src":"15124:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1679,"nodeType":"ExpressionStatement","src":"15124:36:3"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"14111:923:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"15048:13:3","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"from","nameLocation":"15070:4:3","nodeType":"VariableDeclaration","scope":1681,"src":"15062:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"15062:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"to","nameLocation":"15084:2:3","nodeType":"VariableDeclaration","scope":1681,"src":"15076:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"15076:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"tokenId","nameLocation":"15096:7:3","nodeType":"VariableDeclaration","scope":1681,"src":"15088:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"15088:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15061:43:3"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[],"src":"15114:0:3"},"scope":1878,"src":"15039:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"15506:127:3","statements":[{"expression":{"arguments":[{"id":1694,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"15526:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1695,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"15532:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1696,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"15536:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"15516:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15516:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"ExpressionStatement","src":"15516:28:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1702,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"15588:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15588:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1704,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"15602:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1705,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"15608:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"15612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1707,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"15621:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1699,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"15554:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2935_$","typeString":"type(library ERC721Utils)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15566:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"15554:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15554:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"15554:72:3"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"15173:226:3","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"15413:13:3","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"from","nameLocation":"15435:4:3","nodeType":"VariableDeclaration","scope":1711,"src":"15427:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"15427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"to","nameLocation":"15449:2:3","nodeType":"VariableDeclaration","scope":1711,"src":"15441:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"15441:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"tokenId","nameLocation":"15461:7:3","nodeType":"VariableDeclaration","scope":1711,"src":"15453:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"15453:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"data","nameLocation":"15483:4:3","nodeType":"VariableDeclaration","scope":1711,"src":"15470:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1689,"name":"bytes","nodeType":"ElementaryTypeName","src":"15470:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15426:62:3"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[],"src":"15506:0:3"},"scope":1878,"src":"15404:229:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1728,"nodeType":"Block","src":"16146:50:3","statements":[{"expression":{"arguments":[{"id":1722,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"16165:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1723,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"16169:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1724,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"16178:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16184:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1721,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1729,1803],"referencedDeclaration":1803,"src":"16156:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16156:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1727,"nodeType":"ExpressionStatement","src":"16156:33:3"}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"15639:432:3","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1729,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16085:8:3","nodeType":"FunctionDefinition","parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"to","nameLocation":"16102:2:3","nodeType":"VariableDeclaration","scope":1729,"src":"16094:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"16094:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"tokenId","nameLocation":"16114:7:3","nodeType":"VariableDeclaration","scope":1729,"src":"16106:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"16106:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"auth","nameLocation":"16131:4:3","nodeType":"VariableDeclaration","scope":1729,"src":"16123:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"16123:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16093:43:3"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[],"src":"16146:0:3"},"scope":1878,"src":"16076:120:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1802,"nodeType":"Block","src":"16472:625:3","statements":[{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"$","nameLocation":"16504:1:3","nodeType":"VariableDeclaration","scope":1802,"src":"16482:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1742,"nodeType":"UserDefinedTypeName","pathNode":{"id":1741,"name":"ERC721Storage","nameLocations":["16482:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"16482:13:3"},"referencedDeclaration":858,"src":"16482:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1746,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1744,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"16508:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16508:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"16482:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1747,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"16593:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"16606:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16614:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"16614:7:3","typeDescriptions":{}}},"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16614:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16606:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16593:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1793,"nodeType":"IfStatement","src":"16589:460:3","trueBody":{"id":1792,"nodeType":"Block","src":"16626:423:3","statements":[{"assignments":[1756],"declarations":[{"constant":false,"id":1756,"mutability":"mutable","name":"owner","nameLocation":"16648:5:3","nodeType":"VariableDeclaration","scope":1792,"src":"16640:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"16640:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1760,"initialValue":{"arguments":[{"id":1758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"16670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1757,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"16656:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16656:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16640:38:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1761,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"16806:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16822:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16814:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"16814:7:3","typeDescriptions":{}}},"id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16814:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16806:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"16828:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1768,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"16837:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16828:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16806:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16845:30:3","subExpression":{"arguments":[{"id":1772,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"16863:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1773,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"16870:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1771,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"16846:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16846:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16806:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1782,"nodeType":"IfStatement","src":"16802:142:3","trueBody":{"id":1781,"nodeType":"Block","src":"16877:67:3","statements":[{"errorCall":{"arguments":[{"id":1778,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"16924:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1777,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"16902:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16902:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1780,"nodeType":"RevertStatement","src":"16895:34:3"}]}},{"condition":{"id":1783,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"16962:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1791,"nodeType":"IfStatement","src":"16958:81:3","trueBody":{"id":1790,"nodeType":"Block","src":"16973:66:3","statements":[{"eventCall":{"arguments":[{"id":1785,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"17005:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"17012:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"17016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1784,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"16996:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16996:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"EmitStatement","src":"16991:33:3"}]}}]}},{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1794,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"17059:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17061:15:3","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":851,"src":"17059:17:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1798,"indexExpression":{"id":1796,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"17077:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17059:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1799,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"17088:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17059:31:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1801,"nodeType":"ExpressionStatement","src":"17059:31:3"}]},"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"16202:171:3","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1803,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16387:8:3","nodeType":"FunctionDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"to","nameLocation":"16404:2:3","nodeType":"VariableDeclaration","scope":1803,"src":"16396:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"16396:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"tokenId","nameLocation":"16416:7:3","nodeType":"VariableDeclaration","scope":1803,"src":"16408:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"16408:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"auth","nameLocation":"16433:4:3","nodeType":"VariableDeclaration","scope":1803,"src":"16425:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"16425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"emitEvent","nameLocation":"16444:9:3","nodeType":"VariableDeclaration","scope":1803,"src":"16439:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1737,"name":"bool","nodeType":"ElementaryTypeName","src":"16439:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16395:59:3"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[],"src":"16472:0:3"},"scope":1878,"src":"16378:719:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1847,"nodeType":"Block","src":"17399:276:3","statements":[{"assignments":[1815],"declarations":[{"constant":false,"id":1815,"mutability":"mutable","name":"$","nameLocation":"17431:1:3","nodeType":"VariableDeclaration","scope":1847,"src":"17409:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1814,"nodeType":"UserDefinedTypeName","pathNode":{"id":1813,"name":"ERC721Storage","nameLocations":["17409:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"17409:13:3"},"referencedDeclaration":858,"src":"17409:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1818,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1816,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"17435:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$858_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17435:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17409:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1819,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"17468:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17488:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17480:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"17480:7:3","typeDescriptions":{}}},"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17480:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17468:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1830,"nodeType":"IfStatement","src":"17464:91:3","trueBody":{"id":1829,"nodeType":"Block","src":"17492:63:3","statements":[{"errorCall":{"arguments":[{"id":1826,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"17535:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1825,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"17513:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17513:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1828,"nodeType":"RevertStatement","src":"17506:38:3"}]}},{"expression":{"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1831,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"17564:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$858_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17566:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":857,"src":"17564:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1836,"indexExpression":{"id":1833,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"17585:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17564:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1837,"indexExpression":{"id":1834,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"17592:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17564:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1838,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"17604:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17564:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1840,"nodeType":"ExpressionStatement","src":"17564:48:3"},{"eventCall":{"arguments":[{"id":1842,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"17642:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1843,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"17649:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1844,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"17659:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1841,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"17627:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17627:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"EmitStatement","src":"17622:46:3"}]},"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"17103:198:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1848,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"17315:18:3","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"owner","nameLocation":"17342:5:3","nodeType":"VariableDeclaration","scope":1848,"src":"17334:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"17334:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"operator","nameLocation":"17357:8:3","nodeType":"VariableDeclaration","scope":1848,"src":"17349:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"17349:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"approved","nameLocation":"17372:8:3","nodeType":"VariableDeclaration","scope":1848,"src":"17367:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1809,"name":"bool","nodeType":"ElementaryTypeName","src":"17367:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17333:48:3"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"17399:0:3"},"scope":1878,"src":"17306:369:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"17982:169:3","statements":[{"assignments":[1857],"declarations":[{"constant":false,"id":1857,"mutability":"mutable","name":"owner","nameLocation":"18000:5:3","nodeType":"VariableDeclaration","scope":1876,"src":"17992:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"17992:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1861,"initialValue":{"arguments":[{"id":1859,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"18017:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1858,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"18008:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18008:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17992:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"18039:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18056:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18048:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1863,"name":"address","nodeType":"ElementaryTypeName","src":"18048:7:3","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18048:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18039:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1873,"nodeType":"IfStatement","src":"18035:88:3","trueBody":{"id":1872,"nodeType":"Block","src":"18060:63:3","statements":[{"errorCall":{"arguments":[{"id":1869,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"18104:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1868,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"18081:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18081:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1871,"nodeType":"RevertStatement","src":"18074:38:3"}]}},{"expression":{"id":1874,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"18139:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1855,"id":1875,"nodeType":"Return","src":"18132:12:3"}]},"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"17681:224:3","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"17919:13:3","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"tokenId","nameLocation":"17941:7:3","nodeType":"VariableDeclaration","scope":1877,"src":"17933:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17932:17:3"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1877,"src":"17973:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"17973:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17972:9:3"},"scope":1878,"src":"17910:241:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1879,"src":"1099:17054:3","usedErrors":[379,382,2302,2307,2316,2321,2326,2333,2338,2343],"usedEvents":[387,2711,2720,2729]}],"src":"107:18047:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1924],"Initializable":[616]},"id":1925,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1880,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1882,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1925,"sourceUnit":617,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1881,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1884,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"728:13:4"},"id":1885,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1883,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1924,"linearizedBaseContracts":[1924,616],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1890,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1891,"implemented":true,"kind":"function","modifiers":[{"id":1888,"kind":"modifierInvocation","modifierName":{"id":1887,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1924,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1897,"implemented":true,"kind":"function","modifiers":[{"id":1894,"kind":"modifierInvocation","modifierName":{"id":1893,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1924,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1905,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1902,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1901,"id":1904,"nodeType":"Return","src":"959:17:4"}]},"id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1906,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1899,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1924,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1914,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1910,"id":1913,"nodeType":"Return","src":"1066:15:4"}]},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1915,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1924,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1922,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1919,"id":1921,"nodeType":"Return","src":"1176:8:4"}]},"id":1923,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1923,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1924,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1925,"src":"688:505:4","usedErrors":[379,382],"usedEvents":[387]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1924],"Initializable":[616],"PausableUpgradeable":[2100]},"id":2101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1926,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1928,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":1925,"src":"128:67:5","symbolAliases":[{"foreign":{"id":1927,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"136:18:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1930,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":617,"src":"196:63:5","symbolAliases":[{"foreign":{"id":1929,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"204:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1932,"name":"Initializable","nameLocations":["742:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"742:13:5"},"id":1933,"nodeType":"InheritanceSpecifier","src":"742:13:5"},{"baseName":{"id":1934,"name":"ContextUpgradeable","nameLocations":["757:18:5"],"nodeType":"IdentifierPath","referencedDeclaration":1924,"src":"757:18:5"},"id":1935,"nodeType":"InheritanceSpecifier","src":"757:18:5"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"261:439:5","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2100,"linearizedBaseContracts":[2100,1924,616],"name":"PausableUpgradeable","nameLocation":"719:19:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"782:66:5","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":1939,"members":[{"constant":false,"id":1938,"mutability":"mutable","name":"_paused","nameLocation":"891:7:5","nodeType":"VariableDeclaration","scope":1939,"src":"886:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1937,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:5","nodeType":"StructDefinition","scope":2100,"src":"853:52:5","visibility":"public"},{"constant":true,"id":1942,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:5","nodeType":"VariableDeclaration","scope":2100,"src":"1023:117:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:5","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":1949,"nodeType":"Block","src":"1227:82:5","statements":[{"AST":{"nativeSrc":"1246:57:5","nodeType":"YulBlock","src":"1246:57:5","statements":[{"nativeSrc":"1260:33:5","nodeType":"YulAssignment","src":"1260:33:5","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:5","nodeType":"YulIdentifier","src":"1270:23:5"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:5","nodeType":"YulIdentifier","src":"1260:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1946,"isOffset":false,"isSlot":true,"src":"1260:6:5","suffix":"slot","valueSize":1},{"declaration":1942,"isOffset":false,"isSlot":false,"src":"1270:23:5","valueSize":1}],"id":1948,"nodeType":"InlineAssembly","src":"1237:66:5"}]},"id":1950,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:5","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[],"src":"1175:2:5"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"$","nameLocation":"1224:1:5","nodeType":"VariableDeclaration","scope":1950,"src":"1200:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1945,"nodeType":"UserDefinedTypeName","pathNode":{"id":1944,"name":"PausableStorage","nameLocations":["1200:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1939,"src":"1200:15:5"},"referencedDeclaration":1939,"src":"1200:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:5"},"scope":2100,"src":"1147:162:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"1315:73:5","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1955,"name":"Paused","nameLocation":"1399:6:5","nodeType":"EventDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:5","nodeType":"VariableDeclaration","scope":1955,"src":"1406:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1952,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:5"},"src":"1393:30:5"},{"anonymous":false,"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"1429:70:5","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1960,"name":"Unpaused","nameLocation":"1510:8:5","nodeType":"EventDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:5","nodeType":"VariableDeclaration","scope":1960,"src":"1519:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:5"},"src":"1504:32:5"},{"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"1542:76:5","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1963,"name":"EnforcedPause","nameLocation":"1629:13:5","nodeType":"ErrorDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[],"src":"1642:2:5"},"src":"1623:22:5"},{"documentation":{"id":1964,"nodeType":"StructuredDocumentation","src":"1651:80:5","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1966,"name":"ExpectedPause","nameLocation":"1742:13:5","nodeType":"ErrorDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[],"src":"1755:2:5"},"src":"1736:22:5"},{"body":{"id":1975,"nodeType":"Block","src":"1889:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1972,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"1899:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"ExpressionStatement","src":"1899:27:5"}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"1764:67:5","text":" @dev Initializes the contract in unpaused state."},"id":1976,"implemented":true,"kind":"function","modifiers":[{"id":1970,"kind":"modifierInvocation","modifierName":{"id":1969,"name":"onlyInitializing","nameLocations":["1872:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"1872:16:5"},"nodeType":"ModifierInvocation","src":"1872:16:5"}],"name":"__Pausable_init","nameLocation":"1845:15:5","nodeType":"FunctionDefinition","parameters":{"id":1968,"nodeType":"ParameterList","parameters":[],"src":"1860:2:5"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[],"src":"1889:0:5"},"scope":2100,"src":"1836:97:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1993,"nodeType":"Block","src":"2002:93:5","statements":[{"assignments":[1983],"declarations":[{"constant":false,"id":1983,"mutability":"mutable","name":"$","nameLocation":"2036:1:5","nodeType":"VariableDeclaration","scope":1993,"src":"2012:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1982,"nodeType":"UserDefinedTypeName","pathNode":{"id":1981,"name":"PausableStorage","nameLocations":["2012:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1939,"src":"2012:15:5"},"referencedDeclaration":1939,"src":"2012:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1986,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1984,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2040:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1939_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2012:49:5"},{"expression":{"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1987,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"2071:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2073:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1938,"src":"2071:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2083:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2071:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1992,"nodeType":"ExpressionStatement","src":"2071:17:5"}]},"id":1994,"implemented":true,"kind":"function","modifiers":[{"id":1979,"kind":"modifierInvocation","modifierName":{"id":1978,"name":"onlyInitializing","nameLocations":["1985:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"1985:16:5"},"nodeType":"ModifierInvocation","src":"1985:16:5"}],"name":"__Pausable_init_unchained","nameLocation":"1948:25:5","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[],"src":"1973:2:5"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[],"src":"2002:0:5"},"scope":2100,"src":"1939:156:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2001,"nodeType":"Block","src":"2306:47:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1997,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"2316:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1999,"nodeType":"ExpressionStatement","src":"2316:19:5"},{"id":2000,"nodeType":"PlaceholderStatement","src":"2345:1:5"}]},"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"2101:175:5","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2002,"name":"whenNotPaused","nameLocation":"2290:13:5","nodeType":"ModifierDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[],"src":"2303:2:5"},"src":"2281:72:5","virtual":false,"visibility":"internal"},{"body":{"id":2009,"nodeType":"Block","src":"2553:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2005,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2563:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2007,"nodeType":"ExpressionStatement","src":"2563:16:5"},{"id":2008,"nodeType":"PlaceholderStatement","src":"2589:1:5"}]},"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"2359:167:5","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2010,"name":"whenPaused","nameLocation":"2540:10:5","nodeType":"ModifierDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[],"src":"2550:2:5"},"src":"2531:66:5","virtual":false,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"2745:92:5","statements":[{"assignments":[2018],"declarations":[{"constant":false,"id":2018,"mutability":"mutable","name":"$","nameLocation":"2779:1:5","nodeType":"VariableDeclaration","scope":2025,"src":"2755:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2017,"nodeType":"UserDefinedTypeName","pathNode":{"id":2016,"name":"PausableStorage","nameLocations":["2755:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1939,"src":"2755:15:5"},"referencedDeclaration":1939,"src":"2755:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2021,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2019,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2783:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1939_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2755:49:5"},{"expression":{"expression":{"id":2022,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"2821:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2823:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1938,"src":"2821:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2015,"id":2024,"nodeType":"Return","src":"2814:16:5"}]},"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"2603:84:5","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2701:6:5","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"2707:2:5"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"2739:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:5"},"scope":2100,"src":"2692:145:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2037,"nodeType":"Block","src":"2956:77:5","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2030,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"2970:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2036,"nodeType":"IfStatement","src":"2966:61:5","trueBody":{"id":2035,"nodeType":"Block","src":"2980:47:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2032,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3001:13:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2034,"nodeType":"RevertStatement","src":"2994:22:5"}]}}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"2843:57:5","text":" @dev Throws if the contract is paused."},"id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2914:17:5","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"2931:2:5"},"returnParameters":{"id":2029,"nodeType":"ParameterList","parameters":[],"src":"2956:0:5"},"scope":2100,"src":"2905:128:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"3153:78:5","statements":[{"condition":{"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3167:9:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2042,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"3168:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2049,"nodeType":"IfStatement","src":"3163:62:5","trueBody":{"id":2048,"nodeType":"Block","src":"3178:47:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2045,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"3199:13:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2047,"nodeType":"RevertStatement","src":"3192:22:5"}]}}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"3039:61:5","text":" @dev Throws if the contract is not paused."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"3114:14:5","nodeType":"FunctionDefinition","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[],"src":"3128:2:5"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[],"src":"3153:0:5"},"scope":2100,"src":"3105:126:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"3415:127:5","statements":[{"assignments":[2059],"declarations":[{"constant":false,"id":2059,"mutability":"mutable","name":"$","nameLocation":"3449:1:5","nodeType":"VariableDeclaration","scope":2074,"src":"3425:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2058,"nodeType":"UserDefinedTypeName","pathNode":{"id":2057,"name":"PausableStorage","nameLocations":["3425:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1939,"src":"3425:15:5"},"referencedDeclaration":1939,"src":"3425:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2062,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2060,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"3453:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1939_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3425:49:5"},{"expression":{"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2063,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"3484:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3486:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1938,"src":"3484:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3496:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2068,"nodeType":"ExpressionStatement","src":"3484:16:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2070,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"3522:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2069,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"3515:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2073,"nodeType":"EmitStatement","src":"3510:25:5"}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"3237:124:5","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2075,"implemented":true,"kind":"function","modifiers":[{"id":2055,"kind":"modifierInvocation","modifierName":{"id":2054,"name":"whenNotPaused","nameLocations":["3401:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"3401:13:5"},"nodeType":"ModifierInvocation","src":"3401:13:5"}],"name":"_pause","nameLocation":"3375:6:5","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"3381:2:5"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[],"src":"3415:0:5"},"scope":2100,"src":"3366:176:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2098,"nodeType":"Block","src":"3722:130:5","statements":[{"assignments":[2083],"declarations":[{"constant":false,"id":2083,"mutability":"mutable","name":"$","nameLocation":"3756:1:5","nodeType":"VariableDeclaration","scope":2098,"src":"3732:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2082,"nodeType":"UserDefinedTypeName","pathNode":{"id":2081,"name":"PausableStorage","nameLocations":["3732:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1939,"src":"3732:15:5"},"referencedDeclaration":1939,"src":"3732:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2086,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2084,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"3760:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1939_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3732:49:5"},{"expression":{"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2087,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"3791:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1939_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3793:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1938,"src":"3791:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3803:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3791:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2092,"nodeType":"ExpressionStatement","src":"3791:17:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2094,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"3832:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2093,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"3823:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2097,"nodeType":"EmitStatement","src":"3818:27:5"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"3548:121:5","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2099,"implemented":true,"kind":"function","modifiers":[{"id":2079,"kind":"modifierInvocation","modifierName":{"id":2078,"name":"whenPaused","nameLocations":["3711:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":2010,"src":"3711:10:5"},"nodeType":"ModifierInvocation","src":"3711:10:5"}],"name":"_unpause","nameLocation":"3683:8:5","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[],"src":"3691:2:5"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[],"src":"3722:0:5"},"scope":2100,"src":"3674:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2101,"src":"701:3153:5","usedErrors":[379,382,1963,1966],"usedEvents":[387,1955,1960]}],"src":"102:3753:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2140],"IERC165":[4215],"Initializable":[616]},"id":2141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2102,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2141,"sourceUnit":4216,"src":"140:80:6","symbolAliases":[{"foreign":{"id":2103,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2141,"sourceUnit":617,"src":"221:66:6","symbolAliases":[{"foreign":{"id":2105,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"229:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2108,"name":"Initializable","nameLocations":["808:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"808:13:6"},"id":2109,"nodeType":"InheritanceSpecifier","src":"808:13:6"},{"baseName":{"id":2110,"name":"IERC165","nameLocations":["823:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":4215,"src":"823:7:6"},"id":2111,"nodeType":"InheritanceSpecifier","src":"823:7:6"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"289:479:6","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2140,"linearizedBaseContracts":[2140,4215,616],"name":"ERC165Upgradeable","nameLocation":"787:17:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":2116,"nodeType":"Block","src":"888:7:6","statements":[]},"id":2117,"implemented":true,"kind":"function","modifiers":[{"id":2114,"kind":"modifierInvocation","modifierName":{"id":2113,"name":"onlyInitializing","nameLocations":["871:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"871:16:6"},"nodeType":"ModifierInvocation","src":"871:16:6"}],"name":"__ERC165_init","nameLocation":"846:13:6","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[],"src":"859:2:6"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[],"src":"888:0:6"},"scope":2140,"src":"837:58:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2122,"nodeType":"Block","src":"962:7:6","statements":[]},"id":2123,"implemented":true,"kind":"function","modifiers":[{"id":2120,"kind":"modifierInvocation","modifierName":{"id":2119,"name":"onlyInitializing","nameLocations":["945:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"945:16:6"},"nodeType":"ModifierInvocation","src":"945:16:6"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:6","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"933:2:6"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[],"src":"962:0:6"},"scope":2140,"src":"901:68:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4214],"body":{"id":2138,"nodeType":"Block","src":"1117:64:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2131,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"1134:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2133,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"1154:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4215_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4215_$","typeString":"type(contract IERC165)"}],"id":2132,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4215","typeString":"type(contract IERC165)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2130,"id":2137,"nodeType":"Return","src":"1127:47:6"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"974:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:6","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:6","nodeType":"VariableDeclaration","scope":2139,"src":"1062:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2125,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:6"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2139,"src":"1111:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2128,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:6"},"scope":2140,"src":"1035:146:6","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2141,"src":"769:414:6","usedErrors":[379,382],"usedEvents":[387]}],"src":"114:1070:6"},"id":6},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[2223]},"id":2224,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2142,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"135:90:7","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":2223,"linearizedBaseContracts":[2223],"name":"IAccessControl","nameLocation":"236:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"257:56:7","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":2150,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:7","nodeType":"ErrorDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"account","nameLocation":"365:7:7","nodeType":"VariableDeclaration","scope":2150,"src":"357:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2145,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:7","nodeType":"VariableDeclaration","scope":2150,"src":"374:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:7"},"src":"318:76:7"},{"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"400:148:7","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":2153,"name":"AccessControlBadConfirmation","nameLocation":"559:28:7","nodeType":"ErrorDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[],"src":"587:2:7"},"src":"553:37:7"},{"anonymous":false,"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"596:254:7","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":2162,"name":"RoleAdminChanged","nameLocation":"861:16:7","nodeType":"EventDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:7","nodeType":"VariableDeclaration","scope":2162,"src":"878:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2158,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:7","nodeType":"VariableDeclaration","scope":2162,"src":"900:33:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2160,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:7","nodeType":"VariableDeclaration","scope":2162,"src":"935:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:7"},"src":"855:110:7"},{"anonymous":false,"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"971:295:7","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":2171,"name":"RoleGranted","nameLocation":"1277:11:7","nodeType":"EventDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:7","nodeType":"VariableDeclaration","scope":2171,"src":"1289:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2167,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:7","nodeType":"VariableDeclaration","scope":2171,"src":"1311:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2169,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:7","nodeType":"VariableDeclaration","scope":2171,"src":"1336:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2168,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:7"},"src":"1271:89:7"},{"anonymous":false,"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"1366:275:7","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":2180,"name":"RoleRevoked","nameLocation":"1652:11:7","nodeType":"EventDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:7","nodeType":"VariableDeclaration","scope":2180,"src":"1664:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2176,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:7","nodeType":"VariableDeclaration","scope":2180,"src":"1686:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:7","nodeType":"VariableDeclaration","scope":2180,"src":"1711:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:7"},"src":"1646:89:7"},{"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"1741:76:7","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":2190,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:7","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"role","nameLocation":"1847:4:7","nodeType":"VariableDeclaration","scope":2190,"src":"1839:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"account","nameLocation":"1861:7:7","nodeType":"VariableDeclaration","scope":2190,"src":"1853:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2190,"src":"1893:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2187,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:7"},"scope":2223,"src":"1822:77:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"1905:184:7","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":2198,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:7","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"role","nameLocation":"2124:4:7","nodeType":"VariableDeclaration","scope":2198,"src":"2116:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:7"},"returnParameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2198,"src":"2153:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:7"},"scope":2223,"src":"2094:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"2168:239:7","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":2206,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:7","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"role","nameLocation":"2439:4:7","nodeType":"VariableDeclaration","scope":2206,"src":"2431:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"account","nameLocation":"2453:7:7","nodeType":"VariableDeclaration","scope":2206,"src":"2445:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:7"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[],"src":"2470:0:7"},"scope":2223,"src":"2412:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"2477:223:7","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":2214,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:7","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"role","nameLocation":"2733:4:7","nodeType":"VariableDeclaration","scope":2214,"src":"2725:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"account","nameLocation":"2747:7:7","nodeType":"VariableDeclaration","scope":2214,"src":"2739:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:7"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[],"src":"2764:0:7"},"scope":2223,"src":"2705:60:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2215,"nodeType":"StructuredDocumentation","src":"2771:491:7","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":2222,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:7","nodeType":"FunctionDefinition","parameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"role","nameLocation":"3297:4:7","nodeType":"VariableDeclaration","scope":2222,"src":"3289:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:7","nodeType":"VariableDeclaration","scope":2222,"src":"3303:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2218,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:7"},"returnParameters":{"id":2221,"nodeType":"ParameterList","parameters":[],"src":"3339:0:7"},"scope":2223,"src":"3267:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2224,"src":"226:3116:7","usedErrors":[2150,2153],"usedEvents":[2162,2171,2180]}],"src":"109:3234:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[2244]},"id":2245,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2225,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"133:101:8","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":2244,"linearizedBaseContracts":[2244],"name":"IERC1967","nameLocation":"245:8:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"260:68:8","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2231,"name":"Upgraded","nameLocation":"339:8:8","nodeType":"EventDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"364:14:8","nodeType":"VariableDeclaration","scope":2231,"src":"348:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"347:32:8"},"src":"333:47:8"},{"anonymous":false,"documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"386:67:8","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":2238,"name":"AdminChanged","nameLocation":"464:12:8","nodeType":"EventDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"485:13:8","nodeType":"VariableDeclaration","scope":2238,"src":"477:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2236,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"508:8:8","nodeType":"VariableDeclaration","scope":2238,"src":"500:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:41:8"},"src":"458:60:8"},{"anonymous":false,"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"524:59:8","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":2243,"name":"BeaconUpgraded","nameLocation":"594:14:8","nodeType":"EventDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"625:6:8","nodeType":"VariableDeclaration","scope":2243,"src":"609:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:24:8"},"src":"588:45:8"}],"scope":2245,"src":"235:400:8","usedErrors":[],"usedEvents":[2231,2238,2243]}],"src":"107:529:8"},"id":8},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[2254]},"id":2255,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2246,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2247,"nodeType":"StructuredDocumentation","src":"139:204:9","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":2254,"linearizedBaseContracts":[2254],"name":"IERC1822Proxiable","nameLocation":"354:17:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"378:438:9","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":2253,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"830:13:9","nodeType":"FunctionDefinition","parameters":{"id":2249,"nodeType":"ParameterList","parameters":[],"src":"843:2:9"},"returnParameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2253,"src":"869:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"868:9:9"},"scope":2254,"src":"821:57:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2255,"src":"344:536:9","usedErrors":[],"usedEvents":[]}],"src":"113:768:9"},"id":9},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2391],"IERC20Errors":[2296],"IERC721Errors":[2344]},"id":2392,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2256,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"138:141:10","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2296,"linearizedBaseContracts":[2296],"name":"IERC20Errors","nameLocation":"290:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"309:309:10","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2266,"name":"ERC20InsufficientBalance","nameLocation":"629:24:10","nodeType":"ErrorDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"sender","nameLocation":"662:6:10","nodeType":"VariableDeclaration","scope":2266,"src":"654:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"balance","nameLocation":"678:7:10","nodeType":"VariableDeclaration","scope":2266,"src":"670:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"needed","nameLocation":"695:6:10","nodeType":"VariableDeclaration","scope":2266,"src":"687:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:10"},"src":"623:80:10"},{"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"709:152:10","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2271,"name":"ERC20InvalidSender","nameLocation":"872:18:10","nodeType":"ErrorDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"sender","nameLocation":"899:6:10","nodeType":"VariableDeclaration","scope":2271,"src":"891:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:10"},"src":"866:41:10"},{"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"913:159:10","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2276,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:10","nodeType":"ErrorDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:10","nodeType":"VariableDeclaration","scope":2276,"src":"1104:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:10"},"src":"1077:45:10"},{"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"1128:345:10","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2285,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:10","nodeType":"ErrorDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"spender","nameLocation":"1519:7:10","nodeType":"VariableDeclaration","scope":2285,"src":"1511:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:10","nodeType":"VariableDeclaration","scope":2285,"src":"1528:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"needed","nameLocation":"1555:6:10","nodeType":"VariableDeclaration","scope":2285,"src":"1547:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:10"},"src":"1478:85:10"},{"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"1569:174:10","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2290,"name":"ERC20InvalidApprover","nameLocation":"1754:20:10","nodeType":"ErrorDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"approver","nameLocation":"1783:8:10","nodeType":"VariableDeclaration","scope":2290,"src":"1775:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:10"},"src":"1748:45:10"},{"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"1799:195:10","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2295,"name":"ERC20InvalidSpender","nameLocation":"2005:19:10","nodeType":"ErrorDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"spender","nameLocation":"2033:7:10","nodeType":"VariableDeclaration","scope":2295,"src":"2025:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:10"},"src":"1999:43:10"}],"scope":2392,"src":"280:1764:10","usedErrors":[2266,2271,2276,2285,2290,2295],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"2046:143:10","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2344,"linearizedBaseContracts":[2344],"name":"IERC721Errors","nameLocation":"2200:13:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"2220:219:10","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2302,"name":"ERC721InvalidOwner","nameLocation":"2450:18:10","nodeType":"ErrorDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"owner","nameLocation":"2477:5:10","nodeType":"VariableDeclaration","scope":2302,"src":"2469:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:10"},"src":"2444:40:10"},{"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"2490:132:10","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2307,"name":"ERC721NonexistentToken","nameLocation":"2633:22:10","nodeType":"ErrorDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:10","nodeType":"VariableDeclaration","scope":2307,"src":"2656:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:10"},"src":"2627:46:10"},{"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"2679:289:10","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2316,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:10","nodeType":"ErrorDefinition","parameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"sender","nameLocation":"3008:6:10","nodeType":"VariableDeclaration","scope":2316,"src":"3000:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:10","nodeType":"VariableDeclaration","scope":2316,"src":"3016:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"owner","nameLocation":"3041:5:10","nodeType":"VariableDeclaration","scope":2316,"src":"3033:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:10"},"src":"2973:75:10"},{"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"3054:152:10","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2321,"name":"ERC721InvalidSender","nameLocation":"3217:19:10","nodeType":"ErrorDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"sender","nameLocation":"3245:6:10","nodeType":"VariableDeclaration","scope":2321,"src":"3237:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2318,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:10"},"src":"3211:42:10"},{"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"3259:159:10","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2326,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:10","nodeType":"ErrorDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:10","nodeType":"VariableDeclaration","scope":2326,"src":"3451:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:10"},"src":"3423:46:10"},{"documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"3475:247:10","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2333,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:10","nodeType":"ErrorDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"operator","nameLocation":"3768:8:10","nodeType":"VariableDeclaration","scope":2333,"src":"3760:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2328,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:10","nodeType":"VariableDeclaration","scope":2333,"src":"3778:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:10"},"src":"3727:68:10"},{"documentation":{"id":2334,"nodeType":"StructuredDocumentation","src":"3801:174:10","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2338,"name":"ERC721InvalidApprover","nameLocation":"3986:21:10","nodeType":"ErrorDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"approver","nameLocation":"4016:8:10","nodeType":"VariableDeclaration","scope":2338,"src":"4008:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:10"},"src":"3980:46:10"},{"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"4032:197:10","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2343,"name":"ERC721InvalidOperator","nameLocation":"4240:21:10","nodeType":"ErrorDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"operator","nameLocation":"4270:8:10","nodeType":"VariableDeclaration","scope":2343,"src":"4262:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:10"},"src":"4234:46:10"}],"scope":2392,"src":"2190:2092:10","usedErrors":[2302,2307,2316,2321,2326,2333,2338,2343],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"4284:145:10","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2391,"linearizedBaseContracts":[2391],"name":"IERC1155Errors","nameLocation":"4440:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"4461:361:10","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2356,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:10","nodeType":"ErrorDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"sender","nameLocation":"4868:6:10","nodeType":"VariableDeclaration","scope":2356,"src":"4860:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2350,"mutability":"mutable","name":"balance","nameLocation":"4884:7:10","nodeType":"VariableDeclaration","scope":2356,"src":"4876:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"needed","nameLocation":"4901:6:10","nodeType":"VariableDeclaration","scope":2356,"src":"4893:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:10","nodeType":"VariableDeclaration","scope":2356,"src":"4909:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:10"},"src":"4827:99:10"},{"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"4932:152:10","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2361,"name":"ERC1155InvalidSender","nameLocation":"5095:20:10","nodeType":"ErrorDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"sender","nameLocation":"5124:6:10","nodeType":"VariableDeclaration","scope":2361,"src":"5116:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2358,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:10"},"src":"5089:43:10"},{"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"5138:159:10","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2366,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:10","nodeType":"ErrorDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:10","nodeType":"VariableDeclaration","scope":2366,"src":"5331:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:10"},"src":"5302:47:10"},{"documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"5355:256:10","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2373,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:10","nodeType":"ErrorDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"operator","nameLocation":"5659:8:10","nodeType":"VariableDeclaration","scope":2373,"src":"5651:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"owner","nameLocation":"5677:5:10","nodeType":"VariableDeclaration","scope":2373,"src":"5669:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:10"},"src":"5616:68:10"},{"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"5690:174:10","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2378,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:10","nodeType":"ErrorDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"approver","nameLocation":"5906:8:10","nodeType":"VariableDeclaration","scope":2378,"src":"5898:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2375,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:10"},"src":"5869:47:10"},{"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"5922:197:10","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2383,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:10","nodeType":"ErrorDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"operator","nameLocation":"6161:8:10","nodeType":"VariableDeclaration","scope":2383,"src":"6153:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:10"},"src":"6124:47:10"},{"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"6177:280:10","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2390,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:10","nodeType":"ErrorDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:10","nodeType":"VariableDeclaration","scope":2390,"src":"6494:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:10","nodeType":"VariableDeclaration","scope":2390,"src":"6513:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:10"},"src":"6462:73:10"}],"scope":2392,"src":"4430:2107:10","usedErrors":[2356,2361,2366,2373,2378,2383,2390],"usedEvents":[]}],"src":"112:6426:10"},"id":10},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[3194],"ERC1967Utils":[2685],"IBeacon":[2695],"IERC1967":[2244],"StorageSlot":[3461]},"id":2686,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2393,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:11"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":2395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2686,"sourceUnit":2696,"src":"140:46:11","symbolAliases":[{"foreign":{"id":2394,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"148:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":2397,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2686,"sourceUnit":2245,"src":"187:55:11","symbolAliases":[{"foreign":{"id":2396,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"195:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2686,"sourceUnit":3195,"src":"243:48:11","symbolAliases":[{"foreign":{"id":2398,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"251:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":2401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2686,"sourceUnit":3462,"src":"292:56:11","symbolAliases":[{"foreign":{"id":2400,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"300:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"350:145:11","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":2685,"linearizedBaseContracts":[2685],"name":"ERC1967Utils","nameLocation":"504:12:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"523:170:11","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":2406,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:11","nodeType":"VariableDeclaration","scope":2685,"src":"763:114:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:11","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"884:69:11","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":2411,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:11","nodeType":"ErrorDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:11","nodeType":"VariableDeclaration","scope":2411,"src":"993:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:11"},"src":"958:59:11"},{"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"1023:60:11","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":2416,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:11","nodeType":"ErrorDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"admin","nameLocation":"1122:5:11","nodeType":"VariableDeclaration","scope":2416,"src":"1114:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2413,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:11"},"src":"1088:41:11"},{"documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"1135:61:11","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":2421,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:11","nodeType":"ErrorDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:11","nodeType":"VariableDeclaration","scope":2421,"src":"1228:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2418,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:11"},"src":"1201:43:11"},{"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"1250:82:11","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":2424,"name":"ERC1967NonPayable","nameLocation":"1343:17:11","nodeType":"ErrorDefinition","parameters":{"id":2423,"nodeType":"ParameterList","parameters":[],"src":"1360:2:11"},"src":"1337:26:11"},{"body":{"id":2436,"nodeType":"Block","src":"1502:77:11","statements":[{"expression":{"expression":{"arguments":[{"id":2432,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"1546:19:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2430,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"1519:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3461_$","typeString":"type(library StorageSlot)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"1519:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3343_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3343_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3342,"src":"1519:53:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2429,"id":2435,"nodeType":"Return","src":"1512:60:11"}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"1369:67:11","text":" @dev Returns the current implementation address."},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:11","nodeType":"FunctionDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[],"src":"1467:2:11"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2437,"src":"1493:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:11"},"scope":2685,"src":"1441:138:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"1734:218:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2443,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1748:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:11","memberName":"code","nodeType":"MemberAccess","src":"1748:22:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:11","memberName":"length","nodeType":"MemberAccess","src":"1748:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2453,"nodeType":"IfStatement","src":"1744:119:11","trueBody":{"id":2452,"nodeType":"Block","src":"1784:79:11","statements":[{"errorCall":{"arguments":[{"id":2449,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1834:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2448,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"1805:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2451,"nodeType":"RevertStatement","src":"1798:54:11"}]}},{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2457,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"1899:19:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2454,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"1872:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3461_$","typeString":"type(library StorageSlot)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"1872:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3343_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3343_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3342,"src":"1872:53:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2460,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1928:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2462,"nodeType":"ExpressionStatement","src":"1872:73:11"}]},"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"1585:81:11","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:11","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:11","nodeType":"VariableDeclaration","scope":2464,"src":"1699:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:11"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[],"src":"1734:0:11"},"scope":2685,"src":"1671:281:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2499,"nodeType":"Block","src":"2345:263:11","statements":[{"expression":{"arguments":[{"id":2473,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2374:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2472,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2355:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2475,"nodeType":"ExpressionStatement","src":"2355:37:11"},{"eventCall":{"arguments":[{"id":2479,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2425:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2476,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"2407:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2244_$","typeString":"type(contract IERC1967)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:11","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"2407:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2481,"nodeType":"EmitStatement","src":"2402:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2482,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2458:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:11","memberName":"length","nodeType":"MemberAccess","src":"2458:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2497,"nodeType":"Block","src":"2559:43:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2494,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"2573:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2496,"nodeType":"ExpressionStatement","src":"2573:18:11"}]},"id":2498,"nodeType":"IfStatement","src":"2454:148:11","trueBody":{"id":2493,"nodeType":"Block","src":"2475:78:11","statements":[{"expression":{"arguments":[{"id":2489,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2518:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2490,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2537:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2486,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"2489:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3194_$","typeString":"type(library Address)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:11","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"2489:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2492,"nodeType":"ExpressionStatement","src":"2489:53:11"}]}}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"1958:301:11","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:11","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:11","nodeType":"VariableDeclaration","scope":2500,"src":"2290:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"data","nameLocation":"2330:4:11","nodeType":"VariableDeclaration","scope":2500,"src":"2317:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2468,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:11"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[],"src":"2345:0:11"},"scope":2685,"src":"2264:344:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"2614:145:11","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":2504,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:11","nodeType":"VariableDeclaration","scope":2685,"src":"2829:105:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:11","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":2516,"nodeType":"Block","src":"3339:68:11","statements":[{"expression":{"expression":{"arguments":[{"id":2512,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3383:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2510,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"3356:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3461_$","typeString":"type(library StorageSlot)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"3356:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3343_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3343_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3342,"src":"3356:44:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2509,"id":2515,"nodeType":"Return","src":"3349:51:11"}]},"documentation":{"id":2505,"nodeType":"StructuredDocumentation","src":"2941:341:11","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:11","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[],"src":"3304:2:11"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2517,"src":"3330:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:11"},"scope":2685,"src":"3287:120:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2547,"nodeType":"Block","src":"3535:172:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"3549:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:11","typeDescriptions":{}}},"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2537,"nodeType":"IfStatement","src":"3545:91:11","trueBody":{"id":2536,"nodeType":"Block","src":"3573:63:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2530,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:11","typeDescriptions":{}}},"id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2529,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"3594:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2535,"nodeType":"RevertStatement","src":"3587:38:11"}]}},{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2541,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3672:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2538,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"3645:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3461_$","typeString":"type(library StorageSlot)"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"3645:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3343_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3343_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3342,"src":"3645:44:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2544,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"3692:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2546,"nodeType":"ExpressionStatement","src":"3645:55:11"}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"3413:72:11","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:11","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:11","nodeType":"VariableDeclaration","scope":2548,"src":"3509:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:11"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[],"src":"3535:0:11"},"scope":2685,"src":"3490:217:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2566,"nodeType":"Block","src":"3875:94:11","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2557,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"3912:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2559,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"3924:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2554,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3890:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2244_$","typeString":"type(contract IERC1967)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:11","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":2238,"src":"3890:21:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2561,"nodeType":"EmitStatement","src":"3885:48:11"},{"expression":{"arguments":[{"id":2563,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"3953:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2562,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"3943:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2565,"nodeType":"ExpressionStatement","src":"3943:19:11"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"3713:109:11","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:11","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:11","nodeType":"VariableDeclaration","scope":2567,"src":"3848:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:11"},"returnParameters":{"id":2553,"nodeType":"ParameterList","parameters":[],"src":"3875:0:11"},"scope":2685,"src":"3827:142:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"3975:201:11","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":2571,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:11","nodeType":"VariableDeclaration","scope":2685,"src":"4246:106:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:11","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"4468:69:11","statements":[{"expression":{"expression":{"arguments":[{"id":2579,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"4512:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2577,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"4485:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3461_$","typeString":"type(library StorageSlot)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"4485:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3343_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3343_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3342,"src":"4485:45:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2576,"id":2582,"nodeType":"Return","src":"4478:52:11"}]},"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"4359:51:11","text":" @dev Returns the current beacon."},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:11","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[],"src":"4433:2:11"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"4459:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:11"},"scope":2685,"src":"4415:122:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2629,"nodeType":"Block","src":"4667:390:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2590,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4681:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:11","memberName":"code","nodeType":"MemberAccess","src":"4681:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:11","memberName":"length","nodeType":"MemberAccess","src":"4681:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2600,"nodeType":"IfStatement","src":"4677:95:11","trueBody":{"id":2599,"nodeType":"Block","src":"4709:63:11","statements":[{"errorCall":{"arguments":[{"id":2596,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4751:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2595,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4730:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2598,"nodeType":"RevertStatement","src":"4723:38:11"}]}},{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2604,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"4809:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2601,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"4782:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3461_$","typeString":"type(library StorageSlot)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"4782:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3343_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3343_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3342,"src":"4782:45:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2607,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4830:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2609,"nodeType":"ExpressionStatement","src":"4782:57:11"},{"assignments":[2611],"declarations":[{"constant":false,"id":2611,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:11","nodeType":"VariableDeclaration","scope":2629,"src":"4850:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2617,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2613,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4889:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2612,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"4881:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2695_$","typeString":"type(contract IBeacon)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2695","typeString":"contract IBeacon"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:11","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2694,"src":"4881:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2618,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"4930:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:11","memberName":"code","nodeType":"MemberAccess","src":"4930:25:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:11","memberName":"length","nodeType":"MemberAccess","src":"4930:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2628,"nodeType":"IfStatement","src":"4926:125:11","trueBody":{"id":2627,"nodeType":"Block","src":"4969:82:11","statements":[{"errorCall":{"arguments":[{"id":2624,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"5019:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2623,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4990:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2626,"nodeType":"RevertStatement","src":"4983:57:11"}]}}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"4543:72:11","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":2630,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:11","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:11","nodeType":"VariableDeclaration","scope":2630,"src":"4640:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:11"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[],"src":"4667:0:11"},"scope":2685,"src":"4620:437:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2669,"nodeType":"Block","src":"5661:263:11","statements":[{"expression":{"arguments":[{"id":2639,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"5682:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2638,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"5671:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2641,"nodeType":"ExpressionStatement","src":"5671:21:11"},{"eventCall":{"arguments":[{"id":2645,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"5731:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2642,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"5707:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2244_$","typeString":"type(contract IERC1967)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:11","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":2243,"src":"5707:23:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2647,"nodeType":"EmitStatement","src":"5702:39:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2648,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"5756:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:11","memberName":"length","nodeType":"MemberAccess","src":"5756:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2667,"nodeType":"Block","src":"5875:43:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2664,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"5889:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2666,"nodeType":"ExpressionStatement","src":"5889:18:11"}]},"id":2668,"nodeType":"IfStatement","src":"5752:166:11","trueBody":{"id":2663,"nodeType":"Block","src":"5773:96:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2656,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"5824:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2655,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5816:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2695_$","typeString":"type(contract IBeacon)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2695","typeString":"contract IBeacon"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:11","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2694,"src":"5816:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2660,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"5853:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2652,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"5787:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3194_$","typeString":"type(library Address)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:11","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"5787:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2662,"nodeType":"ExpressionStatement","src":"5787:71:11"}]}}]},"documentation":{"id":2631,"nodeType":"StructuredDocumentation","src":"5063:514:11","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":2670,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:11","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:11","nodeType":"VariableDeclaration","scope":2670,"src":"5614:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"data","nameLocation":"5646:4:11","nodeType":"VariableDeclaration","scope":2670,"src":"5633:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2634,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:11"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[],"src":"5661:0:11"},"scope":2685,"src":"5582:342:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2683,"nodeType":"Block","src":"6149:86:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:11","memberName":"value","nodeType":"MemberAccess","src":"6163:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2682,"nodeType":"IfStatement","src":"6159:70:11","trueBody":{"id":2681,"nodeType":"Block","src":"6178:51:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2678,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"6199:17:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2680,"nodeType":"RevertStatement","src":"6192:26:11"}]}}]},"documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"5930:178:11","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":2684,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:11","nodeType":"FunctionDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[],"src":"6138:2:11"},"returnParameters":{"id":2673,"nodeType":"ParameterList","parameters":[],"src":"6149:0:11"},"scope":2685,"src":"6113:122:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2686,"src":"496:5741:11","usedErrors":[2411,2416,2421,2424],"usedEvents":[]}],"src":"114:6124:11"},"id":11},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2695]},"id":2696,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2687,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"134:79:12","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2695,"linearizedBaseContracts":[2695],"name":"IBeacon","nameLocation":"224:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2689,"nodeType":"StructuredDocumentation","src":"238:168:12","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2694,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:12","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[],"src":"434:2:12"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2694,"src":"460:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:12"},"scope":2695,"src":"411:58:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2696,"src":"214:257:12","usedErrors":[],"usedEvents":[]}],"src":"108:364:12"},"id":12},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4215],"IERC721":[2812]},"id":2813,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2697,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2699,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2813,"sourceUnit":4216,"src":"134:62:13","symbolAliases":[{"foreign":{"id":2698,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"142:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2701,"name":"IERC165","nameLocations":["288:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":4215,"src":"288:7:13"},"id":2702,"nodeType":"InheritanceSpecifier","src":"288:7:13"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"198:68:13","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2812,"linearizedBaseContracts":[2812,4215],"name":"IERC721","nameLocation":"277:7:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"302:88:13","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2711,"name":"Transfer","nameLocation":"401:8:13","nodeType":"EventDefinition","parameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:13","nodeType":"VariableDeclaration","scope":2711,"src":"410:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2704,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2707,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:13","nodeType":"VariableDeclaration","scope":2711,"src":"432:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2709,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:13","nodeType":"VariableDeclaration","scope":2711,"src":"452:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:13"},"src":"395:82:13"},{"anonymous":false,"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"483:94:13","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2720,"name":"Approval","nameLocation":"588:8:13","nodeType":"EventDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:13","nodeType":"VariableDeclaration","scope":2720,"src":"597:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2713,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2716,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:13","nodeType":"VariableDeclaration","scope":2720,"src":"620:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2718,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:13","nodeType":"VariableDeclaration","scope":2720,"src":"646:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:13"},"src":"582:89:13"},{"anonymous":false,"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"677:117:13","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2729,"name":"ApprovalForAll","nameLocation":"805:14:13","nodeType":"EventDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:13","nodeType":"VariableDeclaration","scope":2729,"src":"820:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2722,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2725,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:13","nodeType":"VariableDeclaration","scope":2729,"src":"843:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2727,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:13","nodeType":"VariableDeclaration","scope":2729,"src":"869:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2726,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:13"},"src":"799:85:13"},{"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"890:76:13","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2737,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:13","nodeType":"FunctionDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"owner","nameLocation":"998:5:13","nodeType":"VariableDeclaration","scope":2737,"src":"990:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2731,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:13"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"balance","nameLocation":"1036:7:13","nodeType":"VariableDeclaration","scope":2737,"src":"1028:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:13"},"scope":2812,"src":"971:74:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"1051:131:13","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2745,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:13","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:13","nodeType":"VariableDeclaration","scope":2745,"src":"1204:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:13"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"owner","nameLocation":"1252:5:13","nodeType":"VariableDeclaration","scope":2745,"src":"1244:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2742,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:13"},"scope":2812,"src":"1187:72:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2746,"nodeType":"StructuredDocumentation","src":"1265:565:13","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2757,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:13","nodeType":"FunctionDefinition","parameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"from","nameLocation":"1869:4:13","nodeType":"VariableDeclaration","scope":2757,"src":"1861:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"to","nameLocation":"1883:2:13","nodeType":"VariableDeclaration","scope":2757,"src":"1875:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:13","nodeType":"VariableDeclaration","scope":2757,"src":"1887:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"data","nameLocation":"1919:4:13","nodeType":"VariableDeclaration","scope":2757,"src":"1904:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2753,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:13"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[],"src":"1933:0:13"},"scope":2812,"src":"1835:99:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"1940:706:13","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2767,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:13","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"from","nameLocation":"2685:4:13","nodeType":"VariableDeclaration","scope":2767,"src":"2677:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"to","nameLocation":"2699:2:13","nodeType":"VariableDeclaration","scope":2767,"src":"2691:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:13","nodeType":"VariableDeclaration","scope":2767,"src":"2703:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:13"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[],"src":"2728:0:13"},"scope":2812,"src":"2651:78:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2768,"nodeType":"StructuredDocumentation","src":"2735:733:13","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2777,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:13","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"from","nameLocation":"3503:4:13","nodeType":"VariableDeclaration","scope":2777,"src":"3495:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2772,"mutability":"mutable","name":"to","nameLocation":"3517:2:13","nodeType":"VariableDeclaration","scope":2777,"src":"3509:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2771,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:13","nodeType":"VariableDeclaration","scope":2777,"src":"3521:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:13"},"returnParameters":{"id":2776,"nodeType":"ParameterList","parameters":[],"src":"3546:0:13"},"scope":2812,"src":"3473:74:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2778,"nodeType":"StructuredDocumentation","src":"3553:452:13","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2785,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:13","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"to","nameLocation":"4035:2:13","nodeType":"VariableDeclaration","scope":2785,"src":"4027:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2779,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:13","nodeType":"VariableDeclaration","scope":2785,"src":"4039:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:13"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[],"src":"4064:0:13"},"scope":2812,"src":"4010:55:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"4071:315:13","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2793,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:13","nodeType":"FunctionDefinition","parameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"operator","nameLocation":"4426:8:13","nodeType":"VariableDeclaration","scope":2793,"src":"4418:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2787,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"approved","nameLocation":"4441:8:13","nodeType":"VariableDeclaration","scope":2793,"src":"4436:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2789,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:13"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[],"src":"4459:0:13"},"scope":2812,"src":"4391:69:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"4466:139:13","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2801,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:13","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:13","nodeType":"VariableDeclaration","scope":2801,"src":"4631:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:13"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"operator","nameLocation":"4679:8:13","nodeType":"VariableDeclaration","scope":2801,"src":"4671:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:13"},"scope":2812,"src":"4610:79:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"4695:138:13","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2811,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:13","nodeType":"FunctionDefinition","parameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"owner","nameLocation":"4872:5:13","nodeType":"VariableDeclaration","scope":2811,"src":"4864:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2806,"mutability":"mutable","name":"operator","nameLocation":"4887:8:13","nodeType":"VariableDeclaration","scope":2811,"src":"4879:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:13"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2811,"src":"4920:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2808,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:13"},"scope":2812,"src":"4838:88:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2813,"src":"267:4661:13","usedErrors":[],"usedEvents":[2711,2720,2729]}],"src":"108:4821:13"},"id":13},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2830]},"id":2831,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2814,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"142:154:14","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2830,"linearizedBaseContracts":[2830],"name":"IERC721Receiver","nameLocation":"307:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2816,"nodeType":"StructuredDocumentation","src":"329:500:14","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2829,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:14","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"operator","nameLocation":"877:8:14","nodeType":"VariableDeclaration","scope":2829,"src":"869:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2820,"mutability":"mutable","name":"from","nameLocation":"903:4:14","nodeType":"VariableDeclaration","scope":2829,"src":"895:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:14","nodeType":"VariableDeclaration","scope":2829,"src":"917:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"data","nameLocation":"957:4:14","nodeType":"VariableDeclaration","scope":2829,"src":"942:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2823,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:14"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2829,"src":"986:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2826,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:14"},"scope":2830,"src":"834:160:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2831,"src":"297:699:14","usedErrors":[],"usedEvents":[]}],"src":"116:881:14"},"id":14},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2812],"IERC721Metadata":[2858]},"id":2859,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2832,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2859,"sourceUnit":2813,"src":"153:39:15","symbolAliases":[{"foreign":{"id":2833,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"161:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2836,"name":"IERC721","nameLocations":["357:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2812,"src":"357:7:15"},"id":2837,"nodeType":"InheritanceSpecifier","src":"357:7:15"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"194:133:15","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2858,"linearizedBaseContracts":[2858,2812,4215],"name":"IERC721Metadata","nameLocation":"338:15:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"371:58:15","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2843,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:15","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[],"src":"447:2:15"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2843,"src":"473:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2840,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:15"},"scope":2858,"src":"434:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"494:60:15","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2849,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:15","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[],"src":"574:2:15"},"returnParameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2849,"src":"600:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2846,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:15"},"scope":2858,"src":"559:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"621:90:15","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2857,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:15","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:15","nodeType":"VariableDeclaration","scope":2857,"src":"734:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:15"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2857,"src":"774:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2854,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:15"},"scope":2858,"src":"716:73:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2859,"src":"328:463:15","usedErrors":[],"usedEvents":[2711,2720,2729]}],"src":"127:665:15"},"id":15},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2935],"IERC721Errors":[2344],"IERC721Receiver":[2830]},"id":2936,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2860,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":2831,"src":"144:55:16","symbolAliases":[{"foreign":{"id":2861,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"152:15:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":2392,"src":"200:69:16","symbolAliases":[{"foreign":{"id":2863,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"208:13:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2865,"nodeType":"StructuredDocumentation","src":"271:159:16","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2935,"linearizedBaseContracts":[2935],"name":"ERC721Utils","nameLocation":"439:11:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2933,"nodeType":"Block","src":"1151:758:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2879,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1165:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:16","memberName":"code","nodeType":"MemberAccess","src":"1165:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:16","memberName":"length","nodeType":"MemberAccess","src":"1165:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2932,"nodeType":"IfStatement","src":"1161:742:16","trueBody":{"id":2931,"nodeType":"Block","src":"1185:718:16","statements":[{"clauses":[{"block":{"id":2909,"nodeType":"Block","src":"1295:214:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2896,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"1317:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2897,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1327:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2830_$","typeString":"type(contract IERC721Receiver)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:16","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2829,"src":"1327:32:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:16","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2908,"nodeType":"IfStatement","src":"1313:182:16","trueBody":{"id":2907,"nodeType":"Block","src":"1370:125:16","statements":[{"errorCall":{"arguments":[{"id":2904,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1473:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2901,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"1437:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$2344_$","typeString":"type(contract IERC721Errors)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:16","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"1437:35:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2906,"nodeType":"RevertStatement","src":"1430:46:16"}]}}]},"errorName":"","id":2910,"nodeType":"TryCatchClause","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"retval","nameLocation":"1287:6:16","nodeType":"VariableDeclaration","scope":2910,"src":"1280:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2893,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:16"},"src":"1271:238:16"},{"block":{"id":2928,"nodeType":"Block","src":"1538:355:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2914,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"1560:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:16","memberName":"length","nodeType":"MemberAccess","src":"1560:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2926,"nodeType":"Block","src":"1728:151:16","statements":[{"AST":{"nativeSrc":"1775:86:16","nodeType":"YulBlock","src":"1775:86:16","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1812:2:16","nodeType":"YulLiteral","src":"1812:2:16","type":"","value":"32"},{"name":"reason","nativeSrc":"1816:6:16","nodeType":"YulIdentifier","src":"1816:6:16"}],"functionName":{"name":"add","nativeSrc":"1808:3:16","nodeType":"YulIdentifier","src":"1808:3:16"},"nativeSrc":"1808:15:16","nodeType":"YulFunctionCall","src":"1808:15:16"},{"arguments":[{"name":"reason","nativeSrc":"1831:6:16","nodeType":"YulIdentifier","src":"1831:6:16"}],"functionName":{"name":"mload","nativeSrc":"1825:5:16","nodeType":"YulIdentifier","src":"1825:5:16"},"nativeSrc":"1825:13:16","nodeType":"YulFunctionCall","src":"1825:13:16"}],"functionName":{"name":"revert","nativeSrc":"1801:6:16","nodeType":"YulIdentifier","src":"1801:6:16"},"nativeSrc":"1801:38:16","nodeType":"YulFunctionCall","src":"1801:38:16"},"nativeSrc":"1801:38:16","nodeType":"YulExpressionStatement","src":"1801:38:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2912,"isOffset":false,"isSlot":false,"src":"1816:6:16","valueSize":1},{"declaration":2912,"isOffset":false,"isSlot":false,"src":"1831:6:16","valueSize":1}],"flags":["memory-safe"],"id":2925,"nodeType":"InlineAssembly","src":"1750:111:16"}]},"id":2927,"nodeType":"IfStatement","src":"1556:323:16","trueBody":{"id":2924,"nodeType":"Block","src":"1580:142:16","statements":[{"errorCall":{"arguments":[{"id":2921,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1700:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2918,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"1664:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$2344_$","typeString":"type(contract IERC721Errors)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:16","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"1664:35:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2923,"nodeType":"RevertStatement","src":"1657:46:16"}]}}]},"errorName":"","id":2929,"nodeType":"TryCatchClause","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"reason","nameLocation":"1530:6:16","nodeType":"VariableDeclaration","scope":2929,"src":"1517:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2911,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:16"},"src":"1510:383:16"}],"externalCall":{"arguments":[{"id":2888,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"1240:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2889,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1250:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"1256:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"1265:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1219:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2884,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1203:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2830_$","typeString":"type(contract IERC721Receiver)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2830","typeString":"contract IERC721Receiver"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:16","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2829,"src":"1203:36:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:16","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2930,"nodeType":"TryStatement","src":"1199:694:16"}]}}]},"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"457:523:16","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2934,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:16","nodeType":"FunctionDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"operator","nameLocation":"1033:8:16","nodeType":"VariableDeclaration","scope":2934,"src":"1025:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"from","nameLocation":"1059:4:16","nodeType":"VariableDeclaration","scope":2934,"src":"1051:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"to","nameLocation":"1081:2:16","nodeType":"VariableDeclaration","scope":2934,"src":"1073:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2871,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:16","nodeType":"VariableDeclaration","scope":2934,"src":"1093:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"data","nameLocation":"1131:4:16","nodeType":"VariableDeclaration","scope":2934,"src":"1118:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2875,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:16"},"returnParameters":{"id":2878,"nodeType":"ParameterList","parameters":[],"src":"1151:0:16"},"scope":2935,"src":"985:924:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2936,"src":"431:1480:16","usedErrors":[],"usedEvents":[]}],"src":"118:1794:16"},"id":16},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3194],"Errors":[3216]},"id":3195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2937,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":2939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3195,"sourceUnit":3217,"src":"127:36:17","symbolAliases":[{"foreign":{"id":2938,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"135:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"165:67:17","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3194,"linearizedBaseContracts":[3194],"name":"Address","nameLocation":"241:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2941,"nodeType":"StructuredDocumentation","src":"255:75:17","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2945,"name":"AddressEmptyCode","nameLocation":"341:16:17","nodeType":"ErrorDefinition","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"target","nameLocation":"366:6:17","nodeType":"VariableDeclaration","scope":2945,"src":"358:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2942,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:17"},"src":"335:39:17"},{"body":{"id":2991,"nodeType":"Block","src":"1361:278:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2955,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3194","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3194","typeString":"library Address"}],"id":2954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:17","typeDescriptions":{}}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:17","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2958,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"1399:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"nodeType":"IfStatement","src":"1371:125:17","trueBody":{"id":2971,"nodeType":"Block","src":"1407:89:17","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2965,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3194","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3194","typeString":"library Address"}],"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:17","typeDescriptions":{}}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:17","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2968,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"1478:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2960,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"1428:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3216_$","typeString":"type(library Errors)"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:17","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3204,"src":"1428:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2970,"nodeType":"RevertStatement","src":"1421:64:17"}]}},{"assignments":[2974,null],"declarations":[{"constant":false,"id":2974,"mutability":"mutable","name":"success","nameLocation":"1512:7:17","nodeType":"VariableDeclaration","scope":2991,"src":"1507:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2973,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2981,"initialValue":{"arguments":[{"hexValue":"","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2975,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"1525:9:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:17","memberName":"call","nodeType":"MemberAccess","src":"1525:14:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2977,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"1547:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:17"},{"condition":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:17","subExpression":{"id":2982,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"1573:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2990,"nodeType":"IfStatement","src":"1568:65:17","trueBody":{"id":2989,"nodeType":"Block","src":"1582:51:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2984,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"1603:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3216_$","typeString":"type(library Errors)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:17","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"1603:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2988,"nodeType":"RevertStatement","src":"1596:26:17"}]}}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"380:905:17","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2992,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:17","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:17","nodeType":"VariableDeclaration","scope":2992,"src":"1309:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"amount","nameLocation":"1344:6:17","nodeType":"VariableDeclaration","scope":2992,"src":"1336:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:17"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[],"src":"1361:0:17"},"scope":3194,"src":"1290:349:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3008,"nodeType":"Block","src":"2573:62:17","statements":[{"expression":{"arguments":[{"id":3003,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2612:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3004,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"2620:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3002,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"2590:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3001,"id":3007,"nodeType":"Return","src":"2583:45:17"}]},"documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"1645:834:17","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":3009,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:17","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"target","nameLocation":"2514:6:17","nodeType":"VariableDeclaration","scope":3009,"src":"2506:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"data","nameLocation":"2535:4:17","nodeType":"VariableDeclaration","scope":3009,"src":"2522:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2996,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:17"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3009,"src":"2559:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2999,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:17"},"scope":3194,"src":"2484:151:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3058,"nodeType":"Block","src":"3072:294:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3023,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3094:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3194","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3194","typeString":"library Address"}],"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3021,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:17","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:17","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"3110:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3040,"nodeType":"IfStatement","src":"3082:123:17","trueBody":{"id":3039,"nodeType":"Block","src":"3117:88:17","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3033,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3173:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3194","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3194","typeString":"library Address"}],"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:17","typeDescriptions":{}}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:17","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"3188:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3028,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"3138:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3216_$","typeString":"type(library Errors)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:17","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3204,"src":"3138:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3038,"nodeType":"RevertStatement","src":"3131:63:17"}]}},{"assignments":[3042,3044],"declarations":[{"constant":false,"id":3042,"mutability":"mutable","name":"success","nameLocation":"3220:7:17","nodeType":"VariableDeclaration","scope":3058,"src":"3215:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3041,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:17","nodeType":"VariableDeclaration","scope":3058,"src":"3229:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3043,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3051,"initialValue":{"arguments":[{"id":3049,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"3282:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3045,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"3256:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:17","memberName":"call","nodeType":"MemberAccess","src":"3256:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"3275:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:17"},{"expression":{"arguments":[{"id":3053,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"3331:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3054,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3339:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3055,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"3348:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3052,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"3304:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3020,"id":3057,"nodeType":"Return","src":"3297:62:17"}]},"documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"2641:313:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":3059,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:17","nodeType":"FunctionDefinition","parameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"target","nameLocation":"2998:6:17","nodeType":"VariableDeclaration","scope":3059,"src":"2990:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"data","nameLocation":"3019:4:17","nodeType":"VariableDeclaration","scope":3059,"src":"3006:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3013,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"value","nameLocation":"3033:5:17","nodeType":"VariableDeclaration","scope":3059,"src":"3025:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:17"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3059,"src":"3058:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3018,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:17"},"scope":3194,"src":"2959:407:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"3605:154:17","statements":[{"assignments":[3070,3072],"declarations":[{"constant":false,"id":3070,"mutability":"mutable","name":"success","nameLocation":"3621:7:17","nodeType":"VariableDeclaration","scope":3084,"src":"3616:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3069,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3072,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:17","nodeType":"VariableDeclaration","scope":3084,"src":"3630:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3071,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3077,"initialValue":{"arguments":[{"id":3075,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3675:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3073,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"3657:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:17","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:17","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:17"},{"expression":{"arguments":[{"id":3079,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"3724:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3080,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3732:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3081,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"3741:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3078,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"3697:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3068,"id":3083,"nodeType":"Return","src":"3690:62:17"}]},"documentation":{"id":3060,"nodeType":"StructuredDocumentation","src":"3372:128:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:17","nodeType":"FunctionDefinition","parameters":{"id":3065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"target","nameLocation":"3541:6:17","nodeType":"VariableDeclaration","scope":3085,"src":"3533:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3061,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3064,"mutability":"mutable","name":"data","nameLocation":"3562:4:17","nodeType":"VariableDeclaration","scope":3085,"src":"3549:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3063,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:17"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"3591:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3066,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:17"},"scope":3194,"src":"3505:254:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"3997:156:17","statements":[{"assignments":[3096,3098],"declarations":[{"constant":false,"id":3096,"mutability":"mutable","name":"success","nameLocation":"4013:7:17","nodeType":"VariableDeclaration","scope":3110,"src":"4008:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3095,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:17","nodeType":"VariableDeclaration","scope":3110,"src":"4022:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3097,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3103,"initialValue":{"arguments":[{"id":3101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"4069:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3099,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"4049:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:17","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:17","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:17"},{"expression":{"arguments":[{"id":3105,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"4118:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3106,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"4126:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3107,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4135:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3104,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"4091:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3094,"id":3109,"nodeType":"Return","src":"4084:62:17"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"3765:130:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:17","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"target","nameLocation":"3938:6:17","nodeType":"VariableDeclaration","scope":3111,"src":"3930:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"data","nameLocation":"3959:4:17","nodeType":"VariableDeclaration","scope":3111,"src":"3946:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3089,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:17"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"3983:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3092,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:17"},"scope":3194,"src":"3900:253:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3150,"nodeType":"Block","src":"4579:424:17","statements":[{"condition":{"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:17","subExpression":{"id":3123,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"4594:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3148,"nodeType":"Block","src":"4653:344:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3130,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4841:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:17","memberName":"length","nodeType":"MemberAccess","src":"4841:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3134,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"4867:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:17","memberName":"code","nodeType":"MemberAccess","src":"4867:11:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:17","memberName":"length","nodeType":"MemberAccess","src":"4867:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3145,"nodeType":"IfStatement","src":"4837:119:17","trueBody":{"id":3144,"nodeType":"Block","src":"4892:64:17","statements":[{"errorCall":{"arguments":[{"id":3141,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"4934:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3140,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4917:16:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3143,"nodeType":"RevertStatement","src":"4910:31:17"}]}},{"expression":{"id":3146,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4976:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3122,"id":3147,"nodeType":"Return","src":"4969:17:17"}]},"id":3149,"nodeType":"IfStatement","src":"4589:408:17","trueBody":{"id":3129,"nodeType":"Block","src":"4603:44:17","statements":[{"expression":{"arguments":[{"id":3126,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4625:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3125,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"4617:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3128,"nodeType":"ExpressionStatement","src":"4617:19:17"}]}}]},"documentation":{"id":3112,"nodeType":"StructuredDocumentation","src":"4159:257:17","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3151,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:17","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"target","nameLocation":"4474:6:17","nodeType":"VariableDeclaration","scope":3151,"src":"4466:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3113,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3116,"mutability":"mutable","name":"success","nameLocation":"4495:7:17","nodeType":"VariableDeclaration","scope":3151,"src":"4490:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3115,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:17","nodeType":"VariableDeclaration","scope":3151,"src":"4512:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3117,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:17"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3151,"src":"4565:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3120,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:17"},"scope":3194,"src":"4421:582:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3172,"nodeType":"Block","src":"5307:122:17","statements":[{"condition":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:17","subExpression":{"id":3161,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"5322:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3170,"nodeType":"Block","src":"5381:42:17","statements":[{"expression":{"id":3168,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5402:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3160,"id":3169,"nodeType":"Return","src":"5395:17:17"}]},"id":3171,"nodeType":"IfStatement","src":"5317:106:17","trueBody":{"id":3167,"nodeType":"Block","src":"5331:44:17","statements":[{"expression":{"arguments":[{"id":3164,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5353:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3163,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"5345:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3166,"nodeType":"ExpressionStatement","src":"5345:19:17"}]}}]},"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"5009:191:17","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3173,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:17","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"success","nameLocation":"5236:7:17","nodeType":"VariableDeclaration","scope":3173,"src":"5231:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3153,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:17","nodeType":"VariableDeclaration","scope":3173,"src":"5245:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3155,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:17"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3173,"src":"5293:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3158,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:17"},"scope":3194,"src":"5205:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3192,"nodeType":"Block","src":"5598:432:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3179,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"5674:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:17","memberName":"length","nodeType":"MemberAccess","src":"5674:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3190,"nodeType":"Block","src":"5973:51:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3185,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"5994:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3216_$","typeString":"type(library Errors)"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:17","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"5994:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3189,"nodeType":"RevertStatement","src":"5987:26:17"}]},"id":3191,"nodeType":"IfStatement","src":"5670:354:17","trueBody":{"id":3184,"nodeType":"Block","src":"5697:270:17","statements":[{"AST":{"nativeSrc":"5824:133:17","nodeType":"YulBlock","src":"5824:133:17","statements":[{"nativeSrc":"5842:40:17","nodeType":"YulVariableDeclaration","src":"5842:40:17","value":{"arguments":[{"name":"returndata","nativeSrc":"5871:10:17","nodeType":"YulIdentifier","src":"5871:10:17"}],"functionName":{"name":"mload","nativeSrc":"5865:5:17","nodeType":"YulIdentifier","src":"5865:5:17"},"nativeSrc":"5865:17:17","nodeType":"YulFunctionCall","src":"5865:17:17"},"variables":[{"name":"returndata_size","nativeSrc":"5846:15:17","nodeType":"YulTypedName","src":"5846:15:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5910:2:17","nodeType":"YulLiteral","src":"5910:2:17","type":"","value":"32"},{"name":"returndata","nativeSrc":"5914:10:17","nodeType":"YulIdentifier","src":"5914:10:17"}],"functionName":{"name":"add","nativeSrc":"5906:3:17","nodeType":"YulIdentifier","src":"5906:3:17"},"nativeSrc":"5906:19:17","nodeType":"YulFunctionCall","src":"5906:19:17"},{"name":"returndata_size","nativeSrc":"5927:15:17","nodeType":"YulIdentifier","src":"5927:15:17"}],"functionName":{"name":"revert","nativeSrc":"5899:6:17","nodeType":"YulIdentifier","src":"5899:6:17"},"nativeSrc":"5899:44:17","nodeType":"YulFunctionCall","src":"5899:44:17"},"nativeSrc":"5899:44:17","nodeType":"YulExpressionStatement","src":"5899:44:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3176,"isOffset":false,"isSlot":false,"src":"5871:10:17","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"5914:10:17","valueSize":1}],"flags":["memory-safe"],"id":3183,"nodeType":"InlineAssembly","src":"5799:158:17"}]}}]},"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"5435:103:17","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3193,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:17","nodeType":"FunctionDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:17","nodeType":"VariableDeclaration","scope":3193,"src":"5560:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3175,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:17"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[],"src":"5598:0:17"},"scope":3194,"src":"5543:487:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3195,"src":"233:5799:17","usedErrors":[2945],"usedEvents":[]}],"src":"101:5932:17"},"id":17},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[3216]},"id":3217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":3197,"nodeType":"StructuredDocumentation","src":"126:284:18","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":3216,"linearizedBaseContracts":[3216],"name":"Errors","nameLocation":"419:6:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3198,"nodeType":"StructuredDocumentation","src":"432:94:18","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":3204,"name":"InsufficientBalance","nameLocation":"537:19:18","nodeType":"ErrorDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"mutability":"mutable","name":"balance","nameLocation":"565:7:18","nodeType":"VariableDeclaration","scope":3204,"src":"557:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3202,"mutability":"mutable","name":"needed","nameLocation":"582:6:18","nodeType":"VariableDeclaration","scope":3204,"src":"574:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:18"},"src":"531:59:18"},{"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"596:89:18","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":3207,"name":"FailedCall","nameLocation":"696:10:18","nodeType":"ErrorDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[],"src":"706:2:18"},"src":"690:19:18"},{"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"715:46:18","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":3210,"name":"FailedDeployment","nameLocation":"772:16:18","nodeType":"ErrorDefinition","parameters":{"id":3209,"nodeType":"ParameterList","parameters":[],"src":"788:2:18"},"src":"766:25:18"},{"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"797:58:18","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":3215,"name":"MissingPrecompile","nameLocation":"866:17:18","nodeType":"ErrorDefinition","parameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3215,"src":"884:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3212,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:18"},"src":"860:33:18"}],"scope":3217,"src":"411:484:18","usedErrors":[3204,3207,3210,3215],"usedEvents":[]}],"src":"100:796:18"},"id":18},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3268]},"id":3269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3218,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"125:489:19","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3268,"linearizedBaseContracts":[3268],"name":"Panic","nameLocation":"665:5:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"677:36:19","text":"@dev generic / unspecified error"},"id":3223,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:19","nodeType":"VariableDeclaration","scope":3268,"src":"718:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"764:37:19","text":"@dev used by the assert() builtin"},"id":3227,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:19","nodeType":"VariableDeclaration","scope":3268,"src":"806:39:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"851:41:19","text":"@dev arithmetic underflow or overflow"},"id":3231,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:19","nodeType":"VariableDeclaration","scope":3268,"src":"897:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:19","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3232,"nodeType":"StructuredDocumentation","src":"950:35:19","text":"@dev division or modulo by zero"},"id":3235,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:19","nodeType":"VariableDeclaration","scope":3268,"src":"990:49:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3236,"nodeType":"StructuredDocumentation","src":"1045:30:19","text":"@dev enum conversion error"},"id":3239,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:19","nodeType":"VariableDeclaration","scope":3268,"src":"1080:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:19","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"1140:36:19","text":"@dev invalid encoding in storage"},"id":3243,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:19","nodeType":"VariableDeclaration","scope":3268,"src":"1181:55:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"1242:24:19","text":"@dev empty array pop"},"id":3247,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:19","nodeType":"VariableDeclaration","scope":3268,"src":"1271:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:19","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3248,"nodeType":"StructuredDocumentation","src":"1325:35:19","text":"@dev array out of bounds access"},"id":3251,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:19","nodeType":"VariableDeclaration","scope":3268,"src":"1365:52:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:19","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"1423:65:19","text":"@dev resource error (too large allocation or too large array)"},"id":3255,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:19","nodeType":"VariableDeclaration","scope":3268,"src":"1493:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"1546:42:19","text":"@dev calling invalid internal function"},"id":3259,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:19","nodeType":"VariableDeclaration","scope":3268,"src":"1593:58:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:19","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3266,"nodeType":"Block","src":"1819:151:19","statements":[{"AST":{"nativeSrc":"1854:110:19","nodeType":"YulBlock","src":"1854:110:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:19","nodeType":"YulLiteral","src":"1875:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:19","nodeType":"YulLiteral","src":"1881:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:19","nodeType":"YulIdentifier","src":"1868:6:19"},"nativeSrc":"1868:24:19","nodeType":"YulFunctionCall","src":"1868:24:19"},"nativeSrc":"1868:24:19","nodeType":"YulExpressionStatement","src":"1868:24:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:19","nodeType":"YulLiteral","src":"1912:4:19","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:19","nodeType":"YulIdentifier","src":"1918:4:19"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:19","nodeType":"YulIdentifier","src":"1905:6:19"},"nativeSrc":"1905:18:19","nodeType":"YulFunctionCall","src":"1905:18:19"},"nativeSrc":"1905:18:19","nodeType":"YulExpressionStatement","src":"1905:18:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:19","nodeType":"YulLiteral","src":"1943:4:19","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:19","nodeType":"YulLiteral","src":"1949:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:19","nodeType":"YulIdentifier","src":"1936:6:19"},"nativeSrc":"1936:18:19","nodeType":"YulFunctionCall","src":"1936:18:19"},"nativeSrc":"1936:18:19","nodeType":"YulExpressionStatement","src":"1936:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3262,"isOffset":false,"isSlot":false,"src":"1918:4:19","valueSize":1}],"flags":["memory-safe"],"id":3265,"nodeType":"InlineAssembly","src":"1829:135:19"}]},"documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"1658:113:19","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:19","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"code","nameLocation":"1799:4:19","nodeType":"VariableDeclaration","scope":3267,"src":"1791:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:19"},"returnParameters":{"id":3264,"nodeType":"ParameterList","parameters":[],"src":"1819:0:19"},"scope":3268,"src":"1776:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3269,"src":"657:1315:19","usedErrors":[],"usedEvents":[]}],"src":"99:1874:19"},"id":19},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3337]},"id":3338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3270,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3271,"nodeType":"StructuredDocumentation","src":"135:894:20","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3337,"linearizedBaseContracts":[3337],"name":"ReentrancyGuard","nameLocation":"1048:15:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3274,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:20","nodeType":"VariableDeclaration","scope":3337,"src":"1818:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3277,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:20","nodeType":"VariableDeclaration","scope":3337,"src":"1864:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3279,"mutability":"mutable","name":"_status","nameLocation":"1923:7:20","nodeType":"VariableDeclaration","scope":3337,"src":"1907:23:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":3280,"nodeType":"StructuredDocumentation","src":"1937:52:20","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":3282,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:20","nodeType":"ErrorDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[],"src":"2028:2:20"},"src":"1994:37:20"},{"body":{"id":3289,"nodeType":"Block","src":"2051:38:20","statements":[{"expression":{"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3285,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"2061:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3286,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"2071:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3288,"nodeType":"ExpressionStatement","src":"2061:21:20"}]},"id":3290,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[],"src":"2048:2:20"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[],"src":"2051:0:20"},"scope":3337,"src":"2037:52:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3300,"nodeType":"Block","src":"2490:79:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3293,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"2500:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3295,"nodeType":"ExpressionStatement","src":"2500:21:20"},{"id":3296,"nodeType":"PlaceholderStatement","src":"2531:1:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3297,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"2542:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3299,"nodeType":"ExpressionStatement","src":"2542:20:20"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"2095:366:20","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3301,"name":"nonReentrant","nameLocation":"2475:12:20","nodeType":"ModifierDefinition","parameters":{"id":3292,"nodeType":"ParameterList","parameters":[],"src":"2487:2:20"},"src":"2466:103:20","virtual":false,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"2614:268:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"2702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3305,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"2713:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3311,"nodeType":"IfStatement","src":"2698:86:20","trueBody":{"id":3310,"nodeType":"Block","src":"2722:62:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3307,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"2743:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3309,"nodeType":"RevertStatement","src":"2736:37:20"}]}},{"expression":{"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3312,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"2858:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3313,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"2868:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3315,"nodeType":"ExpressionStatement","src":"2858:17:20"}]},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:20","nodeType":"FunctionDefinition","parameters":{"id":3302,"nodeType":"ParameterList","parameters":[],"src":"2603:2:20"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[],"src":"2614:0:20"},"scope":3337,"src":"2575:307:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3324,"nodeType":"Block","src":"2926:170:20","statements":[{"expression":{"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"3068:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3321,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"3078:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3323,"nodeType":"ExpressionStatement","src":"3068:21:20"}]},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:20","nodeType":"FunctionDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[],"src":"2915:2:20"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[],"src":"2926:0:20"},"scope":3337,"src":"2888:208:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3335,"nodeType":"Block","src":"3339:42:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"3356:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3332,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"3367:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3330,"id":3334,"nodeType":"Return","src":"3349:25:20"}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"3102:168:20","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3336,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:20","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[],"src":"3307:2:20"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3336,"src":"3333:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3328,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:20"},"scope":3337,"src":"3275:106:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3338,"src":"1030:2353:20","usedErrors":[3282],"usedEvents":[]}],"src":"109:3275:20"},"id":20},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3461]},"id":3462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3339,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"219:1187:21","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3461,"linearizedBaseContracts":[3461],"name":"StorageSlot","nameLocation":"1415:11:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3343,"members":[{"constant":false,"id":3342,"mutability":"mutable","name":"value","nameLocation":"1470:5:21","nodeType":"VariableDeclaration","scope":3343,"src":"1462:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3341,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:21","nodeType":"StructDefinition","scope":3461,"src":"1433:49:21","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3346,"members":[{"constant":false,"id":3345,"mutability":"mutable","name":"value","nameLocation":"1522:5:21","nodeType":"VariableDeclaration","scope":3346,"src":"1517:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3344,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:21","nodeType":"StructDefinition","scope":3461,"src":"1488:46:21","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3349,"members":[{"constant":false,"id":3348,"mutability":"mutable","name":"value","nameLocation":"1577:5:21","nodeType":"VariableDeclaration","scope":3349,"src":"1569:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:21","nodeType":"StructDefinition","scope":3461,"src":"1540:49:21","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3352,"members":[{"constant":false,"id":3351,"mutability":"mutable","name":"value","nameLocation":"1632:5:21","nodeType":"VariableDeclaration","scope":3352,"src":"1624:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:21","nodeType":"StructDefinition","scope":3461,"src":"1595:49:21","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3355,"members":[{"constant":false,"id":3354,"mutability":"mutable","name":"value","nameLocation":"1685:5:21","nodeType":"VariableDeclaration","scope":3355,"src":"1678:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3353,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:21","nodeType":"StructDefinition","scope":3461,"src":"1650:47:21","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3358,"members":[{"constant":false,"id":3357,"mutability":"mutable","name":"value","nameLocation":"1738:5:21","nodeType":"VariableDeclaration","scope":3358,"src":"1731:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3356,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:21","nodeType":"StructDefinition","scope":3461,"src":"1703:47:21","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3361,"members":[{"constant":false,"id":3360,"mutability":"mutable","name":"value","nameLocation":"1789:5:21","nodeType":"VariableDeclaration","scope":3361,"src":"1783:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3359,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:21","nodeType":"StructDefinition","scope":3461,"src":"1756:45:21","visibility":"public"},{"body":{"id":3371,"nodeType":"Block","src":"1983:79:21","statements":[{"AST":{"nativeSrc":"2018:38:21","nodeType":"YulBlock","src":"2018:38:21","statements":[{"nativeSrc":"2032:14:21","nodeType":"YulAssignment","src":"2032:14:21","value":{"name":"slot","nativeSrc":"2042:4:21","nodeType":"YulIdentifier","src":"2042:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:21","nodeType":"YulIdentifier","src":"2032:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3368,"isOffset":false,"isSlot":true,"src":"2032:6:21","suffix":"slot","valueSize":1},{"declaration":3364,"isOffset":false,"isSlot":false,"src":"2042:4:21","valueSize":1}],"flags":["memory-safe"],"id":3370,"nodeType":"InlineAssembly","src":"1993:63:21"}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"1807:87:21","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3372,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:21","nodeType":"FunctionDefinition","parameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"slot","nameLocation":"1931:4:21","nodeType":"VariableDeclaration","scope":3372,"src":"1923:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:21"},"returnParameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"r","nameLocation":"1980:1:21","nodeType":"VariableDeclaration","scope":3372,"src":"1960:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3343_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3367,"nodeType":"UserDefinedTypeName","pathNode":{"id":3366,"name":"AddressSlot","nameLocations":["1960:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3343,"src":"1960:11:21"},"referencedDeclaration":3343,"src":"1960:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3343_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:21"},"scope":3461,"src":"1899:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3382,"nodeType":"Block","src":"2243:79:21","statements":[{"AST":{"nativeSrc":"2278:38:21","nodeType":"YulBlock","src":"2278:38:21","statements":[{"nativeSrc":"2292:14:21","nodeType":"YulAssignment","src":"2292:14:21","value":{"name":"slot","nativeSrc":"2302:4:21","nodeType":"YulIdentifier","src":"2302:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:21","nodeType":"YulIdentifier","src":"2292:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3379,"isOffset":false,"isSlot":true,"src":"2292:6:21","suffix":"slot","valueSize":1},{"declaration":3375,"isOffset":false,"isSlot":false,"src":"2302:4:21","valueSize":1}],"flags":["memory-safe"],"id":3381,"nodeType":"InlineAssembly","src":"2253:63:21"}]},"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"2068:86:21","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3383,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:21","nodeType":"FunctionDefinition","parameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"slot","nameLocation":"2191:4:21","nodeType":"VariableDeclaration","scope":3383,"src":"2183:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:21"},"returnParameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"r","nameLocation":"2240:1:21","nodeType":"VariableDeclaration","scope":3383,"src":"2220:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3346_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3378,"nodeType":"UserDefinedTypeName","pathNode":{"id":3377,"name":"BooleanSlot","nameLocations":["2220:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3346,"src":"2220:11:21"},"referencedDeclaration":3346,"src":"2220:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3346_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:21"},"scope":3461,"src":"2159:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3393,"nodeType":"Block","src":"2503:79:21","statements":[{"AST":{"nativeSrc":"2538:38:21","nodeType":"YulBlock","src":"2538:38:21","statements":[{"nativeSrc":"2552:14:21","nodeType":"YulAssignment","src":"2552:14:21","value":{"name":"slot","nativeSrc":"2562:4:21","nodeType":"YulIdentifier","src":"2562:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:21","nodeType":"YulIdentifier","src":"2552:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3390,"isOffset":false,"isSlot":true,"src":"2552:6:21","suffix":"slot","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"2562:4:21","valueSize":1}],"flags":["memory-safe"],"id":3392,"nodeType":"InlineAssembly","src":"2513:63:21"}]},"documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"2328:86:21","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:21","nodeType":"FunctionDefinition","parameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"slot","nameLocation":"2451:4:21","nodeType":"VariableDeclaration","scope":3394,"src":"2443:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:21"},"returnParameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"r","nameLocation":"2500:1:21","nodeType":"VariableDeclaration","scope":3394,"src":"2480:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3349_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3389,"nodeType":"UserDefinedTypeName","pathNode":{"id":3388,"name":"Bytes32Slot","nameLocations":["2480:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3349,"src":"2480:11:21"},"referencedDeclaration":3349,"src":"2480:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3349_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:21"},"scope":3461,"src":"2419:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3404,"nodeType":"Block","src":"2763:79:21","statements":[{"AST":{"nativeSrc":"2798:38:21","nodeType":"YulBlock","src":"2798:38:21","statements":[{"nativeSrc":"2812:14:21","nodeType":"YulAssignment","src":"2812:14:21","value":{"name":"slot","nativeSrc":"2822:4:21","nodeType":"YulIdentifier","src":"2822:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:21","nodeType":"YulIdentifier","src":"2812:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3401,"isOffset":false,"isSlot":true,"src":"2812:6:21","suffix":"slot","valueSize":1},{"declaration":3397,"isOffset":false,"isSlot":false,"src":"2822:4:21","valueSize":1}],"flags":["memory-safe"],"id":3403,"nodeType":"InlineAssembly","src":"2773:63:21"}]},"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"2588:86:21","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3405,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:21","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"slot","nameLocation":"2711:4:21","nodeType":"VariableDeclaration","scope":3405,"src":"2703:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:21"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"r","nameLocation":"2760:1:21","nodeType":"VariableDeclaration","scope":3405,"src":"2740:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3352_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3400,"nodeType":"UserDefinedTypeName","pathNode":{"id":3399,"name":"Uint256Slot","nameLocations":["2740:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3352,"src":"2740:11:21"},"referencedDeclaration":3352,"src":"2740:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3352_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:21"},"scope":3461,"src":"2679:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3415,"nodeType":"Block","src":"3020:79:21","statements":[{"AST":{"nativeSrc":"3055:38:21","nodeType":"YulBlock","src":"3055:38:21","statements":[{"nativeSrc":"3069:14:21","nodeType":"YulAssignment","src":"3069:14:21","value":{"name":"slot","nativeSrc":"3079:4:21","nodeType":"YulIdentifier","src":"3079:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:21","nodeType":"YulIdentifier","src":"3069:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3412,"isOffset":false,"isSlot":true,"src":"3069:6:21","suffix":"slot","valueSize":1},{"declaration":3408,"isOffset":false,"isSlot":false,"src":"3079:4:21","valueSize":1}],"flags":["memory-safe"],"id":3414,"nodeType":"InlineAssembly","src":"3030:63:21"}]},"documentation":{"id":3406,"nodeType":"StructuredDocumentation","src":"2848:85:21","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3416,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:21","nodeType":"FunctionDefinition","parameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"slot","nameLocation":"2969:4:21","nodeType":"VariableDeclaration","scope":3416,"src":"2961:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:21"},"returnParameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"r","nameLocation":"3017:1:21","nodeType":"VariableDeclaration","scope":3416,"src":"2998:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3355_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3411,"nodeType":"UserDefinedTypeName","pathNode":{"id":3410,"name":"Int256Slot","nameLocations":["2998:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3355,"src":"2998:10:21"},"referencedDeclaration":3355,"src":"2998:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3355_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:21"},"scope":3461,"src":"2938:161:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3426,"nodeType":"Block","src":"3277:79:21","statements":[{"AST":{"nativeSrc":"3312:38:21","nodeType":"YulBlock","src":"3312:38:21","statements":[{"nativeSrc":"3326:14:21","nodeType":"YulAssignment","src":"3326:14:21","value":{"name":"slot","nativeSrc":"3336:4:21","nodeType":"YulIdentifier","src":"3336:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:21","nodeType":"YulIdentifier","src":"3326:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3423,"isOffset":false,"isSlot":true,"src":"3326:6:21","suffix":"slot","valueSize":1},{"declaration":3419,"isOffset":false,"isSlot":false,"src":"3336:4:21","valueSize":1}],"flags":["memory-safe"],"id":3425,"nodeType":"InlineAssembly","src":"3287:63:21"}]},"documentation":{"id":3417,"nodeType":"StructuredDocumentation","src":"3105:85:21","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3427,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:21","nodeType":"FunctionDefinition","parameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"slot","nameLocation":"3226:4:21","nodeType":"VariableDeclaration","scope":3427,"src":"3218:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:21"},"returnParameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"r","nameLocation":"3274:1:21","nodeType":"VariableDeclaration","scope":3427,"src":"3255:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3358_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3422,"nodeType":"UserDefinedTypeName","pathNode":{"id":3421,"name":"StringSlot","nameLocations":["3255:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"3255:10:21"},"referencedDeclaration":3358,"src":"3255:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3358_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:21"},"scope":3461,"src":"3195:161:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3437,"nodeType":"Block","src":"3558:85:21","statements":[{"AST":{"nativeSrc":"3593:44:21","nodeType":"YulBlock","src":"3593:44:21","statements":[{"nativeSrc":"3607:20:21","nodeType":"YulAssignment","src":"3607:20:21","value":{"name":"store.slot","nativeSrc":"3617:10:21","nodeType":"YulIdentifier","src":"3617:10:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:21","nodeType":"YulIdentifier","src":"3607:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3434,"isOffset":false,"isSlot":true,"src":"3607:6:21","suffix":"slot","valueSize":1},{"declaration":3430,"isOffset":false,"isSlot":true,"src":"3617:10:21","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3436,"nodeType":"InlineAssembly","src":"3568:69:21"}]},"documentation":{"id":3428,"nodeType":"StructuredDocumentation","src":"3362:101:21","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3438,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:21","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"store","nameLocation":"3506:5:21","nodeType":"VariableDeclaration","scope":3438,"src":"3491:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3429,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:21"},"returnParameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"r","nameLocation":"3555:1:21","nodeType":"VariableDeclaration","scope":3438,"src":"3536:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3358_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3433,"nodeType":"UserDefinedTypeName","pathNode":{"id":3432,"name":"StringSlot","nameLocations":["3536:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"3536:10:21"},"referencedDeclaration":3358,"src":"3536:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3358_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:21"},"scope":3461,"src":"3468:175:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3448,"nodeType":"Block","src":"3818:79:21","statements":[{"AST":{"nativeSrc":"3853:38:21","nodeType":"YulBlock","src":"3853:38:21","statements":[{"nativeSrc":"3867:14:21","nodeType":"YulAssignment","src":"3867:14:21","value":{"name":"slot","nativeSrc":"3877:4:21","nodeType":"YulIdentifier","src":"3877:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:21","nodeType":"YulIdentifier","src":"3867:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3445,"isOffset":false,"isSlot":true,"src":"3867:6:21","suffix":"slot","valueSize":1},{"declaration":3441,"isOffset":false,"isSlot":false,"src":"3877:4:21","valueSize":1}],"flags":["memory-safe"],"id":3447,"nodeType":"InlineAssembly","src":"3828:63:21"}]},"documentation":{"id":3439,"nodeType":"StructuredDocumentation","src":"3649:84:21","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3449,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:21","nodeType":"FunctionDefinition","parameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"slot","nameLocation":"3768:4:21","nodeType":"VariableDeclaration","scope":3449,"src":"3760:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:21"},"returnParameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"r","nameLocation":"3815:1:21","nodeType":"VariableDeclaration","scope":3449,"src":"3797:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3361_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3444,"nodeType":"UserDefinedTypeName","pathNode":{"id":3443,"name":"BytesSlot","nameLocations":["3797:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":3361,"src":"3797:9:21"},"referencedDeclaration":3361,"src":"3797:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3361_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:21"},"scope":3461,"src":"3738:159:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3459,"nodeType":"Block","src":"4094:85:21","statements":[{"AST":{"nativeSrc":"4129:44:21","nodeType":"YulBlock","src":"4129:44:21","statements":[{"nativeSrc":"4143:20:21","nodeType":"YulAssignment","src":"4143:20:21","value":{"name":"store.slot","nativeSrc":"4153:10:21","nodeType":"YulIdentifier","src":"4153:10:21"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:21","nodeType":"YulIdentifier","src":"4143:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3456,"isOffset":false,"isSlot":true,"src":"4143:6:21","suffix":"slot","valueSize":1},{"declaration":3452,"isOffset":false,"isSlot":true,"src":"4153:10:21","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3458,"nodeType":"InlineAssembly","src":"4104:69:21"}]},"documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"3903:99:21","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3460,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:21","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"store","nameLocation":"4043:5:21","nodeType":"VariableDeclaration","scope":3460,"src":"4029:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3451,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:21"},"returnParameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"r","nameLocation":"4091:1:21","nodeType":"VariableDeclaration","scope":3460,"src":"4073:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3361_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3455,"nodeType":"UserDefinedTypeName","pathNode":{"id":3454,"name":"BytesSlot","nameLocations":["4073:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":3361,"src":"4073:9:21"},"referencedDeclaration":3361,"src":"4073:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3361_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:21"},"scope":3461,"src":"4007:172:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3462,"src":"1407:2774:21","usedErrors":[],"usedEvents":[]}],"src":"193:3989:21"},"id":21},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5821],"SignedMath":[7730],"Strings":[3781]},"id":3782,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3463,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3782,"sourceUnit":5822,"src":"127:37:22","symbolAliases":[{"foreign":{"id":3464,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"135:4:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3782,"sourceUnit":7731,"src":"165:49:22","symbolAliases":[{"foreign":{"id":3466,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"173:10:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3468,"nodeType":"StructuredDocumentation","src":"216:34:22","text":" @dev String operations."},"fullyImplemented":true,"id":3781,"linearizedBaseContracts":[3781],"name":"Strings","nameLocation":"259:7:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3471,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:22","nodeType":"VariableDeclaration","scope":3781,"src":"273:56:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3469,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3474,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:22","nodeType":"VariableDeclaration","scope":3781,"src":"335:42:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3472,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"384:81:22","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3481,"name":"StringsInsufficientHexLength","nameLocation":"476:28:22","nodeType":"ErrorDefinition","parameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"value","nameLocation":"513:5:22","nodeType":"VariableDeclaration","scope":3481,"src":"505:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"length","nameLocation":"528:6:22","nodeType":"VariableDeclaration","scope":3481,"src":"520:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:22"},"src":"470:66:22"},{"body":{"id":3528,"nodeType":"Block","src":"708:561:22","statements":[{"id":3527,"nodeType":"UncheckedBlock","src":"718:545:22","statements":[{"assignments":[3490],"declarations":[{"constant":false,"id":3490,"mutability":"mutable","name":"length","nameLocation":"750:6:22","nodeType":"VariableDeclaration","scope":3527,"src":"742:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3497,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"770:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3491,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"759:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5821_$","typeString":"type(library Math)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:22","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5593,"src":"759:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:22"},{"assignments":[3499],"declarations":[{"constant":false,"id":3499,"mutability":"mutable","name":"buffer","nameLocation":"808:6:22","nodeType":"VariableDeclaration","scope":3527,"src":"794:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3498,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3504,"initialValue":{"arguments":[{"id":3502,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"828:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3500,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:22"},{"assignments":[3506],"declarations":[{"constant":false,"id":3506,"mutability":"mutable","name":"ptr","nameLocation":"857:3:22","nodeType":"VariableDeclaration","scope":3527,"src":"849:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3507,"nodeType":"VariableDeclarationStatement","src":"849:11:22"},{"AST":{"nativeSrc":"899:67:22","nodeType":"YulBlock","src":"899:67:22","statements":[{"nativeSrc":"917:35:22","nodeType":"YulAssignment","src":"917:35:22","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:22","nodeType":"YulIdentifier","src":"928:6:22"},{"arguments":[{"kind":"number","nativeSrc":"940:2:22","nodeType":"YulLiteral","src":"940:2:22","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:22","nodeType":"YulIdentifier","src":"944:6:22"}],"functionName":{"name":"add","nativeSrc":"936:3:22","nodeType":"YulIdentifier","src":"936:3:22"},"nativeSrc":"936:15:22","nodeType":"YulFunctionCall","src":"936:15:22"}],"functionName":{"name":"add","nativeSrc":"924:3:22","nodeType":"YulIdentifier","src":"924:3:22"},"nativeSrc":"924:28:22","nodeType":"YulFunctionCall","src":"924:28:22"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:22","nodeType":"YulIdentifier","src":"917:3:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3499,"isOffset":false,"isSlot":false,"src":"928:6:22","valueSize":1},{"declaration":3490,"isOffset":false,"isSlot":false,"src":"944:6:22","valueSize":1},{"declaration":3506,"isOffset":false,"isSlot":false,"src":"917:3:22","valueSize":1}],"flags":["memory-safe"],"id":3508,"nodeType":"InlineAssembly","src":"874:92:22"},{"body":{"id":3523,"nodeType":"Block","src":"992:234:22","statements":[{"expression":{"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:22","subExpression":{"id":3510,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"1010:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3512,"nodeType":"ExpressionStatement","src":"1010:5:22"},{"AST":{"nativeSrc":"1058:86:22","nodeType":"YulBlock","src":"1058:86:22","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:22","nodeType":"YulIdentifier","src":"1088:3:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:22","nodeType":"YulIdentifier","src":"1102:5:22"},{"kind":"number","nativeSrc":"1109:2:22","nodeType":"YulLiteral","src":"1109:2:22","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:22","nodeType":"YulIdentifier","src":"1098:3:22"},"nativeSrc":"1098:14:22","nodeType":"YulFunctionCall","src":"1098:14:22"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:22","nodeType":"YulIdentifier","src":"1114:10:22"}],"functionName":{"name":"byte","nativeSrc":"1093:4:22","nodeType":"YulIdentifier","src":"1093:4:22"},"nativeSrc":"1093:32:22","nodeType":"YulFunctionCall","src":"1093:32:22"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:22","nodeType":"YulIdentifier","src":"1080:7:22"},"nativeSrc":"1080:46:22","nodeType":"YulFunctionCall","src":"1080:46:22"},"nativeSrc":"1080:46:22","nodeType":"YulExpressionStatement","src":"1080:46:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":3471,"isOffset":false,"isSlot":false,"src":"1114:10:22","valueSize":1},{"declaration":3506,"isOffset":false,"isSlot":false,"src":"1088:3:22","valueSize":1},{"declaration":3484,"isOffset":false,"isSlot":false,"src":"1102:5:22","valueSize":1}],"flags":["memory-safe"],"id":3513,"nodeType":"InlineAssembly","src":"1033:111:22"},{"expression":{"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"1161:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3517,"nodeType":"ExpressionStatement","src":"1161:11:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"1194:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3522,"nodeType":"IfStatement","src":"1190:21:22","trueBody":{"id":3521,"nodeType":"Break","src":"1206:5:22"}}]},"condition":{"hexValue":"74727565","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3524,"nodeType":"WhileStatement","src":"979:247:22"},{"expression":{"id":3525,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"1246:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3488,"id":3526,"nodeType":"Return","src":"1239:13:22"}]}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"542:90:22","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3529,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:22","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"value","nameLocation":"663:5:22","nodeType":"VariableDeclaration","scope":3529,"src":"655:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:22"},"returnParameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3529,"src":"693:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3486,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:22"},"scope":3781,"src":"637:632:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"1445:92:22","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1476:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:22","trueExpression":{"hexValue":"2d","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1522:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3547,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"1507:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7730_$","typeString":"type(library SignedMath)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:22","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7729,"src":"1507:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3546,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"1498:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3537,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:22","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:22","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:22","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3536,"id":3553,"nodeType":"Return","src":"1455:75:22"}]},"documentation":{"id":3530,"nodeType":"StructuredDocumentation","src":"1275:89:22","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:22","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"value","nameLocation":"1400:5:22","nodeType":"VariableDeclaration","scope":3555,"src":"1393:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3531,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:22"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3555,"src":"1430:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3534,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:22"},"scope":3781,"src":"1369:168:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3574,"nodeType":"Block","src":"1716:100:22","statements":[{"id":3573,"nodeType":"UncheckedBlock","src":"1726:84:22","statements":[{"expression":{"arguments":[{"id":3564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"1769:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"1788:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3565,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"1776:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5821_$","typeString":"type(library Math)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:22","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5764,"src":"1776:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3563,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3575,3658,3678],"referencedDeclaration":3658,"src":"1757:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3562,"id":3572,"nodeType":"Return","src":"1750:49:22"}]}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"1543:94:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:22","nodeType":"FunctionDefinition","parameters":{"id":3559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"value","nameLocation":"1671:5:22","nodeType":"VariableDeclaration","scope":3575,"src":"1663:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:22"},"returnParameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3575,"src":"1701:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3560,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:22"},"scope":3781,"src":"1642:174:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3657,"nodeType":"Block","src":"2029:435:22","statements":[{"assignments":[3586],"declarations":[{"constant":false,"id":3586,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:22","nodeType":"VariableDeclaration","scope":3657,"src":"2039:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3588,"initialValue":{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"2060:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:22"},{"assignments":[3590],"declarations":[{"constant":false,"id":3590,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:22","nodeType":"VariableDeclaration","scope":3657,"src":"2075:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3589,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3599,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3594,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2111:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3591,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:22"},{"expression":{"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3600,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"2132:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3602,"indexExpression":{"hexValue":"30","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3605,"nodeType":"ExpressionStatement","src":"2132:15:22"},{"expression":{"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3606,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"2157:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3608,"indexExpression":{"hexValue":"31","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3611,"nodeType":"ExpressionStatement","src":"2157:15:22"},{"body":{"id":3640,"nodeType":"Block","src":"2227:95:22","statements":[{"expression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3626,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"2241:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3628,"indexExpression":{"id":3627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"2248:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3629,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"2253:10:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3633,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"2264:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3635,"nodeType":"ExpressionStatement","src":"2241:40:22"},{"expression":{"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3636,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"2295:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3639,"nodeType":"ExpressionStatement","src":"2295:16:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"2215:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3641,"initializationExpression":{"assignments":[3613],"declarations":[{"constant":false,"id":3613,"mutability":"mutable","name":"i","nameLocation":"2195:1:22","nodeType":"VariableDeclaration","scope":3641,"src":"2187:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3615,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2203:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:22"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:22","subExpression":{"id":3623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"2224:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3625,"nodeType":"ExpressionStatement","src":"2222:3:22"},"nodeType":"ForStatement","src":"2182:140:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3642,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"2335:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"nodeType":"IfStatement","src":"2331:96:22","trueBody":{"id":3650,"nodeType":"Block","src":"2352:75:22","statements":[{"errorCall":{"arguments":[{"id":3646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"2402:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3647,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2409:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3645,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"2373:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3649,"nodeType":"RevertStatement","src":"2366:50:22"}]}},{"expression":{"arguments":[{"id":3654,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"2450:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3652,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:22","typeDescriptions":{}}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3584,"id":3656,"nodeType":"Return","src":"2436:21:22"}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"1822:112:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3658,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:22","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"value","nameLocation":"1968:5:22","nodeType":"VariableDeclaration","scope":3658,"src":"1960:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"length","nameLocation":"1983:6:22","nodeType":"VariableDeclaration","scope":3658,"src":"1975:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:22"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3658,"src":"2014:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3582,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:22"},"scope":3781,"src":"1939:525:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3677,"nodeType":"Block","src":"2696:75:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3671,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"2741:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3669,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:22","typeDescriptions":{}}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:22","typeDescriptions":{}}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3674,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"2749:14:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3666,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3575,3658,3678],"referencedDeclaration":3658,"src":"2713:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3665,"id":3676,"nodeType":"Return","src":"2706:58:22"}]},"documentation":{"id":3659,"nodeType":"StructuredDocumentation","src":"2470:148:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3678,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:22","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"addr","nameLocation":"2652:4:22","nodeType":"VariableDeclaration","scope":3678,"src":"2644:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:22"},"returnParameters":{"id":3665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3678,"src":"2681:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3663,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:22"},"scope":3781,"src":"2623:148:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3742,"nodeType":"Block","src":"3028:642:22","statements":[{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:22","nodeType":"VariableDeclaration","scope":3742,"src":"3038:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3686,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3694,"initialValue":{"arguments":[{"arguments":[{"id":3691,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"3078:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3690,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3575,3658,3678],"referencedDeclaration":3678,"src":"3066:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3688,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:22","typeDescriptions":{}}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:22"},{"assignments":[3696],"declarations":[{"constant":false,"id":3696,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:22","nodeType":"VariableDeclaration","scope":3742,"src":"3169:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3697,"nodeType":"VariableDeclarationStatement","src":"3169:17:22"},{"AST":{"nativeSrc":"3221:78:22","nodeType":"YulBlock","src":"3221:78:22","statements":[{"nativeSrc":"3235:54:22","nodeType":"YulAssignment","src":"3235:54:22","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:22","nodeType":"YulLiteral","src":"3252:2:22","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:22","nodeType":"YulIdentifier","src":"3270:6:22"},{"kind":"number","nativeSrc":"3278:4:22","nodeType":"YulLiteral","src":"3278:4:22","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:22","nodeType":"YulIdentifier","src":"3266:3:22"},"nativeSrc":"3266:17:22","nodeType":"YulFunctionCall","src":"3266:17:22"},{"kind":"number","nativeSrc":"3285:2:22","nodeType":"YulLiteral","src":"3285:2:22","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:22","nodeType":"YulIdentifier","src":"3256:9:22"},"nativeSrc":"3256:32:22","nodeType":"YulFunctionCall","src":"3256:32:22"}],"functionName":{"name":"shr","nativeSrc":"3248:3:22","nodeType":"YulIdentifier","src":"3248:3:22"},"nativeSrc":"3248:41:22","nodeType":"YulFunctionCall","src":"3248:41:22"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:22","nodeType":"YulIdentifier","src":"3235:9:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3687,"isOffset":false,"isSlot":false,"src":"3270:6:22","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"3235:9:22","valueSize":1}],"flags":["memory-safe"],"id":3698,"nodeType":"InlineAssembly","src":"3196:103:22"},{"body":{"id":3735,"nodeType":"Block","src":"3342:291:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3448:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3716,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3477:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3718,"indexExpression":{"id":3717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"3484:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3714,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:22","typeDescriptions":{}}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3730,"nodeType":"IfStatement","src":"3444:150:22","trueBody":{"id":3729,"nodeType":"Block","src":"3494:100:22","statements":[{"expression":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3723,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3562:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3725,"indexExpression":{"id":3724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"3569:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3728,"nodeType":"ExpressionStatement","src":"3562:17:22"}]}},{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3731,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3607:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3734,"nodeType":"ExpressionStatement","src":"3607:15:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"3330:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"initializationExpression":{"assignments":[3700],"declarations":[{"constant":false,"id":3700,"mutability":"mutable","name":"i","nameLocation":"3322:1:22","nodeType":"VariableDeclaration","scope":3736,"src":"3314:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3702,"initialValue":{"hexValue":"3431","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:22","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:22"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:22","subExpression":{"id":3706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"3339:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3708,"nodeType":"ExpressionStatement","src":"3337:3:22"},"nodeType":"ForStatement","src":"3309:324:22"},{"expression":{"arguments":[{"id":3739,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3656:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3737,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:22","typeDescriptions":{}}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3685,"id":3741,"nodeType":"Return","src":"3642:21:22"}]},"documentation":{"id":3679,"nodeType":"StructuredDocumentation","src":"2777:165:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:22","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"addr","nameLocation":"2984:4:22","nodeType":"VariableDeclaration","scope":3743,"src":"2976:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3680,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:22"},"returnParameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"3013:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3683,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:22"},"scope":3781,"src":"2947:723:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3779,"nodeType":"Block","src":"3825:104:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"3848:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3753,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:22","typeDescriptions":{}}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:22","memberName":"length","nodeType":"MemberAccess","src":"3842:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3760,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"3867:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3758,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:22","typeDescriptions":{}}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:22","memberName":"length","nodeType":"MemberAccess","src":"3861:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"3896:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3765,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:22","typeDescriptions":{}}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3764,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"3919:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3771,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:22","typeDescriptions":{}}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3770,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3752,"id":3778,"nodeType":"Return","src":"3835:87:22"}]},"documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"3676:66:22","text":" @dev Returns true if the two strings are equal."},"id":3780,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:22","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"a","nameLocation":"3776:1:22","nodeType":"VariableDeclaration","scope":3780,"src":"3762:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3745,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"b","nameLocation":"3793:1:22","nodeType":"VariableDeclaration","scope":3780,"src":"3779:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3747,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:22"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3780,"src":"3819:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3750,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:22"},"scope":3781,"src":"3747:182:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3782,"src":"251:3680:22","usedErrors":[3481],"usedEvents":[]}],"src":"101:3831:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4129]},"id":4130,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3783,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3784,"nodeType":"StructuredDocumentation","src":"138:205:23","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4129,"linearizedBaseContracts":[4129],"name":"ECDSA","nameLocation":"352:5:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3789,"members":[{"id":3785,"name":"NoError","nameLocation":"392:7:23","nodeType":"EnumValue","src":"392:7:23"},{"id":3786,"name":"InvalidSignature","nameLocation":"409:16:23","nodeType":"EnumValue","src":"409:16:23"},{"id":3787,"name":"InvalidSignatureLength","nameLocation":"435:22:23","nodeType":"EnumValue","src":"435:22:23"},{"id":3788,"name":"InvalidSignatureS","nameLocation":"467:17:23","nodeType":"EnumValue","src":"467:17:23"}],"name":"RecoverError","nameLocation":"369:12:23","nodeType":"EnumDefinition","src":"364:126:23"},{"documentation":{"id":3790,"nodeType":"StructuredDocumentation","src":"496:63:23","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3792,"name":"ECDSAInvalidSignature","nameLocation":"570:21:23","nodeType":"ErrorDefinition","parameters":{"id":3791,"nodeType":"ParameterList","parameters":[],"src":"591:2:23"},"src":"564:30:23"},{"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"600:60:23","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3797,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:23","nodeType":"ErrorDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"length","nameLocation":"707:6:23","nodeType":"VariableDeclaration","scope":3797,"src":"699:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:23"},"src":"665:50:23"},{"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"721:85:23","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3802,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:23","nodeType":"ErrorDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"s","nameLocation":"848:1:23","nodeType":"VariableDeclaration","scope":3802,"src":"840:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:23"},"src":"811:40:23"},{"body":{"id":3854,"nodeType":"Block","src":"2285:622:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3817,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"2299:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:23","memberName":"length","nodeType":"MemberAccess","src":"2299:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:23","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3852,"nodeType":"Block","src":"2793:108:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:23","typeDescriptions":{}}},"id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3843,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"2827:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3789_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:23","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"2827:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3847,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"2872:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:23","memberName":"length","nodeType":"MemberAccess","src":"2872:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:23","typeDescriptions":{}}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3816,"id":3851,"nodeType":"Return","src":"2807:83:23"}]},"id":3853,"nodeType":"IfStatement","src":"2295:606:23","trueBody":{"id":3838,"nodeType":"Block","src":"2323:464:23","statements":[{"assignments":[3822],"declarations":[{"constant":false,"id":3822,"mutability":"mutable","name":"r","nameLocation":"2345:1:23","nodeType":"VariableDeclaration","scope":3838,"src":"2337:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3823,"nodeType":"VariableDeclarationStatement","src":"2337:9:23"},{"assignments":[3825],"declarations":[{"constant":false,"id":3825,"mutability":"mutable","name":"s","nameLocation":"2368:1:23","nodeType":"VariableDeclaration","scope":3838,"src":"2360:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3826,"nodeType":"VariableDeclarationStatement","src":"2360:9:23"},{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"v","nameLocation":"2389:1:23","nodeType":"VariableDeclaration","scope":3838,"src":"2383:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3827,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3829,"nodeType":"VariableDeclarationStatement","src":"2383:7:23"},{"AST":{"nativeSrc":"2560:171:23","nodeType":"YulBlock","src":"2560:171:23","statements":[{"nativeSrc":"2578:32:23","nodeType":"YulAssignment","src":"2578:32:23","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:23","nodeType":"YulIdentifier","src":"2593:9:23"},{"kind":"number","nativeSrc":"2604:4:23","nodeType":"YulLiteral","src":"2604:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:23","nodeType":"YulIdentifier","src":"2589:3:23"},"nativeSrc":"2589:20:23","nodeType":"YulFunctionCall","src":"2589:20:23"}],"functionName":{"name":"mload","nativeSrc":"2583:5:23","nodeType":"YulIdentifier","src":"2583:5:23"},"nativeSrc":"2583:27:23","nodeType":"YulFunctionCall","src":"2583:27:23"},"variableNames":[{"name":"r","nativeSrc":"2578:1:23","nodeType":"YulIdentifier","src":"2578:1:23"}]},{"nativeSrc":"2627:32:23","nodeType":"YulAssignment","src":"2627:32:23","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:23","nodeType":"YulIdentifier","src":"2642:9:23"},{"kind":"number","nativeSrc":"2653:4:23","nodeType":"YulLiteral","src":"2653:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:23","nodeType":"YulIdentifier","src":"2638:3:23"},"nativeSrc":"2638:20:23","nodeType":"YulFunctionCall","src":"2638:20:23"}],"functionName":{"name":"mload","nativeSrc":"2632:5:23","nodeType":"YulIdentifier","src":"2632:5:23"},"nativeSrc":"2632:27:23","nodeType":"YulFunctionCall","src":"2632:27:23"},"variableNames":[{"name":"s","nativeSrc":"2627:1:23","nodeType":"YulIdentifier","src":"2627:1:23"}]},{"nativeSrc":"2676:41:23","nodeType":"YulAssignment","src":"2676:41:23","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:23","nodeType":"YulLiteral","src":"2686:1:23","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:23","nodeType":"YulIdentifier","src":"2699:9:23"},{"kind":"number","nativeSrc":"2710:4:23","nodeType":"YulLiteral","src":"2710:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:23","nodeType":"YulIdentifier","src":"2695:3:23"},"nativeSrc":"2695:20:23","nodeType":"YulFunctionCall","src":"2695:20:23"}],"functionName":{"name":"mload","nativeSrc":"2689:5:23","nodeType":"YulIdentifier","src":"2689:5:23"},"nativeSrc":"2689:27:23","nodeType":"YulFunctionCall","src":"2689:27:23"}],"functionName":{"name":"byte","nativeSrc":"2681:4:23","nodeType":"YulIdentifier","src":"2681:4:23"},"nativeSrc":"2681:36:23","nodeType":"YulFunctionCall","src":"2681:36:23"},"variableNames":[{"name":"v","nativeSrc":"2676:1:23","nodeType":"YulIdentifier","src":"2676:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3822,"isOffset":false,"isSlot":false,"src":"2578:1:23","valueSize":1},{"declaration":3825,"isOffset":false,"isSlot":false,"src":"2627:1:23","valueSize":1},{"declaration":3807,"isOffset":false,"isSlot":false,"src":"2593:9:23","valueSize":1},{"declaration":3807,"isOffset":false,"isSlot":false,"src":"2642:9:23","valueSize":1},{"declaration":3807,"isOffset":false,"isSlot":false,"src":"2699:9:23","valueSize":1},{"declaration":3828,"isOffset":false,"isSlot":false,"src":"2676:1:23","valueSize":1}],"flags":["memory-safe"],"id":3830,"nodeType":"InlineAssembly","src":"2535:196:23"},{"expression":{"arguments":[{"id":3832,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"2762:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3833,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"2768:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3834,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2771:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3835,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"2774:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3831,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3855,3935,4043],"referencedDeclaration":4043,"src":"2751:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3816,"id":3837,"nodeType":"Return","src":"2744:32:23"}]}}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"857:1267:23","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3855,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:23","nodeType":"FunctionDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"hash","nameLocation":"2166:4:23","nodeType":"VariableDeclaration","scope":3855,"src":"2158:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"signature","nameLocation":"2193:9:23","nodeType":"VariableDeclaration","scope":3855,"src":"2180:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3806,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:23"},"returnParameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:23","nodeType":"VariableDeclaration","scope":3855,"src":"2232:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3809,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"err","nameLocation":"2264:3:23","nodeType":"VariableDeclaration","scope":3855,"src":"2251:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3812,"nodeType":"UserDefinedTypeName","pathNode":{"id":3811,"name":"RecoverError","nameLocations":["2251:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3789,"src":"2251:12:23"},"referencedDeclaration":3789,"src":"2251:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:23","nodeType":"VariableDeclaration","scope":3855,"src":"2269:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:23"},"scope":4129,"src":"2129:778:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3884,"nodeType":"Block","src":"3801:168:23","statements":[{"assignments":[3866,3869,3871],"declarations":[{"constant":false,"id":3866,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:23","nodeType":"VariableDeclaration","scope":3884,"src":"3812:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3865,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"error","nameLocation":"3844:5:23","nodeType":"VariableDeclaration","scope":3884,"src":"3831:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3868,"nodeType":"UserDefinedTypeName","pathNode":{"id":3867,"name":"RecoverError","nameLocations":["3831:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3789,"src":"3831:12:23"},"referencedDeclaration":3789,"src":"3831:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3871,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:23","nodeType":"VariableDeclaration","scope":3884,"src":"3851:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3876,"initialValue":{"arguments":[{"id":3873,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"3882:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3874,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"3888:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3872,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3855,3935,4043],"referencedDeclaration":3855,"src":"3871:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:23"},{"expression":{"arguments":[{"id":3878,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"3920:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},{"id":3879,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"3927:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3877,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"3908:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3789_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3881,"nodeType":"ExpressionStatement","src":"3908:28:23"},{"expression":{"id":3882,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"3953:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3864,"id":3883,"nodeType":"Return","src":"3946:16:23"}]},"documentation":{"id":3856,"nodeType":"StructuredDocumentation","src":"2913:796:23","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:23","nodeType":"FunctionDefinition","parameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"hash","nameLocation":"3739:4:23","nodeType":"VariableDeclaration","scope":3885,"src":"3731:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"signature","nameLocation":"3758:9:23","nodeType":"VariableDeclaration","scope":3885,"src":"3745:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:23"},"returnParameters":{"id":3864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"3792:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3862,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:23"},"scope":4129,"src":"3714:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3934,"nodeType":"Block","src":"4348:342:23","statements":[{"id":3933,"nodeType":"UncheckedBlock","src":"4358:326:23","statements":[{"assignments":[3903],"declarations":[{"constant":false,"id":3903,"mutability":"mutable","name":"s","nameLocation":"4390:1:23","nodeType":"VariableDeclaration","scope":3933,"src":"4382:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3910,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"4394:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:23","typeDescriptions":{}}},"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:23"},{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"v","nameLocation":"4591:1:23","nodeType":"VariableDeclaration","scope":3933,"src":"4585:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3911,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3925,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3917,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"4610:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:23","typeDescriptions":{}}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:23","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3913,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:23","typeDescriptions":{}}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:23"},{"expression":{"arguments":[{"id":3927,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"4659:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3928,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"4665:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3929,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"4668:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3930,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"4671:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3926,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3855,3935,4043],"referencedDeclaration":4043,"src":"4648:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3901,"id":3932,"nodeType":"Return","src":"4641:32:23"}]}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"3975:205:23","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3935,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:23","nodeType":"FunctionDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"hash","nameLocation":"4222:4:23","nodeType":"VariableDeclaration","scope":3935,"src":"4214:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"r","nameLocation":"4244:1:23","nodeType":"VariableDeclaration","scope":3935,"src":"4236:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3892,"mutability":"mutable","name":"vs","nameLocation":"4263:2:23","nodeType":"VariableDeclaration","scope":3935,"src":"4255:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:23"},"returnParameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:23","nodeType":"VariableDeclaration","scope":3935,"src":"4295:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3894,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"err","nameLocation":"4327:3:23","nodeType":"VariableDeclaration","scope":3935,"src":"4314:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3897,"nodeType":"UserDefinedTypeName","pathNode":{"id":3896,"name":"RecoverError","nameLocations":["4314:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3789,"src":"4314:12:23"},"referencedDeclaration":3789,"src":"4314:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:23","nodeType":"VariableDeclaration","scope":3935,"src":"4332:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:23"},"scope":4129,"src":"4185:505:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3967,"nodeType":"Block","src":"4903:164:23","statements":[{"assignments":[3948,3951,3953],"declarations":[{"constant":false,"id":3948,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:23","nodeType":"VariableDeclaration","scope":3967,"src":"4914:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3947,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"error","nameLocation":"4946:5:23","nodeType":"VariableDeclaration","scope":3967,"src":"4933:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3950,"nodeType":"UserDefinedTypeName","pathNode":{"id":3949,"name":"RecoverError","nameLocations":["4933:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3789,"src":"4933:12:23"},"referencedDeclaration":3789,"src":"4933:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:23","nodeType":"VariableDeclaration","scope":3967,"src":"4953:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3959,"initialValue":{"arguments":[{"id":3955,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4984:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3956,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4990:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3957,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"4993:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3954,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3855,3935,4043],"referencedDeclaration":3935,"src":"4973:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:23"},{"expression":{"arguments":[{"id":3961,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"5018:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},{"id":3962,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"5025:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3960,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"5006:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3789_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3964,"nodeType":"ExpressionStatement","src":"5006:28:23"},{"expression":{"id":3965,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"5051:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3946,"id":3966,"nodeType":"Return","src":"5044:16:23"}]},"documentation":{"id":3936,"nodeType":"StructuredDocumentation","src":"4696:116:23","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3968,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:23","nodeType":"FunctionDefinition","parameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"hash","nameLocation":"4842:4:23","nodeType":"VariableDeclaration","scope":3968,"src":"4834:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"r","nameLocation":"4856:1:23","nodeType":"VariableDeclaration","scope":3968,"src":"4848:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3942,"mutability":"mutable","name":"vs","nameLocation":"4867:2:23","nodeType":"VariableDeclaration","scope":3968,"src":"4859:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:23"},"returnParameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3968,"src":"4894:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3944,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:23"},"scope":4129,"src":"4817:250:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4042,"nodeType":"Block","src":"5382:1372:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3989,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"6278:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:23","typeDescriptions":{}}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4003,"nodeType":"IfStatement","src":"6266:164:23","trueBody":{"id":4002,"nodeType":"Block","src":"6351:79:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3993,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:23","typeDescriptions":{}}},"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3997,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"6385:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3789_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:23","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3788,"src":"6385:30:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},{"id":3999,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"6417:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3986,"id":4001,"nodeType":"Return","src":"6365:54:23"}]}},{"assignments":[4005],"declarations":[{"constant":false,"id":4005,"mutability":"mutable","name":"signer","nameLocation":"6532:6:23","nodeType":"VariableDeclaration","scope":4042,"src":"6524:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4012,"initialValue":{"arguments":[{"id":4007,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"6551:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4008,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"6557:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4009,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"6560:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4010,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"6563:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4006,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:23","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"6579:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4014,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:23","typeDescriptions":{}}},"id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4032,"nodeType":"IfStatement","src":"6575:113:23","trueBody":{"id":4031,"nodeType":"Block","src":"6601:87:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4019,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:23","typeDescriptions":{}}},"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4023,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"6635:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3789_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:23","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"6635:29:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:23","typeDescriptions":{}}},"id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3986,"id":4030,"nodeType":"Return","src":"6615:62:23"}]}},{"expression":{"components":[{"id":4033,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"6706:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4034,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"6714:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3789_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:23","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"6714:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:23","typeDescriptions":{}}},"id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3986,"id":4041,"nodeType":"Return","src":"6698:49:23"}]},"documentation":{"id":3969,"nodeType":"StructuredDocumentation","src":"5073:125:23","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4043,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:23","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"hash","nameLocation":"5240:4:23","nodeType":"VariableDeclaration","scope":4043,"src":"5232:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"v","nameLocation":"5260:1:23","nodeType":"VariableDeclaration","scope":4043,"src":"5254:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3972,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3975,"mutability":"mutable","name":"r","nameLocation":"5279:1:23","nodeType":"VariableDeclaration","scope":4043,"src":"5271:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"s","nameLocation":"5298:1:23","nodeType":"VariableDeclaration","scope":4043,"src":"5290:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:23"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:23","nodeType":"VariableDeclaration","scope":4043,"src":"5329:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3979,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"err","nameLocation":"5361:3:23","nodeType":"VariableDeclaration","scope":4043,"src":"5348:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3982,"nodeType":"UserDefinedTypeName","pathNode":{"id":3981,"name":"RecoverError","nameLocations":["5348:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3789,"src":"5348:12:23"},"referencedDeclaration":3789,"src":"5348:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:23","nodeType":"VariableDeclaration","scope":4043,"src":"5366:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:23"},"scope":4129,"src":"5203:1551:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"6981:166:23","statements":[{"assignments":[4058,4061,4063],"declarations":[{"constant":false,"id":4058,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:23","nodeType":"VariableDeclaration","scope":4078,"src":"6992:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4057,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"error","nameLocation":"7024:5:23","nodeType":"VariableDeclaration","scope":4078,"src":"7011:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4060,"nodeType":"UserDefinedTypeName","pathNode":{"id":4059,"name":"RecoverError","nameLocations":["7011:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3789,"src":"7011:12:23"},"referencedDeclaration":3789,"src":"7011:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4063,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:23","nodeType":"VariableDeclaration","scope":4078,"src":"7031:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4070,"initialValue":{"arguments":[{"id":4065,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"7062:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4066,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"7068:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4067,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7071:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4068,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"7074:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4064,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3855,3935,4043],"referencedDeclaration":4043,"src":"7051:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3789_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:23"},{"expression":{"arguments":[{"id":4072,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"7098:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},{"id":4073,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7105:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4071,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"7086:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3789_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4075,"nodeType":"ExpressionStatement","src":"7086:28:23"},{"expression":{"id":4076,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"7131:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4056,"id":4077,"nodeType":"Return","src":"7124:16:23"}]},"documentation":{"id":4044,"nodeType":"StructuredDocumentation","src":"6760:122:23","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:23","nodeType":"FunctionDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"hash","nameLocation":"6912:4:23","nodeType":"VariableDeclaration","scope":4079,"src":"6904:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4048,"mutability":"mutable","name":"v","nameLocation":"6924:1:23","nodeType":"VariableDeclaration","scope":4079,"src":"6918:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4047,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4050,"mutability":"mutable","name":"r","nameLocation":"6935:1:23","nodeType":"VariableDeclaration","scope":4079,"src":"6927:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4052,"mutability":"mutable","name":"s","nameLocation":"6946:1:23","nodeType":"VariableDeclaration","scope":4079,"src":"6938:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:23"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4079,"src":"6972:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4054,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:23"},"scope":4129,"src":"6887:260:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4127,"nodeType":"Block","src":"7352:460:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"7366:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4089,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"7375:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3789_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:23","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"7375:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4094,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"7462:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4095,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"7471:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3789_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:23","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"7471:29:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"7567:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4103,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"7576:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3789_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:23","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"7576:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4114,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"7701:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4115,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"7710:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3789_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:23","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3788,"src":"7710:30:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4123,"nodeType":"IfStatement","src":"7697:109:23","trueBody":{"id":4122,"nodeType":"Block","src":"7742:64:23","statements":[{"errorCall":{"arguments":[{"id":4119,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"7786:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4118,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"7763:22:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4121,"nodeType":"RevertStatement","src":"7756:39:23"}]}},"id":4124,"nodeType":"IfStatement","src":"7563:243:23","trueBody":{"id":4113,"nodeType":"Block","src":"7613:78:23","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4109,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"7670:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:23","typeDescriptions":{}}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4106,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"7634:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4112,"nodeType":"RevertStatement","src":"7627:53:23"}]}},"id":4125,"nodeType":"IfStatement","src":"7458:348:23","trueBody":{"id":4101,"nodeType":"Block","src":"7502:55:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4098,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"7523:21:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4100,"nodeType":"RevertStatement","src":"7516:30:23"}]}},"id":4126,"nodeType":"IfStatement","src":"7362:444:23","trueBody":{"id":4093,"nodeType":"Block","src":"7397:55:23","statements":[{"functionReturnParameters":4087,"id":4092,"nodeType":"Return","src":"7411:7:23"}]}}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"7153:122:23","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4128,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:23","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"error","nameLocation":"7314:5:23","nodeType":"VariableDeclaration","scope":4128,"src":"7301:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4082,"nodeType":"UserDefinedTypeName","pathNode":{"id":4081,"name":"RecoverError","nameLocations":["7301:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3789,"src":"7301:12:23"},"referencedDeclaration":3789,"src":"7301:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3789","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4085,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:23","nodeType":"VariableDeclaration","scope":4128,"src":"7321:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:23"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[],"src":"7352:0:23"},"scope":4129,"src":"7280:532:23","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4130,"src":"344:7470:23","usedErrors":[3792,3797,3802],"usedEvents":[]}],"src":"112:7703:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4203],"Strings":[3781]},"id":4204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4131,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4204,"sourceUnit":3782,"src":"149:39:24","symbolAliases":[{"foreign":{"id":4132,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"157:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"190:330:24","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4203,"linearizedBaseContracts":[4203],"name":"MessageHashUtils","nameLocation":"529:16:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":4143,"nodeType":"Block","src":"1314:341:24","statements":[{"AST":{"nativeSrc":"1349:300:24","nodeType":"YulBlock","src":"1349:300:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:24","nodeType":"YulLiteral","src":"1370:4:24","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:24","nodeType":"YulLiteral","src":"1376:34:24","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:24","nodeType":"YulIdentifier","src":"1363:6:24"},"nativeSrc":"1363:48:24","nodeType":"YulFunctionCall","src":"1363:48:24"},"nativeSrc":"1363:48:24","nodeType":"YulExpressionStatement","src":"1363:48:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:24","nodeType":"YulLiteral","src":"1472:4:24","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:24","nodeType":"YulIdentifier","src":"1478:11:24"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:24","nodeType":"YulIdentifier","src":"1465:6:24"},"nativeSrc":"1465:25:24","nodeType":"YulFunctionCall","src":"1465:25:24"},"nativeSrc":"1465:25:24","nodeType":"YulExpressionStatement","src":"1465:25:24"},{"nativeSrc":"1544:31:24","nodeType":"YulAssignment","src":"1544:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:24","nodeType":"YulLiteral","src":"1564:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:24","nodeType":"YulLiteral","src":"1570:4:24","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:24","nodeType":"YulIdentifier","src":"1554:9:24"},"nativeSrc":"1554:21:24","nodeType":"YulFunctionCall","src":"1554:21:24"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:24","nodeType":"YulIdentifier","src":"1544:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4140,"isOffset":false,"isSlot":false,"src":"1544:6:24","valueSize":1},{"declaration":4137,"isOffset":false,"isSlot":false,"src":"1478:11:24","valueSize":1}],"flags":["memory-safe"],"id":4142,"nodeType":"InlineAssembly","src":"1324:325:24"}]},"documentation":{"id":4135,"nodeType":"StructuredDocumentation","src":"552:665:24","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4144,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:24","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:24","nodeType":"VariableDeclaration","scope":4144,"src":"1254:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:24"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"digest","nameLocation":"1306:6:24","nodeType":"VariableDeclaration","scope":4144,"src":"1298:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:24"},"scope":4203,"src":"1222:433:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4169,"nodeType":"Block","src":"2207:143:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4161,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"2316:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:24","memberName":"length","nodeType":"MemberAccess","src":"2316:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4159,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"2299:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3781_$","typeString":"type(library Strings)"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:24","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3529,"src":"2299:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4157,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:24","typeDescriptions":{}}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4165,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"2334:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4153,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:24","typeDescriptions":{}}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:24","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4152,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4151,"id":4168,"nodeType":"Return","src":"2217:126:24"}]},"documentation":{"id":4145,"nodeType":"StructuredDocumentation","src":"1661:455:24","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4170,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:24","nodeType":"FunctionDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"message","nameLocation":"2166:7:24","nodeType":"VariableDeclaration","scope":4170,"src":"2153:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4146,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:24"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4170,"src":"2198:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:24"},"scope":4203,"src":"2121:229:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4189,"nodeType":"Block","src":"2804:80:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4184,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"2860:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4185,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"2871:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4181,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4180,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4179,"id":4188,"nodeType":"Return","src":"2814:63:24"}]},"documentation":{"id":4171,"nodeType":"StructuredDocumentation","src":"2356:332:24","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4190,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:24","nodeType":"FunctionDefinition","parameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"validator","nameLocation":"2742:9:24","nodeType":"VariableDeclaration","scope":4190,"src":"2734:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4172,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4175,"mutability":"mutable","name":"data","nameLocation":"2766:4:24","nodeType":"VariableDeclaration","scope":4190,"src":"2753:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:24"},"returnParameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4190,"src":"2795:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:24"},"scope":4203,"src":"2693:191:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4201,"nodeType":"Block","src":"3435:265:24","statements":[{"AST":{"nativeSrc":"3470:224:24","nodeType":"YulBlock","src":"3470:224:24","statements":[{"nativeSrc":"3484:22:24","nodeType":"YulVariableDeclaration","src":"3484:22:24","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:24","nodeType":"YulLiteral","src":"3501:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:24","nodeType":"YulIdentifier","src":"3495:5:24"},"nativeSrc":"3495:11:24","nodeType":"YulFunctionCall","src":"3495:11:24"},"variables":[{"name":"ptr","nativeSrc":"3488:3:24","nodeType":"YulTypedName","src":"3488:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:24","nodeType":"YulIdentifier","src":"3526:3:24"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:24","nodeType":"YulLiteral","src":"3531:10:24","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:24","nodeType":"YulIdentifier","src":"3519:6:24"},"nativeSrc":"3519:23:24","nodeType":"YulFunctionCall","src":"3519:23:24"},"nativeSrc":"3519:23:24","nodeType":"YulExpressionStatement","src":"3519:23:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:24","nodeType":"YulIdentifier","src":"3566:3:24"},{"kind":"number","nativeSrc":"3571:4:24","nodeType":"YulLiteral","src":"3571:4:24","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:24","nodeType":"YulIdentifier","src":"3562:3:24"},"nativeSrc":"3562:14:24","nodeType":"YulFunctionCall","src":"3562:14:24"},{"name":"domainSeparator","nativeSrc":"3578:15:24","nodeType":"YulIdentifier","src":"3578:15:24"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:24","nodeType":"YulIdentifier","src":"3555:6:24"},"nativeSrc":"3555:39:24","nodeType":"YulFunctionCall","src":"3555:39:24"},"nativeSrc":"3555:39:24","nodeType":"YulExpressionStatement","src":"3555:39:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:24","nodeType":"YulIdentifier","src":"3618:3:24"},{"kind":"number","nativeSrc":"3623:4:24","nodeType":"YulLiteral","src":"3623:4:24","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:24","nodeType":"YulIdentifier","src":"3614:3:24"},"nativeSrc":"3614:14:24","nodeType":"YulFunctionCall","src":"3614:14:24"},{"name":"structHash","nativeSrc":"3630:10:24","nodeType":"YulIdentifier","src":"3630:10:24"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:24","nodeType":"YulIdentifier","src":"3607:6:24"},"nativeSrc":"3607:34:24","nodeType":"YulFunctionCall","src":"3607:34:24"},"nativeSrc":"3607:34:24","nodeType":"YulExpressionStatement","src":"3607:34:24"},{"nativeSrc":"3654:30:24","nodeType":"YulAssignment","src":"3654:30:24","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:24","nodeType":"YulIdentifier","src":"3674:3:24"},{"kind":"number","nativeSrc":"3679:4:24","nodeType":"YulLiteral","src":"3679:4:24","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:24","nodeType":"YulIdentifier","src":"3664:9:24"},"nativeSrc":"3664:20:24","nodeType":"YulFunctionCall","src":"3664:20:24"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:24","nodeType":"YulIdentifier","src":"3654:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4198,"isOffset":false,"isSlot":false,"src":"3654:6:24","valueSize":1},{"declaration":4193,"isOffset":false,"isSlot":false,"src":"3578:15:24","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"3630:10:24","valueSize":1}],"flags":["memory-safe"],"id":4200,"nodeType":"InlineAssembly","src":"3445:249:24"}]},"documentation":{"id":4191,"nodeType":"StructuredDocumentation","src":"2890:431:24","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4202,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:24","nodeType":"FunctionDefinition","parameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:24","nodeType":"VariableDeclaration","scope":4202,"src":"3351:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4195,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:24","nodeType":"VariableDeclaration","scope":4202,"src":"3376:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:24"},"returnParameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"digest","nameLocation":"3427:6:24","nodeType":"VariableDeclaration","scope":4202,"src":"3419:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:24"},"scope":4203,"src":"3326:374:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4204,"src":"521:3181:24","usedErrors":[],"usedEvents":[]}],"src":"123:3580:24"},"id":24},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4215]},"id":4216,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4205,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4206,"nodeType":"StructuredDocumentation","src":"141:280:25","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4215,"linearizedBaseContracts":[4215],"name":"IERC165","nameLocation":"432:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4207,"nodeType":"StructuredDocumentation","src":"446:340:25","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4214,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:25","nodeType":"FunctionDefinition","parameters":{"id":4210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4209,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:25","nodeType":"VariableDeclaration","scope":4214,"src":"818:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4208,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:25"},"returnParameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4214,"src":"861:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4211,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:25"},"scope":4215,"src":"791:76:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4216,"src":"422:447:25","usedErrors":[],"usedEvents":[]}],"src":"115:755:25"},"id":25},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5821],"Panic":[3268],"SafeCast":[7586]},"id":5822,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4217,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5822,"sourceUnit":3269,"src":"129:35:26","symbolAliases":[{"foreign":{"id":4218,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"137:5:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5822,"sourceUnit":7587,"src":"165:40:26","symbolAliases":[{"foreign":{"id":4220,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"173:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4222,"nodeType":"StructuredDocumentation","src":"207:73:26","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5821,"linearizedBaseContracts":[5821],"name":"Math","nameLocation":"289:4:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4227,"members":[{"id":4223,"name":"Floor","nameLocation":"324:5:26","nodeType":"EnumValue","src":"324:5:26"},{"id":4224,"name":"Ceil","nameLocation":"367:4:26","nodeType":"EnumValue","src":"367:4:26"},{"id":4225,"name":"Trunc","nameLocation":"409:5:26","nodeType":"EnumValue","src":"409:5:26"},{"id":4226,"name":"Expand","nameLocation":"439:6:26","nodeType":"EnumValue","src":"439:6:26"}],"name":"Rounding","nameLocation":"305:8:26","nodeType":"EnumDefinition","src":"300:169:26"},{"body":{"id":4258,"nodeType":"Block","src":"677:140:26","statements":[{"id":4257,"nodeType":"UncheckedBlock","src":"687:124:26","statements":[{"assignments":[4240],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"c","nameLocation":"719:1:26","nodeType":"VariableDeclaration","scope":4257,"src":"711:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4244,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"723:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4242,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"727:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4245,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"746:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"750:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4252,"nodeType":"IfStatement","src":"742:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4238,"id":4251,"nodeType":"Return","src":"753:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4254,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"798:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4238,"id":4256,"nodeType":"Return","src":"784:16:26"}]}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"475:106:26","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4259,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:26","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"a","nameLocation":"610:1:26","nodeType":"VariableDeclaration","scope":4259,"src":"602:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"b","nameLocation":"621:1:26","nodeType":"VariableDeclaration","scope":4259,"src":"613:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:26"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"success","nameLocation":"652:7:26","nodeType":"VariableDeclaration","scope":4259,"src":"647:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4234,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"result","nameLocation":"669:6:26","nodeType":"VariableDeclaration","scope":4259,"src":"661:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:26"},"scope":5821,"src":"586:231:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4286,"nodeType":"Block","src":"1028:113:26","statements":[{"id":4285,"nodeType":"UncheckedBlock","src":"1038:97:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"1066:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"1070:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4278,"nodeType":"IfStatement","src":"1062:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4270,"id":4277,"nodeType":"Return","src":"1073:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"1118:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4281,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"1122:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4270,"id":4284,"nodeType":"Return","src":"1104:20:26"}]}]},"documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"823:109:26","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4287,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:26","nodeType":"FunctionDefinition","parameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"a","nameLocation":"961:1:26","nodeType":"VariableDeclaration","scope":4287,"src":"953:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4264,"mutability":"mutable","name":"b","nameLocation":"972:1:26","nodeType":"VariableDeclaration","scope":4287,"src":"964:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:26"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"success","nameLocation":"1003:7:26","nodeType":"VariableDeclaration","scope":4287,"src":"998:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4266,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4269,"mutability":"mutable","name":"result","nameLocation":"1020:6:26","nodeType":"VariableDeclaration","scope":4287,"src":"1012:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:26"},"scope":5821,"src":"937:204:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4328,"nodeType":"Block","src":"1355:417:26","statements":[{"id":4327,"nodeType":"UncheckedBlock","src":"1365:401:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"1623:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4306,"nodeType":"IfStatement","src":"1619:28:26","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4298,"id":4305,"nodeType":"Return","src":"1631:16:26"}},{"assignments":[4308],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"c","nameLocation":"1669:1:26","nodeType":"VariableDeclaration","scope":4327,"src":"1661:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4312,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"1673:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"1677:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"1696:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"1700:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4316,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"1705:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4322,"nodeType":"IfStatement","src":"1692:33:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4298,"id":4321,"nodeType":"Return","src":"1708:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4324,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"1753:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4298,"id":4326,"nodeType":"Return","src":"1739:16:26"}]}]},"documentation":{"id":4288,"nodeType":"StructuredDocumentation","src":"1147:112:26","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4329,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:26","nodeType":"FunctionDefinition","parameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"a","nameLocation":"1288:1:26","nodeType":"VariableDeclaration","scope":4329,"src":"1280:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"b","nameLocation":"1299:1:26","nodeType":"VariableDeclaration","scope":4329,"src":"1291:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:26"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"success","nameLocation":"1330:7:26","nodeType":"VariableDeclaration","scope":4329,"src":"1325:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4294,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4297,"mutability":"mutable","name":"result","nameLocation":"1347:6:26","nodeType":"VariableDeclaration","scope":4329,"src":"1339:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:26"},"scope":5821,"src":"1264:508:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4356,"nodeType":"Block","src":"1987:114:26","statements":[{"id":4355,"nodeType":"UncheckedBlock","src":"1997:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"2025:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4348,"nodeType":"IfStatement","src":"2021:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4340,"id":4347,"nodeType":"Return","src":"2033:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"2078:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"2082:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4340,"id":4354,"nodeType":"Return","src":"2064:20:26"}]}]},"documentation":{"id":4330,"nodeType":"StructuredDocumentation","src":"1778:113:26","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4357,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:26","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"a","nameLocation":"1920:1:26","nodeType":"VariableDeclaration","scope":4357,"src":"1912:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4334,"mutability":"mutable","name":"b","nameLocation":"1931:1:26","nodeType":"VariableDeclaration","scope":4357,"src":"1923:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:26"},"returnParameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"success","nameLocation":"1962:7:26","nodeType":"VariableDeclaration","scope":4357,"src":"1957:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4336,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4339,"mutability":"mutable","name":"result","nameLocation":"1979:6:26","nodeType":"VariableDeclaration","scope":4357,"src":"1971:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:26"},"scope":5821,"src":"1896:205:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4384,"nodeType":"Block","src":"2326:114:26","statements":[{"id":4383,"nodeType":"UncheckedBlock","src":"2336:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"2364:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4376,"nodeType":"IfStatement","src":"2360:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4368,"id":4375,"nodeType":"Return","src":"2372:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"2417:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4379,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"2421:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4368,"id":4382,"nodeType":"Return","src":"2403:20:26"}]}]},"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"2107:123:26","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4385,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:26","nodeType":"FunctionDefinition","parameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"a","nameLocation":"2259:1:26","nodeType":"VariableDeclaration","scope":4385,"src":"2251:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4362,"mutability":"mutable","name":"b","nameLocation":"2270:1:26","nodeType":"VariableDeclaration","scope":4385,"src":"2262:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:26"},"returnParameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"success","nameLocation":"2301:7:26","nodeType":"VariableDeclaration","scope":4385,"src":"2296:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4364,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4367,"mutability":"mutable","name":"result","nameLocation":"2318:6:26","nodeType":"VariableDeclaration","scope":4385,"src":"2310:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:26"},"scope":5821,"src":"2235:205:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4411,"nodeType":"Block","src":"2912:207:26","statements":[{"id":4410,"nodeType":"UncheckedBlock","src":"2922:191:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3060:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"3066:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3070:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4404,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"3091:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4402,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"3075:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"3075:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4396,"id":4409,"nodeType":"Return","src":"3053:49:26"}]}]},"documentation":{"id":4386,"nodeType":"StructuredDocumentation","src":"2446:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4412,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:26","nodeType":"FunctionDefinition","parameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"condition","nameLocation":"2847:9:26","nodeType":"VariableDeclaration","scope":4412,"src":"2842:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4387,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4390,"mutability":"mutable","name":"a","nameLocation":"2866:1:26","nodeType":"VariableDeclaration","scope":4412,"src":"2858:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4392,"mutability":"mutable","name":"b","nameLocation":"2877:1:26","nodeType":"VariableDeclaration","scope":4412,"src":"2869:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:26"},"returnParameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4412,"src":"2903:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:26"},"scope":5821,"src":"2825:294:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4430,"nodeType":"Block","src":"3256:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"3281:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4424,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"3285:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4426,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"3288:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"3291:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4422,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3273:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4421,"id":4429,"nodeType":"Return","src":"3266:27:26"}]},"documentation":{"id":4413,"nodeType":"StructuredDocumentation","src":"3125:59:26","text":" @dev Returns the largest of two numbers."},"id":4431,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:26","nodeType":"FunctionDefinition","parameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"a","nameLocation":"3210:1:26","nodeType":"VariableDeclaration","scope":4431,"src":"3202:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4417,"mutability":"mutable","name":"b","nameLocation":"3221:1:26","nodeType":"VariableDeclaration","scope":4431,"src":"3213:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:26"},"returnParameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4431,"src":"3247:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:26"},"scope":5821,"src":"3189:111:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4449,"nodeType":"Block","src":"3438:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"3463:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"3467:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"3470:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4446,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"3473:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4441,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3455:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4440,"id":4448,"nodeType":"Return","src":"3448:27:26"}]},"documentation":{"id":4432,"nodeType":"StructuredDocumentation","src":"3306:60:26","text":" @dev Returns the smallest of two numbers."},"id":4450,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:26","nodeType":"FunctionDefinition","parameters":{"id":4437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"a","nameLocation":"3392:1:26","nodeType":"VariableDeclaration","scope":4450,"src":"3384:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4436,"mutability":"mutable","name":"b","nameLocation":"3403:1:26","nodeType":"VariableDeclaration","scope":4450,"src":"3395:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:26"},"returnParameters":{"id":4440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4450,"src":"3429:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:26"},"scope":5821,"src":"3371:111:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4472,"nodeType":"Block","src":"3666:82:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"3721:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"3725:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4464,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"3731:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4465,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"3735:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4459,"id":4471,"nodeType":"Return","src":"3713:28:26"}]},"documentation":{"id":4451,"nodeType":"StructuredDocumentation","src":"3488:102:26","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4473,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:26","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"a","nameLocation":"3620:1:26","nodeType":"VariableDeclaration","scope":4473,"src":"3612:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4455,"mutability":"mutable","name":"b","nameLocation":"3631:1:26","nodeType":"VariableDeclaration","scope":4473,"src":"3623:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:26"},"returnParameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4473,"src":"3657:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:26"},"scope":5821,"src":"3595:153:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4513,"nodeType":"Block","src":"4040:633:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"4054:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4494,"nodeType":"IfStatement","src":"4050:150:26","trueBody":{"id":4493,"nodeType":"Block","src":"4062:138:26","statements":[{"expression":{"arguments":[{"expression":{"id":4489,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"4166:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3268_$","typeString":"type(library Panic)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"4166:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4486,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"4154:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3268_$","typeString":"type(library Panic)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3267,"src":"4154:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4492,"nodeType":"ExpressionStatement","src":"4154:35:26"}]}},{"id":4512,"nodeType":"UncheckedBlock","src":"4583:84:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"4630:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4495,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"4614:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"4614:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"4641:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"4650:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4482,"id":4511,"nodeType":"Return","src":"4607:49:26"}]}]},"documentation":{"id":4474,"nodeType":"StructuredDocumentation","src":"3754:210:26","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4514,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:26","nodeType":"FunctionDefinition","parameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"a","nameLocation":"3994:1:26","nodeType":"VariableDeclaration","scope":4514,"src":"3986:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4478,"mutability":"mutable","name":"b","nameLocation":"4005:1:26","nodeType":"VariableDeclaration","scope":4514,"src":"3997:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:26"},"returnParameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4514,"src":"4031:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:26"},"scope":5821,"src":"3969:704:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4650,"nodeType":"Block","src":"5094:4128:26","statements":[{"id":4649,"nodeType":"UncheckedBlock","src":"5104:4112:26","statements":[{"assignments":[4527],"declarations":[{"constant":false,"id":4527,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:26","nodeType":"VariableDeclaration","scope":4649,"src":"5433:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4531,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"5449:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4529,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"5453:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:26"},{"assignments":[4533],"declarations":[{"constant":false,"id":4533,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:26","nodeType":"VariableDeclaration","scope":4649,"src":"5513:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4534,"nodeType":"VariableDeclarationStatement","src":"5513:13:26"},{"AST":{"nativeSrc":"5593:122:26","nodeType":"YulBlock","src":"5593:122:26","statements":[{"nativeSrc":"5611:30:26","nodeType":"YulVariableDeclaration","src":"5611:30:26","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:26","nodeType":"YulIdentifier","src":"5628:1:26"},{"name":"y","nativeSrc":"5631:1:26","nodeType":"YulIdentifier","src":"5631:1:26"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:26","nodeType":"YulLiteral","src":"5638:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:26","nodeType":"YulIdentifier","src":"5634:3:26"},"nativeSrc":"5634:6:26","nodeType":"YulFunctionCall","src":"5634:6:26"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:26","nodeType":"YulIdentifier","src":"5621:6:26"},"nativeSrc":"5621:20:26","nodeType":"YulFunctionCall","src":"5621:20:26"},"variables":[{"name":"mm","nativeSrc":"5615:2:26","nodeType":"YulTypedName","src":"5615:2:26","type":""}]},{"nativeSrc":"5658:43:26","nodeType":"YulAssignment","src":"5658:43:26","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:26","nodeType":"YulIdentifier","src":"5675:2:26"},{"name":"prod0","nativeSrc":"5679:5:26","nodeType":"YulIdentifier","src":"5679:5:26"}],"functionName":{"name":"sub","nativeSrc":"5671:3:26","nodeType":"YulIdentifier","src":"5671:3:26"},"nativeSrc":"5671:14:26","nodeType":"YulFunctionCall","src":"5671:14:26"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:26","nodeType":"YulIdentifier","src":"5690:2:26"},{"name":"prod0","nativeSrc":"5694:5:26","nodeType":"YulIdentifier","src":"5694:5:26"}],"functionName":{"name":"lt","nativeSrc":"5687:2:26","nodeType":"YulIdentifier","src":"5687:2:26"},"nativeSrc":"5687:13:26","nodeType":"YulFunctionCall","src":"5687:13:26"}],"functionName":{"name":"sub","nativeSrc":"5667:3:26","nodeType":"YulIdentifier","src":"5667:3:26"},"nativeSrc":"5667:34:26","nodeType":"YulFunctionCall","src":"5667:34:26"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:26","nodeType":"YulIdentifier","src":"5658:5:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4527,"isOffset":false,"isSlot":false,"src":"5679:5:26","valueSize":1},{"declaration":4527,"isOffset":false,"isSlot":false,"src":"5694:5:26","valueSize":1},{"declaration":4533,"isOffset":false,"isSlot":false,"src":"5658:5:26","valueSize":1},{"declaration":4517,"isOffset":false,"isSlot":false,"src":"5628:1:26","valueSize":1},{"declaration":4519,"isOffset":false,"isSlot":false,"src":"5631:1:26","valueSize":1}],"id":4535,"nodeType":"InlineAssembly","src":"5584:131:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4536,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"5796:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4544,"nodeType":"IfStatement","src":"5792:368:26","trueBody":{"id":4543,"nodeType":"Block","src":"5808:352:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"6126:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4540,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"6134:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4525,"id":4542,"nodeType":"Return","src":"6119:26:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"6270:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4546,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"6285:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4563,"nodeType":"IfStatement","src":"6266:143:26","trueBody":{"id":4562,"nodeType":"Block","src":"6292:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"6330:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4555,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"6348:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3268_$","typeString":"type(library Panic)"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"6348:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4557,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"6372:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3268_$","typeString":"type(library Panic)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:26","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"6372:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4551,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"6322:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4548,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"6310:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3268_$","typeString":"type(library Panic)"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3267,"src":"6310:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4561,"nodeType":"ExpressionStatement","src":"6310:84:26"}]}},{"assignments":[4565],"declarations":[{"constant":false,"id":4565,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:26","nodeType":"VariableDeclaration","scope":4649,"src":"6664:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4566,"nodeType":"VariableDeclarationStatement","src":"6664:17:26"},{"AST":{"nativeSrc":"6704:291:26","nodeType":"YulBlock","src":"6704:291:26","statements":[{"nativeSrc":"6773:38:26","nodeType":"YulAssignment","src":"6773:38:26","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:26","nodeType":"YulIdentifier","src":"6793:1:26"},{"name":"y","nativeSrc":"6796:1:26","nodeType":"YulIdentifier","src":"6796:1:26"},{"name":"denominator","nativeSrc":"6799:11:26","nodeType":"YulIdentifier","src":"6799:11:26"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:26","nodeType":"YulIdentifier","src":"6786:6:26"},"nativeSrc":"6786:25:26","nodeType":"YulFunctionCall","src":"6786:25:26"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:26","nodeType":"YulIdentifier","src":"6773:9:26"}]},{"nativeSrc":"6893:41:26","nodeType":"YulAssignment","src":"6893:41:26","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:26","nodeType":"YulIdentifier","src":"6906:5:26"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:26","nodeType":"YulIdentifier","src":"6916:9:26"},{"name":"prod0","nativeSrc":"6927:5:26","nodeType":"YulIdentifier","src":"6927:5:26"}],"functionName":{"name":"gt","nativeSrc":"6913:2:26","nodeType":"YulIdentifier","src":"6913:2:26"},"nativeSrc":"6913:20:26","nodeType":"YulFunctionCall","src":"6913:20:26"}],"functionName":{"name":"sub","nativeSrc":"6902:3:26","nodeType":"YulIdentifier","src":"6902:3:26"},"nativeSrc":"6902:32:26","nodeType":"YulFunctionCall","src":"6902:32:26"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:26","nodeType":"YulIdentifier","src":"6893:5:26"}]},{"nativeSrc":"6951:30:26","nodeType":"YulAssignment","src":"6951:30:26","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:26","nodeType":"YulIdentifier","src":"6964:5:26"},{"name":"remainder","nativeSrc":"6971:9:26","nodeType":"YulIdentifier","src":"6971:9:26"}],"functionName":{"name":"sub","nativeSrc":"6960:3:26","nodeType":"YulIdentifier","src":"6960:3:26"},"nativeSrc":"6960:21:26","nodeType":"YulFunctionCall","src":"6960:21:26"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:26","nodeType":"YulIdentifier","src":"6951:5:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4521,"isOffset":false,"isSlot":false,"src":"6799:11:26","valueSize":1},{"declaration":4527,"isOffset":false,"isSlot":false,"src":"6927:5:26","valueSize":1},{"declaration":4527,"isOffset":false,"isSlot":false,"src":"6951:5:26","valueSize":1},{"declaration":4527,"isOffset":false,"isSlot":false,"src":"6964:5:26","valueSize":1},{"declaration":4533,"isOffset":false,"isSlot":false,"src":"6893:5:26","valueSize":1},{"declaration":4533,"isOffset":false,"isSlot":false,"src":"6906:5:26","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"6773:9:26","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"6916:9:26","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"6971:9:26","valueSize":1},{"declaration":4517,"isOffset":false,"isSlot":false,"src":"6793:1:26","valueSize":1},{"declaration":4519,"isOffset":false,"isSlot":false,"src":"6796:1:26","valueSize":1}],"id":4567,"nodeType":"InlineAssembly","src":"6695:300:26"},{"assignments":[4569],"declarations":[{"constant":false,"id":4569,"mutability":"mutable","name":"twos","nameLocation":"7207:4:26","nodeType":"VariableDeclaration","scope":4649,"src":"7199:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4568,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4576,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"7214:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4572,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"7233:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:26"},{"AST":{"nativeSrc":"7268:366:26","nodeType":"YulBlock","src":"7268:366:26","statements":[{"nativeSrc":"7333:37:26","nodeType":"YulAssignment","src":"7333:37:26","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:26","nodeType":"YulIdentifier","src":"7352:11:26"},{"name":"twos","nativeSrc":"7365:4:26","nodeType":"YulIdentifier","src":"7365:4:26"}],"functionName":{"name":"div","nativeSrc":"7348:3:26","nodeType":"YulIdentifier","src":"7348:3:26"},"nativeSrc":"7348:22:26","nodeType":"YulFunctionCall","src":"7348:22:26"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:26","nodeType":"YulIdentifier","src":"7333:11:26"}]},{"nativeSrc":"7437:25:26","nodeType":"YulAssignment","src":"7437:25:26","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:26","nodeType":"YulIdentifier","src":"7450:5:26"},{"name":"twos","nativeSrc":"7457:4:26","nodeType":"YulIdentifier","src":"7457:4:26"}],"functionName":{"name":"div","nativeSrc":"7446:3:26","nodeType":"YulIdentifier","src":"7446:3:26"},"nativeSrc":"7446:16:26","nodeType":"YulFunctionCall","src":"7446:16:26"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:26","nodeType":"YulIdentifier","src":"7437:5:26"}]},{"nativeSrc":"7581:39:26","nodeType":"YulAssignment","src":"7581:39:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:26","nodeType":"YulLiteral","src":"7601:1:26","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:26","nodeType":"YulIdentifier","src":"7604:4:26"}],"functionName":{"name":"sub","nativeSrc":"7597:3:26","nodeType":"YulIdentifier","src":"7597:3:26"},"nativeSrc":"7597:12:26","nodeType":"YulFunctionCall","src":"7597:12:26"},{"name":"twos","nativeSrc":"7611:4:26","nodeType":"YulIdentifier","src":"7611:4:26"}],"functionName":{"name":"div","nativeSrc":"7593:3:26","nodeType":"YulIdentifier","src":"7593:3:26"},"nativeSrc":"7593:23:26","nodeType":"YulFunctionCall","src":"7593:23:26"},{"kind":"number","nativeSrc":"7618:1:26","nodeType":"YulLiteral","src":"7618:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:26","nodeType":"YulIdentifier","src":"7589:3:26"},"nativeSrc":"7589:31:26","nodeType":"YulFunctionCall","src":"7589:31:26"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:26","nodeType":"YulIdentifier","src":"7581:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4521,"isOffset":false,"isSlot":false,"src":"7333:11:26","valueSize":1},{"declaration":4521,"isOffset":false,"isSlot":false,"src":"7352:11:26","valueSize":1},{"declaration":4527,"isOffset":false,"isSlot":false,"src":"7437:5:26","valueSize":1},{"declaration":4527,"isOffset":false,"isSlot":false,"src":"7450:5:26","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"7365:4:26","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"7457:4:26","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"7581:4:26","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"7604:4:26","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"7611:4:26","valueSize":1}],"id":4577,"nodeType":"InlineAssembly","src":"7259:375:26"},{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4578,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"7700:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"7709:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4580,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"7717:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"7700:21:26"},{"assignments":[4585],"declarations":[{"constant":false,"id":4585,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:26","nodeType":"VariableDeclaration","scope":4649,"src":"8056:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4592,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4587,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8079:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:26"},{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4593,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8312:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8327:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4596,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8341:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4600,"nodeType":"ExpressionStatement","src":"8312:36:26"},{"expression":{"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4601,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8382:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8397:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4604,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8411:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4608,"nodeType":"ExpressionStatement","src":"8382:36:26"},{"expression":{"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4609,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8454:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8469:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4612,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8483:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4616,"nodeType":"ExpressionStatement","src":"8454:36:26"},{"expression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4617,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8525:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8540:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4620,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8554:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4624,"nodeType":"ExpressionStatement","src":"8525:36:26"},{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4625,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8598:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8613:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4628,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8627:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4632,"nodeType":"ExpressionStatement","src":"8598:36:26"},{"expression":{"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8672:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8687:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4636,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8701:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4640,"nodeType":"ExpressionStatement","src":"8672:36:26"},{"expression":{"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"9154:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"9163:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4643,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"9171:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4646,"nodeType":"ExpressionStatement","src":"9154:24:26"},{"expression":{"id":4647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"9199:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4525,"id":4648,"nodeType":"Return","src":"9192:13:26"}]}]},"documentation":{"id":4515,"nodeType":"StructuredDocumentation","src":"4679:312:26","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4651,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:26","nodeType":"FunctionDefinition","parameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"x","nameLocation":"5020:1:26","nodeType":"VariableDeclaration","scope":4651,"src":"5012:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4519,"mutability":"mutable","name":"y","nameLocation":"5031:1:26","nodeType":"VariableDeclaration","scope":4651,"src":"5023:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4521,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:26","nodeType":"VariableDeclaration","scope":4651,"src":"5034:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:26"},"returnParameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4524,"mutability":"mutable","name":"result","nameLocation":"5086:6:26","nodeType":"VariableDeclaration","scope":4651,"src":"5078:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:26"},"scope":5821,"src":"4996:4226:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4687,"nodeType":"Block","src":"9461:128:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4667,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9485:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4668,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"9488:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4669,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"9491:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4666,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4651,4688],"referencedDeclaration":4651,"src":"9478:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4674,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"9539:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}],"id":4673,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"9522:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4227_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4677,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9559:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4678,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"9562:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4679,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"9565:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4676,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4671,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"9506:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"9506:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4665,"id":4686,"nodeType":"Return","src":"9471:111:26"}]},"documentation":{"id":4652,"nodeType":"StructuredDocumentation","src":"9228:118:26","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4688,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:26","nodeType":"FunctionDefinition","parameters":{"id":4662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"x","nameLocation":"9375:1:26","nodeType":"VariableDeclaration","scope":4688,"src":"9367:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4656,"mutability":"mutable","name":"y","nameLocation":"9386:1:26","nodeType":"VariableDeclaration","scope":4688,"src":"9378:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4658,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:26","nodeType":"VariableDeclaration","scope":4688,"src":"9389:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4661,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:26","nodeType":"VariableDeclaration","scope":4688,"src":"9410:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"},"typeName":{"id":4660,"nodeType":"UserDefinedTypeName","pathNode":{"id":4659,"name":"Rounding","nameLocations":["9410:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4227,"src":"9410:8:26"},"referencedDeclaration":4227,"src":"9410:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:26"},"returnParameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4688,"src":"9452:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:26"},"scope":5821,"src":"9351:238:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4784,"nodeType":"Block","src":"10223:1849:26","statements":[{"id":4783,"nodeType":"UncheckedBlock","src":"10233:1833:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"10261:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4703,"nodeType":"IfStatement","src":"10257:20:26","trueBody":{"expression":{"hexValue":"30","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4697,"id":4702,"nodeType":"Return","src":"10269:8:26"}},{"assignments":[4705],"declarations":[{"constant":false,"id":4705,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:26","nodeType":"VariableDeclaration","scope":4783,"src":"10748:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4709,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"10768:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4707,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"10772:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:26"},{"assignments":[4711],"declarations":[{"constant":false,"id":4711,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:26","nodeType":"VariableDeclaration","scope":4783,"src":"10787:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4713,"initialValue":{"id":4712,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"10801:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:26"},{"assignments":[4715],"declarations":[{"constant":false,"id":4715,"mutability":"mutable","name":"x","nameLocation":"10945:1:26","nodeType":"VariableDeclaration","scope":4783,"src":"10938:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4714,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4717,"initialValue":{"hexValue":"30","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:26"},{"assignments":[4719],"declarations":[{"constant":false,"id":4719,"mutability":"mutable","name":"y","nameLocation":"10971:1:26","nodeType":"VariableDeclaration","scope":4783,"src":"10964:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4718,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4721,"initialValue":{"hexValue":"31","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:26"},{"body":{"id":4758,"nodeType":"Block","src":"11014:882:26","statements":[{"assignments":[4726],"declarations":[{"constant":false,"id":4726,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:26","nodeType":"VariableDeclaration","scope":4758,"src":"11032:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4730,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"11051:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4728,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"11057:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:26"},{"expression":{"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4731,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"11086:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4732,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"11091:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4734,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"11191:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4735,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"11436:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"11442:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4737,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"11454:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:26","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4742,"nodeType":"ExpressionStatement","src":"11085:395:26"},{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4743,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"11500:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4744,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"11503:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4745,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4746,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"11585:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4747,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"11839:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"11843:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4751,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"11854:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4749,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:26","typeDescriptions":{}}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:26","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4757,"nodeType":"ExpressionStatement","src":"11499:382:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4722,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"10998:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4759,"nodeType":"WhileStatement","src":"10991:905:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"11914:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4765,"nodeType":"IfStatement","src":"11910:22:26","trueBody":{"expression":{"hexValue":"30","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4697,"id":4764,"nodeType":"Return","src":"11924:8:26"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"11983:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"11990:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:26","subExpression":{"id":4773,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"12003:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4771,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:26","typeDescriptions":{}}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4779,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"12015:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:26","typeDescriptions":{}}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4766,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"11975:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4697,"id":4782,"nodeType":"Return","src":"11968:50:26"}]}]},"documentation":{"id":4689,"nodeType":"StructuredDocumentation","src":"9595:553:26","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4785,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:26","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4691,"mutability":"mutable","name":"a","nameLocation":"10177:1:26","nodeType":"VariableDeclaration","scope":4785,"src":"10169:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4690,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4693,"mutability":"mutable","name":"n","nameLocation":"10188:1:26","nodeType":"VariableDeclaration","scope":4785,"src":"10180:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:26"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4785,"src":"10214:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:26"},"scope":5821,"src":"10153:1919:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4805,"nodeType":"Block","src":"12672:82:26","statements":[{"id":4804,"nodeType":"UncheckedBlock","src":"12682:66:26","statements":[{"expression":{"arguments":[{"id":4797,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"12725:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"12728:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4801,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"12735:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4795,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"12713:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5821_$","typeString":"type(library Math)"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:26","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4842,"src":"12713:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4794,"id":4803,"nodeType":"Return","src":"12706:31:26"}]}]},"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"12078:514:26","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4806,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:26","nodeType":"FunctionDefinition","parameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"a","nameLocation":"12626:1:26","nodeType":"VariableDeclaration","scope":4806,"src":"12618:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4787,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4790,"mutability":"mutable","name":"p","nameLocation":"12637:1:26","nodeType":"VariableDeclaration","scope":4806,"src":"12629:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:26"},"returnParameters":{"id":4794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4806,"src":"12663:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:26"},"scope":5821,"src":"12597:157:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4841,"nodeType":"Block","src":"13524:174:26","statements":[{"assignments":[4819,4821],"declarations":[{"constant":false,"id":4819,"mutability":"mutable","name":"success","nameLocation":"13540:7:26","nodeType":"VariableDeclaration","scope":4841,"src":"13535:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4818,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4821,"mutability":"mutable","name":"result","nameLocation":"13557:6:26","nodeType":"VariableDeclaration","scope":4841,"src":"13549:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4820,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4827,"initialValue":{"arguments":[{"id":4823,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"13577:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4824,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"13580:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4825,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"13583:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4822,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4866,4948],"referencedDeclaration":4866,"src":"13567:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:26"},{"condition":{"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:26","subExpression":{"id":4828,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"13600:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4838,"nodeType":"IfStatement","src":"13595:74:26","trueBody":{"id":4837,"nodeType":"Block","src":"13609:60:26","statements":[{"expression":{"arguments":[{"expression":{"id":4833,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"13635:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3268_$","typeString":"type(library Panic)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"13635:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4830,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"13623:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3268_$","typeString":"type(library Panic)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3267,"src":"13623:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4836,"nodeType":"ExpressionStatement","src":"13623:35:26"}]}},{"expression":{"id":4839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"13685:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4817,"id":4840,"nodeType":"Return","src":"13678:13:26"}]},"documentation":{"id":4807,"nodeType":"StructuredDocumentation","src":"12760:678:26","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4842,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:26","nodeType":"FunctionDefinition","parameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"b","nameLocation":"13467:1:26","nodeType":"VariableDeclaration","scope":4842,"src":"13459:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4811,"mutability":"mutable","name":"e","nameLocation":"13478:1:26","nodeType":"VariableDeclaration","scope":4842,"src":"13470:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4810,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4813,"mutability":"mutable","name":"m","nameLocation":"13489:1:26","nodeType":"VariableDeclaration","scope":4842,"src":"13481:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:26"},"returnParameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4842,"src":"13515:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4815,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:26"},"scope":5821,"src":"13443:255:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4865,"nodeType":"Block","src":"14552:1493:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4856,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"14566:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4863,"nodeType":"IfStatement","src":"14562:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4855,"id":4862,"nodeType":"Return","src":"14574:17:26"}},{"AST":{"nativeSrc":"14626:1413:26","nodeType":"YulBlock","src":"14626:1413:26","statements":[{"nativeSrc":"14640:22:26","nodeType":"YulVariableDeclaration","src":"14640:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:26","nodeType":"YulLiteral","src":"14657:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:26","nodeType":"YulIdentifier","src":"14651:5:26"},"nativeSrc":"14651:11:26","nodeType":"YulFunctionCall","src":"14651:11:26"},"variables":[{"name":"ptr","nativeSrc":"14644:3:26","nodeType":"YulTypedName","src":"14644:3:26","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:26","nodeType":"YulIdentifier","src":"15570:3:26"},{"kind":"number","nativeSrc":"15575:4:26","nodeType":"YulLiteral","src":"15575:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:26","nodeType":"YulIdentifier","src":"15563:6:26"},"nativeSrc":"15563:17:26","nodeType":"YulFunctionCall","src":"15563:17:26"},"nativeSrc":"15563:17:26","nodeType":"YulExpressionStatement","src":"15563:17:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:26","nodeType":"YulIdentifier","src":"15604:3:26"},{"kind":"number","nativeSrc":"15609:4:26","nodeType":"YulLiteral","src":"15609:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:26","nodeType":"YulIdentifier","src":"15600:3:26"},"nativeSrc":"15600:14:26","nodeType":"YulFunctionCall","src":"15600:14:26"},{"kind":"number","nativeSrc":"15616:4:26","nodeType":"YulLiteral","src":"15616:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:26","nodeType":"YulIdentifier","src":"15593:6:26"},"nativeSrc":"15593:28:26","nodeType":"YulFunctionCall","src":"15593:28:26"},"nativeSrc":"15593:28:26","nodeType":"YulExpressionStatement","src":"15593:28:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:26","nodeType":"YulIdentifier","src":"15645:3:26"},{"kind":"number","nativeSrc":"15650:4:26","nodeType":"YulLiteral","src":"15650:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:26","nodeType":"YulIdentifier","src":"15641:3:26"},"nativeSrc":"15641:14:26","nodeType":"YulFunctionCall","src":"15641:14:26"},{"kind":"number","nativeSrc":"15657:4:26","nodeType":"YulLiteral","src":"15657:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:26","nodeType":"YulIdentifier","src":"15634:6:26"},"nativeSrc":"15634:28:26","nodeType":"YulFunctionCall","src":"15634:28:26"},"nativeSrc":"15634:28:26","nodeType":"YulExpressionStatement","src":"15634:28:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:26","nodeType":"YulIdentifier","src":"15686:3:26"},{"kind":"number","nativeSrc":"15691:4:26","nodeType":"YulLiteral","src":"15691:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:26","nodeType":"YulIdentifier","src":"15682:3:26"},"nativeSrc":"15682:14:26","nodeType":"YulFunctionCall","src":"15682:14:26"},{"name":"b","nativeSrc":"15698:1:26","nodeType":"YulIdentifier","src":"15698:1:26"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:26","nodeType":"YulIdentifier","src":"15675:6:26"},"nativeSrc":"15675:25:26","nodeType":"YulFunctionCall","src":"15675:25:26"},"nativeSrc":"15675:25:26","nodeType":"YulExpressionStatement","src":"15675:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:26","nodeType":"YulIdentifier","src":"15724:3:26"},{"kind":"number","nativeSrc":"15729:4:26","nodeType":"YulLiteral","src":"15729:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:26","nodeType":"YulIdentifier","src":"15720:3:26"},"nativeSrc":"15720:14:26","nodeType":"YulFunctionCall","src":"15720:14:26"},{"name":"e","nativeSrc":"15736:1:26","nodeType":"YulIdentifier","src":"15736:1:26"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:26","nodeType":"YulIdentifier","src":"15713:6:26"},"nativeSrc":"15713:25:26","nodeType":"YulFunctionCall","src":"15713:25:26"},"nativeSrc":"15713:25:26","nodeType":"YulExpressionStatement","src":"15713:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:26","nodeType":"YulIdentifier","src":"15762:3:26"},{"kind":"number","nativeSrc":"15767:4:26","nodeType":"YulLiteral","src":"15767:4:26","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:26","nodeType":"YulIdentifier","src":"15758:3:26"},"nativeSrc":"15758:14:26","nodeType":"YulFunctionCall","src":"15758:14:26"},{"name":"m","nativeSrc":"15774:1:26","nodeType":"YulIdentifier","src":"15774:1:26"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:26","nodeType":"YulIdentifier","src":"15751:6:26"},"nativeSrc":"15751:25:26","nodeType":"YulFunctionCall","src":"15751:25:26"},"nativeSrc":"15751:25:26","nodeType":"YulExpressionStatement","src":"15751:25:26"},{"nativeSrc":"15938:57:26","nodeType":"YulAssignment","src":"15938:57:26","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:26","nodeType":"YulIdentifier","src":"15960:3:26"},"nativeSrc":"15960:5:26","nodeType":"YulFunctionCall","src":"15960:5:26"},{"kind":"number","nativeSrc":"15967:4:26","nodeType":"YulLiteral","src":"15967:4:26","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:26","nodeType":"YulIdentifier","src":"15973:3:26"},{"kind":"number","nativeSrc":"15978:4:26","nodeType":"YulLiteral","src":"15978:4:26","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:26","nodeType":"YulLiteral","src":"15984:4:26","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:26","nodeType":"YulLiteral","src":"15990:4:26","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:26","nodeType":"YulIdentifier","src":"15949:10:26"},"nativeSrc":"15949:46:26","nodeType":"YulFunctionCall","src":"15949:46:26"},"variableNames":[{"name":"success","nativeSrc":"15938:7:26","nodeType":"YulIdentifier","src":"15938:7:26"}]},{"nativeSrc":"16008:21:26","nodeType":"YulAssignment","src":"16008:21:26","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:26","nodeType":"YulLiteral","src":"16024:4:26","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:26","nodeType":"YulIdentifier","src":"16018:5:26"},"nativeSrc":"16018:11:26","nodeType":"YulFunctionCall","src":"16018:11:26"},"variableNames":[{"name":"result","nativeSrc":"16008:6:26","nodeType":"YulIdentifier","src":"16008:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4845,"isOffset":false,"isSlot":false,"src":"15698:1:26","valueSize":1},{"declaration":4847,"isOffset":false,"isSlot":false,"src":"15736:1:26","valueSize":1},{"declaration":4849,"isOffset":false,"isSlot":false,"src":"15774:1:26","valueSize":1},{"declaration":4854,"isOffset":false,"isSlot":false,"src":"16008:6:26","valueSize":1},{"declaration":4852,"isOffset":false,"isSlot":false,"src":"15938:7:26","valueSize":1}],"flags":["memory-safe"],"id":4864,"nodeType":"InlineAssembly","src":"14601:1438:26"}]},"documentation":{"id":4843,"nodeType":"StructuredDocumentation","src":"13704:738:26","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4866,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:26","nodeType":"FunctionDefinition","parameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"b","nameLocation":"14474:1:26","nodeType":"VariableDeclaration","scope":4866,"src":"14466:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4847,"mutability":"mutable","name":"e","nameLocation":"14485:1:26","nodeType":"VariableDeclaration","scope":4866,"src":"14477:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4849,"mutability":"mutable","name":"m","nameLocation":"14496:1:26","nodeType":"VariableDeclaration","scope":4866,"src":"14488:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4848,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:26"},"returnParameters":{"id":4855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"success","nameLocation":"14527:7:26","nodeType":"VariableDeclaration","scope":4866,"src":"14522:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4851,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4854,"mutability":"mutable","name":"result","nameLocation":"14544:6:26","nodeType":"VariableDeclaration","scope":4866,"src":"14536:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4853,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:26"},"scope":5821,"src":"14447:1598:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4901,"nodeType":"Block","src":"16242:179:26","statements":[{"assignments":[4879,4881],"declarations":[{"constant":false,"id":4879,"mutability":"mutable","name":"success","nameLocation":"16258:7:26","nodeType":"VariableDeclaration","scope":4901,"src":"16253:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4878,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4881,"mutability":"mutable","name":"result","nameLocation":"16280:6:26","nodeType":"VariableDeclaration","scope":4901,"src":"16267:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4880,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4887,"initialValue":{"arguments":[{"id":4883,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"16300:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4884,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"16303:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4885,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"16306:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4882,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4866,4948],"referencedDeclaration":4948,"src":"16290:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:26"},{"condition":{"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:26","subExpression":{"id":4888,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"16323:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4898,"nodeType":"IfStatement","src":"16318:74:26","trueBody":{"id":4897,"nodeType":"Block","src":"16332:60:26","statements":[{"expression":{"arguments":[{"expression":{"id":4893,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"16358:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3268_$","typeString":"type(library Panic)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"16358:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4890,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"16346:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3268_$","typeString":"type(library Panic)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3267,"src":"16346:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4896,"nodeType":"ExpressionStatement","src":"16346:35:26"}]}},{"expression":{"id":4899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"16408:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4877,"id":4900,"nodeType":"Return","src":"16401:13:26"}]},"documentation":{"id":4867,"nodeType":"StructuredDocumentation","src":"16051:85:26","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4902,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:26","nodeType":"FunctionDefinition","parameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"b","nameLocation":"16170:1:26","nodeType":"VariableDeclaration","scope":4902,"src":"16157:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4868,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4871,"mutability":"mutable","name":"e","nameLocation":"16186:1:26","nodeType":"VariableDeclaration","scope":4902,"src":"16173:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4870,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4873,"mutability":"mutable","name":"m","nameLocation":"16202:1:26","nodeType":"VariableDeclaration","scope":4902,"src":"16189:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4872,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:26"},"returnParameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4902,"src":"16228:12:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4875,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:26"},"scope":5821,"src":"16141:280:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4947,"nodeType":"Block","src":"16675:771:26","statements":[{"condition":{"arguments":[{"id":4917,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"16700:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4916,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"16689:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4926,"nodeType":"IfStatement","src":"16685:47:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4920,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4915,"id":4925,"nodeType":"Return","src":"16704:28:26"}},{"assignments":[4928],"declarations":[{"constant":false,"id":4928,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:26","nodeType":"VariableDeclaration","scope":4947,"src":"16743:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4931,"initialValue":{"expression":{"id":4929,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"16758:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:26","memberName":"length","nodeType":"MemberAccess","src":"16758:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:26"},{"expression":{"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"16848:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4935,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"16874:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:26","memberName":"length","nodeType":"MemberAccess","src":"16874:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4937,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16884:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:26","memberName":"length","nodeType":"MemberAccess","src":"16884:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4939,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"16894:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"16900:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4941,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16903:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4942,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"16906:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4933,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4945,"nodeType":"ExpressionStatement","src":"16848:60:26"},{"AST":{"nativeSrc":"16944:496:26","nodeType":"YulBlock","src":"16944:496:26","statements":[{"nativeSrc":"16958:32:26","nodeType":"YulVariableDeclaration","src":"16958:32:26","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:26","nodeType":"YulIdentifier","src":"16977:6:26"},{"kind":"number","nativeSrc":"16985:4:26","nodeType":"YulLiteral","src":"16985:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:26","nodeType":"YulIdentifier","src":"16973:3:26"},"nativeSrc":"16973:17:26","nodeType":"YulFunctionCall","src":"16973:17:26"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:26","nodeType":"YulTypedName","src":"16962:7:26","type":""}]},{"nativeSrc":"17080:73:26","nodeType":"YulAssignment","src":"17080:73:26","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:26","nodeType":"YulIdentifier","src":"17102:3:26"},"nativeSrc":"17102:5:26","nodeType":"YulFunctionCall","src":"17102:5:26"},{"kind":"number","nativeSrc":"17109:4:26","nodeType":"YulLiteral","src":"17109:4:26","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:26","nodeType":"YulIdentifier","src":"17115:7:26"},{"arguments":[{"name":"result","nativeSrc":"17130:6:26","nodeType":"YulIdentifier","src":"17130:6:26"}],"functionName":{"name":"mload","nativeSrc":"17124:5:26","nodeType":"YulIdentifier","src":"17124:5:26"},"nativeSrc":"17124:13:26","nodeType":"YulFunctionCall","src":"17124:13:26"},{"name":"dataPtr","nativeSrc":"17139:7:26","nodeType":"YulIdentifier","src":"17139:7:26"},{"name":"mLen","nativeSrc":"17148:4:26","nodeType":"YulIdentifier","src":"17148:4:26"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:26","nodeType":"YulIdentifier","src":"17091:10:26"},"nativeSrc":"17091:62:26","nodeType":"YulFunctionCall","src":"17091:62:26"},"variableNames":[{"name":"success","nativeSrc":"17080:7:26","nodeType":"YulIdentifier","src":"17080:7:26"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:26","nodeType":"YulIdentifier","src":"17309:6:26"},{"name":"mLen","nativeSrc":"17317:4:26","nodeType":"YulIdentifier","src":"17317:4:26"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:26","nodeType":"YulIdentifier","src":"17302:6:26"},"nativeSrc":"17302:20:26","nodeType":"YulFunctionCall","src":"17302:20:26"},"nativeSrc":"17302:20:26","nodeType":"YulExpressionStatement","src":"17302:20:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:26","nodeType":"YulLiteral","src":"17405:4:26","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:26","nodeType":"YulIdentifier","src":"17415:7:26"},{"name":"mLen","nativeSrc":"17424:4:26","nodeType":"YulIdentifier","src":"17424:4:26"}],"functionName":{"name":"add","nativeSrc":"17411:3:26","nodeType":"YulIdentifier","src":"17411:3:26"},"nativeSrc":"17411:18:26","nodeType":"YulFunctionCall","src":"17411:18:26"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:26","nodeType":"YulIdentifier","src":"17398:6:26"},"nativeSrc":"17398:32:26","nodeType":"YulFunctionCall","src":"17398:32:26"},"nativeSrc":"17398:32:26","nodeType":"YulExpressionStatement","src":"17398:32:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":4928,"isOffset":false,"isSlot":false,"src":"17148:4:26","valueSize":1},{"declaration":4928,"isOffset":false,"isSlot":false,"src":"17317:4:26","valueSize":1},{"declaration":4928,"isOffset":false,"isSlot":false,"src":"17424:4:26","valueSize":1},{"declaration":4914,"isOffset":false,"isSlot":false,"src":"16977:6:26","valueSize":1},{"declaration":4914,"isOffset":false,"isSlot":false,"src":"17130:6:26","valueSize":1},{"declaration":4914,"isOffset":false,"isSlot":false,"src":"17309:6:26","valueSize":1},{"declaration":4912,"isOffset":false,"isSlot":false,"src":"17080:7:26","valueSize":1}],"flags":["memory-safe"],"id":4946,"nodeType":"InlineAssembly","src":"16919:521:26"}]},"documentation":{"id":4903,"nodeType":"StructuredDocumentation","src":"16427:88:26","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4948,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:26","nodeType":"FunctionDefinition","parameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"mutability":"mutable","name":"b","nameLocation":"16561:1:26","nodeType":"VariableDeclaration","scope":4948,"src":"16548:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4904,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4907,"mutability":"mutable","name":"e","nameLocation":"16585:1:26","nodeType":"VariableDeclaration","scope":4948,"src":"16572:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4906,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4909,"mutability":"mutable","name":"m","nameLocation":"16609:1:26","nodeType":"VariableDeclaration","scope":4948,"src":"16596:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4908,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:26"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"success","nameLocation":"16645:7:26","nodeType":"VariableDeclaration","scope":4948,"src":"16640:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4911,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4914,"mutability":"mutable","name":"result","nameLocation":"16667:6:26","nodeType":"VariableDeclaration","scope":4948,"src":"16654:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4913,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:26"},"scope":5821,"src":"16520:926:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4980,"nodeType":"Block","src":"17601:176:26","statements":[{"body":{"id":4976,"nodeType":"Block","src":"17658:92:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4967,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"17676:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4969,"indexExpression":{"id":4968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"17686:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4975,"nodeType":"IfStatement","src":"17672:68:26","trueBody":{"id":4974,"nodeType":"Block","src":"17695:45:26","statements":[{"expression":{"hexValue":"66616c7365","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4955,"id":4973,"nodeType":"Return","src":"17713:12:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"17631:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4961,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"17635:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:26","memberName":"length","nodeType":"MemberAccess","src":"17635:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4977,"initializationExpression":{"assignments":[4957],"declarations":[{"constant":false,"id":4957,"mutability":"mutable","name":"i","nameLocation":"17624:1:26","nodeType":"VariableDeclaration","scope":4977,"src":"17616:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4959,"initialValue":{"hexValue":"30","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:26","subExpression":{"id":4964,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"17655:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4966,"nodeType":"ExpressionStatement","src":"17653:3:26"},"nodeType":"ForStatement","src":"17611:139:26"},{"expression":{"hexValue":"74727565","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4955,"id":4979,"nodeType":"Return","src":"17759:11:26"}]},"documentation":{"id":4949,"nodeType":"StructuredDocumentation","src":"17452:72:26","text":" @dev Returns whether the provided byte array is zero."},"id":4981,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:26","nodeType":"FunctionDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4951,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:26","nodeType":"VariableDeclaration","scope":4981,"src":"17549:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4950,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:26"},"returnParameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4981,"src":"17595:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4953,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:26"},"scope":5821,"src":"17529:248:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5199,"nodeType":"Block","src":"18137:5124:26","statements":[{"id":5198,"nodeType":"UncheckedBlock","src":"18147:5108:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"18241:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4995,"nodeType":"IfStatement","src":"18237:53:26","trueBody":{"id":4994,"nodeType":"Block","src":"18249:41:26","statements":[{"expression":{"id":4992,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"18274:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4988,"id":4993,"nodeType":"Return","src":"18267:8:26"}]}},{"assignments":[4997],"declarations":[{"constant":false,"id":4997,"mutability":"mutable","name":"aa","nameLocation":"19225:2:26","nodeType":"VariableDeclaration","scope":5198,"src":"19217:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4996,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4999,"initialValue":{"id":4998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"19230:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:26"},{"assignments":[5001],"declarations":[{"constant":false,"id":5001,"mutability":"mutable","name":"xn","nameLocation":"19253:2:26","nodeType":"VariableDeclaration","scope":5198,"src":"19245:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5003,"initialValue":{"hexValue":"31","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19278:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5019,"nodeType":"IfStatement","src":"19274:92:26","trueBody":{"id":5018,"nodeType":"Block","src":"19296:70:26","statements":[{"expression":{"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5010,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19314:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5013,"nodeType":"ExpressionStatement","src":"19314:10:26"},{"expression":{"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5014,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"19342:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5017,"nodeType":"ExpressionStatement","src":"19342:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5020,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19383:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5035,"nodeType":"IfStatement","src":"19379:90:26","trueBody":{"id":5034,"nodeType":"Block","src":"19400:69:26","statements":[{"expression":{"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5026,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19418:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5029,"nodeType":"ExpressionStatement","src":"19418:9:26"},{"expression":{"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5030,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"19445:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5033,"nodeType":"ExpressionStatement","src":"19445:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19486:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5051,"nodeType":"IfStatement","src":"19482:90:26","trueBody":{"id":5050,"nodeType":"Block","src":"19503:69:26","statements":[{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5042,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19521:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5045,"nodeType":"ExpressionStatement","src":"19521:9:26"},{"expression":{"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5046,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"19548:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5049,"nodeType":"ExpressionStatement","src":"19548:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5052,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19589:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5067,"nodeType":"IfStatement","src":"19585:89:26","trueBody":{"id":5066,"nodeType":"Block","src":"19606:68:26","statements":[{"expression":{"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5058,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19624:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5061,"nodeType":"ExpressionStatement","src":"19624:9:26"},{"expression":{"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5062,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"19651:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5065,"nodeType":"ExpressionStatement","src":"19651:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19691:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5083,"nodeType":"IfStatement","src":"19687:87:26","trueBody":{"id":5082,"nodeType":"Block","src":"19707:67:26","statements":[{"expression":{"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5074,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19725:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5077,"nodeType":"ExpressionStatement","src":"19725:8:26"},{"expression":{"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5078,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"19751:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5081,"nodeType":"ExpressionStatement","src":"19751:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19791:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"nodeType":"IfStatement","src":"19787:87:26","trueBody":{"id":5098,"nodeType":"Block","src":"19807:67:26","statements":[{"expression":{"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19825:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5093,"nodeType":"ExpressionStatement","src":"19825:8:26"},{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5094,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"19851:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"19851:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"19891:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5111,"nodeType":"IfStatement","src":"19887:61:26","trueBody":{"id":5110,"nodeType":"Block","src":"19907:41:26","statements":[{"expression":{"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5106,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"19925:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5109,"nodeType":"ExpressionStatement","src":"19925:8:26"}]}},{"expression":{"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5112,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"20368:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5114,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"20378:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5120,"nodeType":"ExpressionStatement","src":"20368:18:26"},{"expression":{"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5121,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22273:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5122,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22279:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5123,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"22284:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5124,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22288:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5131,"nodeType":"ExpressionStatement","src":"22273:23:26"},{"expression":{"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5132,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22382:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22388:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"22393:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5135,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22397:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5142,"nodeType":"ExpressionStatement","src":"22382:23:26"},{"expression":{"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5143,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22493:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5144,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22499:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"22504:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5146,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22508:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5153,"nodeType":"ExpressionStatement","src":"22493:23:26"},{"expression":{"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5154,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22602:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22608:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"22613:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5157,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22617:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5164,"nodeType":"ExpressionStatement","src":"22602:23:26"},{"expression":{"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5165,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22712:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5166,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22718:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"22723:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5168,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22727:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5175,"nodeType":"ExpressionStatement","src":"22712:23:26"},{"expression":{"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5176,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22822:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5177,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22828:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"22833:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5179,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"22837:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5186,"nodeType":"ExpressionStatement","src":"22822:23:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5187,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"23211:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"23232:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"23237:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5192,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"23241:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5188,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"23216:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"23216:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4988,"id":5197,"nodeType":"Return","src":"23204:40:26"}]}]},"documentation":{"id":4982,"nodeType":"StructuredDocumentation","src":"17783:292:26","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5200,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:26","nodeType":"FunctionDefinition","parameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"a","nameLocation":"18102:1:26","nodeType":"VariableDeclaration","scope":5200,"src":"18094:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:26"},"returnParameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5200,"src":"18128:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:26"},"scope":5821,"src":"18080:5181:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5233,"nodeType":"Block","src":"23434:171:26","statements":[{"id":5232,"nodeType":"UncheckedBlock","src":"23444:155:26","statements":[{"assignments":[5212],"declarations":[{"constant":false,"id":5212,"mutability":"mutable","name":"result","nameLocation":"23476:6:26","nodeType":"VariableDeclaration","scope":5232,"src":"23468:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5216,"initialValue":{"arguments":[{"id":5214,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"23490:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5213,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5200,5234],"referencedDeclaration":5200,"src":"23485:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"23513:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5221,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"23555:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}],"id":5220,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"23538:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4227_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"23568:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"23577:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"23586:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5218,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"23522:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"23522:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5210,"id":5231,"nodeType":"Return","src":"23506:82:26"}]}]},"documentation":{"id":5201,"nodeType":"StructuredDocumentation","src":"23267:86:26","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5234,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:26","nodeType":"FunctionDefinition","parameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"a","nameLocation":"23380:1:26","nodeType":"VariableDeclaration","scope":5234,"src":"23372:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5206,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:26","nodeType":"VariableDeclaration","scope":5234,"src":"23383:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"},"typeName":{"id":5205,"nodeType":"UserDefinedTypeName","pathNode":{"id":5204,"name":"Rounding","nameLocations":["23383:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4227,"src":"23383:8:26"},"referencedDeclaration":4227,"src":"23383:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:26"},"returnParameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5234,"src":"23425:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:26"},"scope":5821,"src":"23358:247:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5429,"nodeType":"Block","src":"23796:981:26","statements":[{"assignments":[5243],"declarations":[{"constant":false,"id":5243,"mutability":"mutable","name":"result","nameLocation":"23814:6:26","nodeType":"VariableDeclaration","scope":5429,"src":"23806:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5242,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5245,"initialValue":{"hexValue":"30","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:26"},{"assignments":[5247],"declarations":[{"constant":false,"id":5247,"mutability":"mutable","name":"exp","nameLocation":"23842:3:26","nodeType":"VariableDeclaration","scope":5429,"src":"23834:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5248,"nodeType":"VariableDeclarationStatement","src":"23834:11:26"},{"id":5426,"nodeType":"UncheckedBlock","src":"23855:893:26","statements":[{"expression":{"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5249,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"23879:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"23907:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5251,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"23891:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"23891:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5264,"nodeType":"ExpressionStatement","src":"23879:51:26"},{"expression":{"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"23944:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5266,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"23954:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5268,"nodeType":"ExpressionStatement","src":"23944:13:26"},{"expression":{"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"23971:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5270,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"23981:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5272,"nodeType":"ExpressionStatement","src":"23971:13:26"},{"expression":{"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5273,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"23999:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24026:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5275,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"24010:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"24010:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5288,"nodeType":"ExpressionStatement","src":"23999:49:26"},{"expression":{"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24062:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5290,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24072:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5292,"nodeType":"ExpressionStatement","src":"24062:13:26"},{"expression":{"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"24089:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5294,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24099:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5296,"nodeType":"ExpressionStatement","src":"24089:13:26"},{"expression":{"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5297,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24117:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24144:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5299,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"24128:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"24128:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5312,"nodeType":"ExpressionStatement","src":"24117:49:26"},{"expression":{"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24180:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5314,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24190:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5316,"nodeType":"ExpressionStatement","src":"24180:13:26"},{"expression":{"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"24207:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5318,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24217:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5320,"nodeType":"ExpressionStatement","src":"24207:13:26"},{"expression":{"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5321,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24235:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24262:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:26","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5323,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"24246:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"24246:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5336,"nodeType":"ExpressionStatement","src":"24235:49:26"},{"expression":{"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24298:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5338,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24308:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5340,"nodeType":"ExpressionStatement","src":"24298:13:26"},{"expression":{"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"24325:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5342,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24335:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5344,"nodeType":"ExpressionStatement","src":"24325:13:26"},{"expression":{"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5345,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24353:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24379:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5347,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"24363:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"24363:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5360,"nodeType":"ExpressionStatement","src":"24353:47:26"},{"expression":{"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24414:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5362,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24424:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5364,"nodeType":"ExpressionStatement","src":"24414:13:26"},{"expression":{"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"24441:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5366,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24451:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5368,"nodeType":"ExpressionStatement","src":"24441:13:26"},{"expression":{"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24469:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24495:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5371,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"24479:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"24479:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5384,"nodeType":"ExpressionStatement","src":"24469:47:26"},{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24530:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5386,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24540:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5388,"nodeType":"ExpressionStatement","src":"24530:13:26"},{"expression":{"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"24557:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5390,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24567:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5392,"nodeType":"ExpressionStatement","src":"24557:13:26"},{"expression":{"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5393,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24585:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24611:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5395,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"24595:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"24595:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5408,"nodeType":"ExpressionStatement","src":"24585:47:26"},{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24646:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5410,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24656:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5412,"nodeType":"ExpressionStatement","src":"24646:13:26"},{"expression":{"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"24673:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5414,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"24683:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5416,"nodeType":"ExpressionStatement","src":"24673:13:26"},{"expression":{"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"24701:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"24727:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5418,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"24711:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"24711:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5425,"nodeType":"ExpressionStatement","src":"24701:36:26"}]},{"expression":{"id":5427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"24764:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5241,"id":5428,"nodeType":"Return","src":"24757:13:26"}]},"documentation":{"id":5235,"nodeType":"StructuredDocumentation","src":"23611:119:26","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5430,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:26","nodeType":"FunctionDefinition","parameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"value","nameLocation":"23757:5:26","nodeType":"VariableDeclaration","scope":5430,"src":"23749:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5236,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:26"},"returnParameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5430,"src":"23787:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:26"},"scope":5821,"src":"23735:1042:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5463,"nodeType":"Block","src":"25010:175:26","statements":[{"id":5462,"nodeType":"UncheckedBlock","src":"25020:159:26","statements":[{"assignments":[5442],"declarations":[{"constant":false,"id":5442,"mutability":"mutable","name":"result","nameLocation":"25052:6:26","nodeType":"VariableDeclaration","scope":5462,"src":"25044:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5441,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5446,"initialValue":{"arguments":[{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"25066:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5443,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5430,5464],"referencedDeclaration":5430,"src":"25061:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"25093:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5451,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"25135:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}],"id":5450,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"25118:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4227_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"25153:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"25162:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5448,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"25102:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"25102:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5440,"id":5461,"nodeType":"Return","src":"25086:82:26"}]}]},"documentation":{"id":5431,"nodeType":"StructuredDocumentation","src":"24783:142:26","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5464,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:26","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"value","nameLocation":"24952:5:26","nodeType":"VariableDeclaration","scope":5464,"src":"24944:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5436,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:26","nodeType":"VariableDeclaration","scope":5464,"src":"24959:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"},"typeName":{"id":5435,"nodeType":"UserDefinedTypeName","pathNode":{"id":5434,"name":"Rounding","nameLocations":["24959:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4227,"src":"24959:8:26"},"referencedDeclaration":4227,"src":"24959:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:26"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5464,"src":"25001:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5438,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:26"},"scope":5821,"src":"24930:255:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5592,"nodeType":"Block","src":"25378:854:26","statements":[{"assignments":[5473],"declarations":[{"constant":false,"id":5473,"mutability":"mutable","name":"result","nameLocation":"25396:6:26","nodeType":"VariableDeclaration","scope":5592,"src":"25388:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5475,"initialValue":{"hexValue":"30","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:26"},{"id":5589,"nodeType":"UncheckedBlock","src":"25416:787:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25444:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5492,"nodeType":"IfStatement","src":"25440:103:26","trueBody":{"id":5491,"nodeType":"Block","src":"25463:80:26","statements":[{"expression":{"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25481:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5486,"nodeType":"ExpressionStatement","src":"25481:17:26"},{"expression":{"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"25516:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5490,"nodeType":"ExpressionStatement","src":"25516:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25560:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5509,"nodeType":"IfStatement","src":"25556:103:26","trueBody":{"id":5508,"nodeType":"Block","src":"25579:80:26","statements":[{"expression":{"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25597:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5503,"nodeType":"ExpressionStatement","src":"25597:17:26"},{"expression":{"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"25632:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5507,"nodeType":"ExpressionStatement","src":"25632:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25676:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5526,"nodeType":"IfStatement","src":"25672:103:26","trueBody":{"id":5525,"nodeType":"Block","src":"25695:80:26","statements":[{"expression":{"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25713:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5520,"nodeType":"ExpressionStatement","src":"25713:17:26"},{"expression":{"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"25748:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5524,"nodeType":"ExpressionStatement","src":"25748:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25792:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5543,"nodeType":"IfStatement","src":"25788:100:26","trueBody":{"id":5542,"nodeType":"Block","src":"25810:78:26","statements":[{"expression":{"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25828:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5537,"nodeType":"ExpressionStatement","src":"25828:16:26"},{"expression":{"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"25862:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5541,"nodeType":"ExpressionStatement","src":"25862:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25905:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5560,"nodeType":"IfStatement","src":"25901:100:26","trueBody":{"id":5559,"nodeType":"Block","src":"25923:78:26","statements":[{"expression":{"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25941:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5554,"nodeType":"ExpressionStatement","src":"25941:16:26"},{"expression":{"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"25975:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5558,"nodeType":"ExpressionStatement","src":"25975:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"26018:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5577,"nodeType":"IfStatement","src":"26014:100:26","trueBody":{"id":5576,"nodeType":"Block","src":"26036:78:26","statements":[{"expression":{"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"26054:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5571,"nodeType":"ExpressionStatement","src":"26054:16:26"},{"expression":{"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26088:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5575,"nodeType":"ExpressionStatement","src":"26088:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"26131:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5588,"nodeType":"IfStatement","src":"26127:66:26","trueBody":{"id":5587,"nodeType":"Block","src":"26149:44:26","statements":[{"expression":{"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5583,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26167:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5586,"nodeType":"ExpressionStatement","src":"26167:11:26"}]}}]},{"expression":{"id":5590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26219:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5471,"id":5591,"nodeType":"Return","src":"26212:13:26"}]},"documentation":{"id":5465,"nodeType":"StructuredDocumentation","src":"25191:120:26","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5593,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:26","nodeType":"FunctionDefinition","parameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"value","nameLocation":"25339:5:26","nodeType":"VariableDeclaration","scope":5593,"src":"25331:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:26"},"returnParameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5593,"src":"25369:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:26"},"scope":5821,"src":"25316:916:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5626,"nodeType":"Block","src":"26467:177:26","statements":[{"id":5625,"nodeType":"UncheckedBlock","src":"26477:161:26","statements":[{"assignments":[5605],"declarations":[{"constant":false,"id":5605,"mutability":"mutable","name":"result","nameLocation":"26509:6:26","nodeType":"VariableDeclaration","scope":5625,"src":"26501:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5604,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5609,"initialValue":{"arguments":[{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"26524:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5606,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5593,5627],"referencedDeclaration":5593,"src":"26518:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"26551:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5614,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"26593:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}],"id":5613,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"26576:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4227_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"26612:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"26621:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5611,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"26560:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"26560:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5603,"id":5624,"nodeType":"Return","src":"26544:83:26"}]}]},"documentation":{"id":5594,"nodeType":"StructuredDocumentation","src":"26238:143:26","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5627,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:26","nodeType":"FunctionDefinition","parameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"value","nameLocation":"26409:5:26","nodeType":"VariableDeclaration","scope":5627,"src":"26401:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5595,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5599,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:26","nodeType":"VariableDeclaration","scope":5627,"src":"26416:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"},"typeName":{"id":5598,"nodeType":"UserDefinedTypeName","pathNode":{"id":5597,"name":"Rounding","nameLocations":["26416:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4227,"src":"26416:8:26"},"referencedDeclaration":4227,"src":"26416:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:26"},"returnParameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5627,"src":"26458:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5601,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:26"},"scope":5821,"src":"26386:258:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5763,"nodeType":"Block","src":"26964:674:26","statements":[{"assignments":[5636],"declarations":[{"constant":false,"id":5636,"mutability":"mutable","name":"result","nameLocation":"26982:6:26","nodeType":"VariableDeclaration","scope":5763,"src":"26974:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5635,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5638,"initialValue":{"hexValue":"30","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:26"},{"assignments":[5640],"declarations":[{"constant":false,"id":5640,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:26","nodeType":"VariableDeclaration","scope":5763,"src":"27002:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5639,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5641,"nodeType":"VariableDeclarationStatement","src":"27002:12:26"},{"id":5760,"nodeType":"UncheckedBlock","src":"27024:585:26","statements":[{"expression":{"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5642,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27048:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"27071:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5643,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"27055:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"27055:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5655,"nodeType":"ExpressionStatement","src":"27048:46:26"},{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"27108:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5657,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27118:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5661,"nodeType":"ExpressionStatement","src":"27108:20:26"},{"expression":{"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"27142:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5663,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27152:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5667,"nodeType":"ExpressionStatement","src":"27142:19:26"},{"expression":{"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5668,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27176:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"27199:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5669,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"27183:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"27183:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5681,"nodeType":"ExpressionStatement","src":"27176:45:26"},{"expression":{"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"27235:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5683,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27245:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5687,"nodeType":"ExpressionStatement","src":"27235:19:26"},{"expression":{"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"27268:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5689,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27278:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5693,"nodeType":"ExpressionStatement","src":"27268:18:26"},{"expression":{"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5694,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27301:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"27324:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5695,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"27308:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"27308:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5707,"nodeType":"ExpressionStatement","src":"27301:45:26"},{"expression":{"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"27360:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5709,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27370:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5713,"nodeType":"ExpressionStatement","src":"27360:19:26"},{"expression":{"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"27393:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27403:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5719,"nodeType":"ExpressionStatement","src":"27393:18:26"},{"expression":{"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5720,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27426:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"27449:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:26","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5721,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"27433:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"27433:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5733,"nodeType":"ExpressionStatement","src":"27426:45:26"},{"expression":{"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"27485:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5735,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27495:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5739,"nodeType":"ExpressionStatement","src":"27485:19:26"},{"expression":{"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"27518:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5741,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"27528:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5745,"nodeType":"ExpressionStatement","src":"27518:18:26"},{"expression":{"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"27551:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"27577:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5747,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"27561:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"27561:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5759,"nodeType":"ExpressionStatement","src":"27551:47:26"}]},{"expression":{"id":5761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"27625:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5634,"id":5762,"nodeType":"Return","src":"27618:13:26"}]},"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"26650:246:26","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5764,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:26","nodeType":"FunctionDefinition","parameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"value","nameLocation":"26925:5:26","nodeType":"VariableDeclaration","scope":5764,"src":"26917:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5629,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:26"},"returnParameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5764,"src":"26955:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5632,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:26"},"scope":5821,"src":"26901:737:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5800,"nodeType":"Block","src":"27875:184:26","statements":[{"id":5799,"nodeType":"UncheckedBlock","src":"27885:168:26","statements":[{"assignments":[5776],"declarations":[{"constant":false,"id":5776,"mutability":"mutable","name":"result","nameLocation":"27917:6:26","nodeType":"VariableDeclaration","scope":5799,"src":"27909:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5775,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5780,"initialValue":{"arguments":[{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"27933:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5777,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5764,5801],"referencedDeclaration":5764,"src":"27926:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"27960:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5785,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"28002:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}],"id":5784,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"27985:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4227_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"28021:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"28036:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5782,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"27969:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"27969:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5774,"id":5798,"nodeType":"Return","src":"27953:89:26"}]}]},"documentation":{"id":5765,"nodeType":"StructuredDocumentation","src":"27644:144:26","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5801,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:26","nodeType":"FunctionDefinition","parameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"value","nameLocation":"27817:5:26","nodeType":"VariableDeclaration","scope":5801,"src":"27809:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5770,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:26","nodeType":"VariableDeclaration","scope":5801,"src":"27824:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"},"typeName":{"id":5769,"nodeType":"UserDefinedTypeName","pathNode":{"id":5768,"name":"Rounding","nameLocations":["27824:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4227,"src":"27824:8:26"},"referencedDeclaration":4227,"src":"27824:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:26"},"returnParameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5801,"src":"27866:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:26"},"scope":5821,"src":"27793:266:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5819,"nodeType":"Block","src":"28257:48:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5812,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"28280:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}],"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5810,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:26","typeDescriptions":{}}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5809,"id":5818,"nodeType":"Return","src":"28267:31:26"}]},"documentation":{"id":5802,"nodeType":"StructuredDocumentation","src":"28065:113:26","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5820,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:26","nodeType":"FunctionDefinition","parameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:26","nodeType":"VariableDeclaration","scope":5820,"src":"28209:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"},"typeName":{"id":5804,"nodeType":"UserDefinedTypeName","pathNode":{"id":5803,"name":"Rounding","nameLocations":["28209:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4227,"src":"28209:8:26"},"referencedDeclaration":4227,"src":"28209:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4227","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:26"},"returnParameters":{"id":5809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5820,"src":"28251:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5807,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:26"},"scope":5821,"src":"28183:122:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5822,"src":"281:28026:26","usedErrors":[],"usedEvents":[]}],"src":"103:28205:26"},"id":26},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7586]},"id":7587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5823,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5824,"nodeType":"StructuredDocumentation","src":"218:550:27","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7586,"linearizedBaseContracts":[7586],"name":"SafeCast","nameLocation":"777:8:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5825,"nodeType":"StructuredDocumentation","src":"792:68:27","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5831,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:27","nodeType":"ErrorDefinition","parameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5827,"mutability":"mutable","name":"bits","nameLocation":"908:4:27","nodeType":"VariableDeclaration","scope":5831,"src":"902:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5826,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5829,"mutability":"mutable","name":"value","nameLocation":"922:5:27","nodeType":"VariableDeclaration","scope":5831,"src":"914:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5828,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:27"},"src":"865:64:27"},{"documentation":{"id":5832,"nodeType":"StructuredDocumentation","src":"935:75:27","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5836,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:27","nodeType":"ErrorDefinition","parameters":{"id":5835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5834,"mutability":"mutable","name":"value","nameLocation":"1056:5:27","nodeType":"VariableDeclaration","scope":5836,"src":"1049:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5833,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:27"},"src":"1015:48:27"},{"documentation":{"id":5837,"nodeType":"StructuredDocumentation","src":"1069:67:27","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5843,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:27","nodeType":"ErrorDefinition","parameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"bits","nameLocation":"1183:4:27","nodeType":"VariableDeclaration","scope":5843,"src":"1177:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5838,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5841,"mutability":"mutable","name":"value","nameLocation":"1196:5:27","nodeType":"VariableDeclaration","scope":5843,"src":"1189:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5840,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:27"},"src":"1141:62:27"},{"documentation":{"id":5844,"nodeType":"StructuredDocumentation","src":"1209:75:27","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5848,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:27","nodeType":"ErrorDefinition","parameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"mutability":"mutable","name":"value","nameLocation":"1331:5:27","nodeType":"VariableDeclaration","scope":5848,"src":"1323:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:27"},"src":"1289:49:27"},{"body":{"id":5875,"nodeType":"Block","src":"1695:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"1709:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5858,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5857,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:27","memberName":"max","nodeType":"MemberAccess","src":"1717:17:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5869,"nodeType":"IfStatement","src":"1705:105:27","trueBody":{"id":5868,"nodeType":"Block","src":"1736:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"1793:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5863,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"1757:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5867,"nodeType":"RevertStatement","src":"1750:49:27"}]}},{"expression":{"arguments":[{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"1834:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5870,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:27","typeDescriptions":{}}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5855,"id":5874,"nodeType":"Return","src":"1819:21:27"}]},"documentation":{"id":5849,"nodeType":"StructuredDocumentation","src":"1344:280:27","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5876,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:27","nodeType":"FunctionDefinition","parameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"value","nameLocation":"1656:5:27","nodeType":"VariableDeclaration","scope":5876,"src":"1648:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:27"},"returnParameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5876,"src":"1686:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5853,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:27"},"scope":7586,"src":"1629:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5903,"nodeType":"Block","src":"2204:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"2218:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5886,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5885,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:27","memberName":"max","nodeType":"MemberAccess","src":"2226:17:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5897,"nodeType":"IfStatement","src":"2214:105:27","trueBody":{"id":5896,"nodeType":"Block","src":"2245:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"2302:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5891,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"2266:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5895,"nodeType":"RevertStatement","src":"2259:49:27"}]}},{"expression":{"arguments":[{"id":5900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"2343:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5898,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:27","typeDescriptions":{}}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5883,"id":5902,"nodeType":"Return","src":"2328:21:27"}]},"documentation":{"id":5877,"nodeType":"StructuredDocumentation","src":"1853:280:27","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5904,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:27","nodeType":"FunctionDefinition","parameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5879,"mutability":"mutable","name":"value","nameLocation":"2165:5:27","nodeType":"VariableDeclaration","scope":5904,"src":"2157:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:27"},"returnParameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5904,"src":"2195:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5881,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:27"},"scope":7586,"src":"2138:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5931,"nodeType":"Block","src":"2713:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"2727:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5914,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5913,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:27","memberName":"max","nodeType":"MemberAccess","src":"2735:17:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5925,"nodeType":"IfStatement","src":"2723:105:27","trueBody":{"id":5924,"nodeType":"Block","src":"2754:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"2811:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5919,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"2775:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5923,"nodeType":"RevertStatement","src":"2768:49:27"}]}},{"expression":{"arguments":[{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"2852:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5926,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:27","typeDescriptions":{}}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5911,"id":5930,"nodeType":"Return","src":"2837:21:27"}]},"documentation":{"id":5905,"nodeType":"StructuredDocumentation","src":"2362:280:27","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5932,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:27","nodeType":"FunctionDefinition","parameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"value","nameLocation":"2674:5:27","nodeType":"VariableDeclaration","scope":5932,"src":"2666:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:27"},"returnParameters":{"id":5911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5932,"src":"2704:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5909,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:27"},"scope":7586,"src":"2647:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5959,"nodeType":"Block","src":"3222:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"3236:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5942,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5941,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:27","memberName":"max","nodeType":"MemberAccess","src":"3244:17:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5953,"nodeType":"IfStatement","src":"3232:105:27","trueBody":{"id":5952,"nodeType":"Block","src":"3263:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"3320:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5947,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"3284:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5951,"nodeType":"RevertStatement","src":"3277:49:27"}]}},{"expression":{"arguments":[{"id":5956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"3361:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5954,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:27","typeDescriptions":{}}},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5939,"id":5958,"nodeType":"Return","src":"3346:21:27"}]},"documentation":{"id":5933,"nodeType":"StructuredDocumentation","src":"2871:280:27","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5960,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:27","nodeType":"FunctionDefinition","parameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"value","nameLocation":"3183:5:27","nodeType":"VariableDeclaration","scope":5960,"src":"3175:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5934,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:27"},"returnParameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5960,"src":"3213:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5937,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:27"},"scope":7586,"src":"3156:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5987,"nodeType":"Block","src":"3731:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"3745:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5970,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5969,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:27","memberName":"max","nodeType":"MemberAccess","src":"3753:17:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5981,"nodeType":"IfStatement","src":"3741:105:27","trueBody":{"id":5980,"nodeType":"Block","src":"3772:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"3829:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5975,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"3793:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5979,"nodeType":"RevertStatement","src":"3786:49:27"}]}},{"expression":{"arguments":[{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"3870:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5982,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:27","typeDescriptions":{}}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5967,"id":5986,"nodeType":"Return","src":"3855:21:27"}]},"documentation":{"id":5961,"nodeType":"StructuredDocumentation","src":"3380:280:27","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5988,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:27","nodeType":"FunctionDefinition","parameters":{"id":5964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"value","nameLocation":"3692:5:27","nodeType":"VariableDeclaration","scope":5988,"src":"3684:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5962,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:27"},"returnParameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5988,"src":"3722:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5965,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:27"},"scope":7586,"src":"3665:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6015,"nodeType":"Block","src":"4240:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"4254:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5998,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5997,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:27","memberName":"max","nodeType":"MemberAccess","src":"4262:17:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6009,"nodeType":"IfStatement","src":"4250:105:27","trueBody":{"id":6008,"nodeType":"Block","src":"4281:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"4338:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6003,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"4302:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6007,"nodeType":"RevertStatement","src":"4295:49:27"}]}},{"expression":{"arguments":[{"id":6012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"4379:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6010,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:27","typeDescriptions":{}}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5995,"id":6014,"nodeType":"Return","src":"4364:21:27"}]},"documentation":{"id":5989,"nodeType":"StructuredDocumentation","src":"3889:280:27","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6016,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:27","nodeType":"FunctionDefinition","parameters":{"id":5992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5991,"mutability":"mutable","name":"value","nameLocation":"4201:5:27","nodeType":"VariableDeclaration","scope":6016,"src":"4193:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5990,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:27"},"returnParameters":{"id":5995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6016,"src":"4231:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5993,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:27"},"scope":7586,"src":"4174:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6043,"nodeType":"Block","src":"4749:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"4763:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6026,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6025,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:27","memberName":"max","nodeType":"MemberAccess","src":"4771:17:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6037,"nodeType":"IfStatement","src":"4759:105:27","trueBody":{"id":6036,"nodeType":"Block","src":"4790:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"4847:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6031,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"4811:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6035,"nodeType":"RevertStatement","src":"4804:49:27"}]}},{"expression":{"arguments":[{"id":6040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"4888:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6038,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:27","typeDescriptions":{}}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6023,"id":6042,"nodeType":"Return","src":"4873:21:27"}]},"documentation":{"id":6017,"nodeType":"StructuredDocumentation","src":"4398:280:27","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6044,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:27","nodeType":"FunctionDefinition","parameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"value","nameLocation":"4710:5:27","nodeType":"VariableDeclaration","scope":6044,"src":"4702:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:27"},"returnParameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6044,"src":"4740:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6021,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:27"},"scope":7586,"src":"4683:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6071,"nodeType":"Block","src":"5258:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"5272:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6054,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6053,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:27","memberName":"max","nodeType":"MemberAccess","src":"5280:17:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6065,"nodeType":"IfStatement","src":"5268:105:27","trueBody":{"id":6064,"nodeType":"Block","src":"5299:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"5356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6059,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"5320:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6063,"nodeType":"RevertStatement","src":"5313:49:27"}]}},{"expression":{"arguments":[{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"5397:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6066,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:27","typeDescriptions":{}}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6051,"id":6070,"nodeType":"Return","src":"5382:21:27"}]},"documentation":{"id":6045,"nodeType":"StructuredDocumentation","src":"4907:280:27","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6072,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:27","nodeType":"FunctionDefinition","parameters":{"id":6048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"mutability":"mutable","name":"value","nameLocation":"5219:5:27","nodeType":"VariableDeclaration","scope":6072,"src":"5211:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6046,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:27"},"returnParameters":{"id":6051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6072,"src":"5249:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6049,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:27"},"scope":7586,"src":"5192:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6099,"nodeType":"Block","src":"5767:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"5781:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6082,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6081,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:27","memberName":"max","nodeType":"MemberAccess","src":"5789:17:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6093,"nodeType":"IfStatement","src":"5777:105:27","trueBody":{"id":6092,"nodeType":"Block","src":"5808:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"5865:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6087,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"5829:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6091,"nodeType":"RevertStatement","src":"5822:49:27"}]}},{"expression":{"arguments":[{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"5906:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6094,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:27","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6079,"id":6098,"nodeType":"Return","src":"5891:21:27"}]},"documentation":{"id":6073,"nodeType":"StructuredDocumentation","src":"5416:280:27","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6100,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:27","nodeType":"FunctionDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6075,"mutability":"mutable","name":"value","nameLocation":"5728:5:27","nodeType":"VariableDeclaration","scope":6100,"src":"5720:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6074,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:27"},"returnParameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6100,"src":"5758:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6077,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:27"},"scope":7586,"src":"5701:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6127,"nodeType":"Block","src":"6276:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"6290:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6110,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6109,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:27","memberName":"max","nodeType":"MemberAccess","src":"6298:17:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6121,"nodeType":"IfStatement","src":"6286:105:27","trueBody":{"id":6120,"nodeType":"Block","src":"6317:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"6374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6115,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"6338:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6119,"nodeType":"RevertStatement","src":"6331:49:27"}]}},{"expression":{"arguments":[{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"6415:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6122,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:27","typeDescriptions":{}}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6107,"id":6126,"nodeType":"Return","src":"6400:21:27"}]},"documentation":{"id":6101,"nodeType":"StructuredDocumentation","src":"5925:280:27","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6128,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:27","nodeType":"FunctionDefinition","parameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"value","nameLocation":"6237:5:27","nodeType":"VariableDeclaration","scope":6128,"src":"6229:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6102,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:27"},"returnParameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6128,"src":"6267:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6105,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:27"},"scope":7586,"src":"6210:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6155,"nodeType":"Block","src":"6785:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6799:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6138,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6137,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:27","memberName":"max","nodeType":"MemberAccess","src":"6807:17:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6149,"nodeType":"IfStatement","src":"6795:105:27","trueBody":{"id":6148,"nodeType":"Block","src":"6826:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6883:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6143,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"6847:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6147,"nodeType":"RevertStatement","src":"6840:49:27"}]}},{"expression":{"arguments":[{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6924:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6150,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:27","typeDescriptions":{}}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6135,"id":6154,"nodeType":"Return","src":"6909:21:27"}]},"documentation":{"id":6129,"nodeType":"StructuredDocumentation","src":"6434:280:27","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6156,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:27","nodeType":"FunctionDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"value","nameLocation":"6746:5:27","nodeType":"VariableDeclaration","scope":6156,"src":"6738:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:27"},"returnParameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6156,"src":"6776:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6133,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:27"},"scope":7586,"src":"6719:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6183,"nodeType":"Block","src":"7294:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"7308:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6166,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6165,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:27","memberName":"max","nodeType":"MemberAccess","src":"7316:17:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6177,"nodeType":"IfStatement","src":"7304:105:27","trueBody":{"id":6176,"nodeType":"Block","src":"7335:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"7392:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6171,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"7356:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6175,"nodeType":"RevertStatement","src":"7349:49:27"}]}},{"expression":{"arguments":[{"id":6180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"7433:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6178,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:27","typeDescriptions":{}}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6163,"id":6182,"nodeType":"Return","src":"7418:21:27"}]},"documentation":{"id":6157,"nodeType":"StructuredDocumentation","src":"6943:280:27","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6184,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:27","nodeType":"FunctionDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"value","nameLocation":"7255:5:27","nodeType":"VariableDeclaration","scope":6184,"src":"7247:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6158,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:27"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6184,"src":"7285:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6161,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:27"},"scope":7586,"src":"7228:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6211,"nodeType":"Block","src":"7803:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"7817:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6194,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6193,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:27","memberName":"max","nodeType":"MemberAccess","src":"7825:17:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6205,"nodeType":"IfStatement","src":"7813:105:27","trueBody":{"id":6204,"nodeType":"Block","src":"7844:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"7901:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6199,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"7865:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6203,"nodeType":"RevertStatement","src":"7858:49:27"}]}},{"expression":{"arguments":[{"id":6208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"7942:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6206,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:27","typeDescriptions":{}}},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6191,"id":6210,"nodeType":"Return","src":"7927:21:27"}]},"documentation":{"id":6185,"nodeType":"StructuredDocumentation","src":"7452:280:27","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6212,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:27","nodeType":"FunctionDefinition","parameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"value","nameLocation":"7764:5:27","nodeType":"VariableDeclaration","scope":6212,"src":"7756:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6186,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:27"},"returnParameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6212,"src":"7794:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6189,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:27"},"scope":7586,"src":"7737:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6239,"nodeType":"Block","src":"8312:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"8326:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6222,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6221,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:27","memberName":"max","nodeType":"MemberAccess","src":"8334:17:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6233,"nodeType":"IfStatement","src":"8322:105:27","trueBody":{"id":6232,"nodeType":"Block","src":"8353:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"8410:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6227,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"8374:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6231,"nodeType":"RevertStatement","src":"8367:49:27"}]}},{"expression":{"arguments":[{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"8451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6234,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:27","typeDescriptions":{}}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6219,"id":6238,"nodeType":"Return","src":"8436:21:27"}]},"documentation":{"id":6213,"nodeType":"StructuredDocumentation","src":"7961:280:27","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6240,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:27","nodeType":"FunctionDefinition","parameters":{"id":6216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6215,"mutability":"mutable","name":"value","nameLocation":"8273:5:27","nodeType":"VariableDeclaration","scope":6240,"src":"8265:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6214,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:27"},"returnParameters":{"id":6219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6240,"src":"8303:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6217,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:27"},"scope":7586,"src":"8246:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6267,"nodeType":"Block","src":"8821:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"8835:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6250,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6249,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:27","memberName":"max","nodeType":"MemberAccess","src":"8843:17:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6261,"nodeType":"IfStatement","src":"8831:105:27","trueBody":{"id":6260,"nodeType":"Block","src":"8862:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"8919:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6255,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"8883:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6259,"nodeType":"RevertStatement","src":"8876:49:27"}]}},{"expression":{"arguments":[{"id":6264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"8960:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6262,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:27","typeDescriptions":{}}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6247,"id":6266,"nodeType":"Return","src":"8945:21:27"}]},"documentation":{"id":6241,"nodeType":"StructuredDocumentation","src":"8470:280:27","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6268,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:27","nodeType":"FunctionDefinition","parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"value","nameLocation":"8782:5:27","nodeType":"VariableDeclaration","scope":6268,"src":"8774:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6242,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:27"},"returnParameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6268,"src":"8812:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6245,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:27"},"scope":7586,"src":"8755:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6295,"nodeType":"Block","src":"9330:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"9344:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6278,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6277,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:27","memberName":"max","nodeType":"MemberAccess","src":"9352:17:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6289,"nodeType":"IfStatement","src":"9340:105:27","trueBody":{"id":6288,"nodeType":"Block","src":"9371:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"9428:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6283,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"9392:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6287,"nodeType":"RevertStatement","src":"9385:49:27"}]}},{"expression":{"arguments":[{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"9469:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6290,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:27","typeDescriptions":{}}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6275,"id":6294,"nodeType":"Return","src":"9454:21:27"}]},"documentation":{"id":6269,"nodeType":"StructuredDocumentation","src":"8979:280:27","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6296,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:27","nodeType":"FunctionDefinition","parameters":{"id":6272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"value","nameLocation":"9291:5:27","nodeType":"VariableDeclaration","scope":6296,"src":"9283:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6270,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:27"},"returnParameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6296,"src":"9321:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6273,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:27"},"scope":7586,"src":"9264:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6323,"nodeType":"Block","src":"9839:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"9853:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6306,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6305,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:27","memberName":"max","nodeType":"MemberAccess","src":"9861:17:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6317,"nodeType":"IfStatement","src":"9849:105:27","trueBody":{"id":6316,"nodeType":"Block","src":"9880:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"9937:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6311,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"9901:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6315,"nodeType":"RevertStatement","src":"9894:49:27"}]}},{"expression":{"arguments":[{"id":6320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"9978:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6318,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:27","typeDescriptions":{}}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6303,"id":6322,"nodeType":"Return","src":"9963:21:27"}]},"documentation":{"id":6297,"nodeType":"StructuredDocumentation","src":"9488:280:27","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6324,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:27","nodeType":"FunctionDefinition","parameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"value","nameLocation":"9800:5:27","nodeType":"VariableDeclaration","scope":6324,"src":"9792:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:27"},"returnParameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6324,"src":"9830:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6301,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:27"},"scope":7586,"src":"9773:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6351,"nodeType":"Block","src":"10348:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"10362:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6334,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6333,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:27","memberName":"max","nodeType":"MemberAccess","src":"10370:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6345,"nodeType":"IfStatement","src":"10358:105:27","trueBody":{"id":6344,"nodeType":"Block","src":"10389:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"10446:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6339,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"10410:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6343,"nodeType":"RevertStatement","src":"10403:49:27"}]}},{"expression":{"arguments":[{"id":6348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"10487:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6346,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:27","typeDescriptions":{}}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6331,"id":6350,"nodeType":"Return","src":"10472:21:27"}]},"documentation":{"id":6325,"nodeType":"StructuredDocumentation","src":"9997:280:27","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6352,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:27","nodeType":"FunctionDefinition","parameters":{"id":6328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"value","nameLocation":"10309:5:27","nodeType":"VariableDeclaration","scope":6352,"src":"10301:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6326,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:27"},"returnParameters":{"id":6331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6352,"src":"10339:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6329,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:27"},"scope":7586,"src":"10282:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6379,"nodeType":"Block","src":"10857:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"10871:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6362,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6361,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:27","memberName":"max","nodeType":"MemberAccess","src":"10879:17:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6373,"nodeType":"IfStatement","src":"10867:105:27","trueBody":{"id":6372,"nodeType":"Block","src":"10898:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"10955:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6367,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"10919:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6371,"nodeType":"RevertStatement","src":"10912:49:27"}]}},{"expression":{"arguments":[{"id":6376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"10996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6374,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:27","typeDescriptions":{}}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6359,"id":6378,"nodeType":"Return","src":"10981:21:27"}]},"documentation":{"id":6353,"nodeType":"StructuredDocumentation","src":"10506:280:27","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6380,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:27","nodeType":"FunctionDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6355,"mutability":"mutable","name":"value","nameLocation":"10818:5:27","nodeType":"VariableDeclaration","scope":6380,"src":"10810:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6354,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:27"},"returnParameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6380,"src":"10848:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6357,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:27"},"scope":7586,"src":"10791:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6407,"nodeType":"Block","src":"11360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"11374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6390,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:27","memberName":"max","nodeType":"MemberAccess","src":"11382:16:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6401,"nodeType":"IfStatement","src":"11370:103:27","trueBody":{"id":6400,"nodeType":"Block","src":"11400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"11456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6395,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"11421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6399,"nodeType":"RevertStatement","src":"11414:48:27"}]}},{"expression":{"arguments":[{"id":6404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"11496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6402,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:27","typeDescriptions":{}}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6387,"id":6406,"nodeType":"Return","src":"11482:20:27"}]},"documentation":{"id":6381,"nodeType":"StructuredDocumentation","src":"11015:276:27","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6408,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6383,"mutability":"mutable","name":"value","nameLocation":"11322:5:27","nodeType":"VariableDeclaration","scope":6408,"src":"11314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6382,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:27"},"returnParameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6408,"src":"11352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6385,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:27"},"scope":7586,"src":"11296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6435,"nodeType":"Block","src":"11860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"11874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6418,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6417,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:27","memberName":"max","nodeType":"MemberAccess","src":"11882:16:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6429,"nodeType":"IfStatement","src":"11870:103:27","trueBody":{"id":6428,"nodeType":"Block","src":"11900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"11956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6423,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"11921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6427,"nodeType":"RevertStatement","src":"11914:48:27"}]}},{"expression":{"arguments":[{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"11996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6430,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:27","typeDescriptions":{}}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6415,"id":6434,"nodeType":"Return","src":"11982:20:27"}]},"documentation":{"id":6409,"nodeType":"StructuredDocumentation","src":"11515:276:27","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6436,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"value","nameLocation":"11822:5:27","nodeType":"VariableDeclaration","scope":6436,"src":"11814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6410,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:27"},"returnParameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6436,"src":"11852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6413,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:27"},"scope":7586,"src":"11796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6463,"nodeType":"Block","src":"12360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"12374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6446,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6445,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:27","memberName":"max","nodeType":"MemberAccess","src":"12382:16:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6457,"nodeType":"IfStatement","src":"12370:103:27","trueBody":{"id":6456,"nodeType":"Block","src":"12400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"12456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6451,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"12421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6455,"nodeType":"RevertStatement","src":"12414:48:27"}]}},{"expression":{"arguments":[{"id":6460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"12496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6458,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:27","typeDescriptions":{}}},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6443,"id":6462,"nodeType":"Return","src":"12482:20:27"}]},"documentation":{"id":6437,"nodeType":"StructuredDocumentation","src":"12015:276:27","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6464,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"value","nameLocation":"12322:5:27","nodeType":"VariableDeclaration","scope":6464,"src":"12314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6438,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:27"},"returnParameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6464,"src":"12352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6441,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:27"},"scope":7586,"src":"12296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6491,"nodeType":"Block","src":"12860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"12874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6474,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6473,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:27","memberName":"max","nodeType":"MemberAccess","src":"12882:16:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6485,"nodeType":"IfStatement","src":"12870:103:27","trueBody":{"id":6484,"nodeType":"Block","src":"12900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"12956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6479,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"12921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6483,"nodeType":"RevertStatement","src":"12914:48:27"}]}},{"expression":{"arguments":[{"id":6488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"12996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6486,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:27","typeDescriptions":{}}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6471,"id":6490,"nodeType":"Return","src":"12982:20:27"}]},"documentation":{"id":6465,"nodeType":"StructuredDocumentation","src":"12515:276:27","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6492,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"value","nameLocation":"12822:5:27","nodeType":"VariableDeclaration","scope":6492,"src":"12814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6466,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:27"},"returnParameters":{"id":6471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6492,"src":"12852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6469,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:27"},"scope":7586,"src":"12796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6519,"nodeType":"Block","src":"13360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"13374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6502,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6501,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:27","memberName":"max","nodeType":"MemberAccess","src":"13382:16:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6513,"nodeType":"IfStatement","src":"13370:103:27","trueBody":{"id":6512,"nodeType":"Block","src":"13400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"13456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6507,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"13421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6511,"nodeType":"RevertStatement","src":"13414:48:27"}]}},{"expression":{"arguments":[{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"13496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6514,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:27","typeDescriptions":{}}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6499,"id":6518,"nodeType":"Return","src":"13482:20:27"}]},"documentation":{"id":6493,"nodeType":"StructuredDocumentation","src":"13015:276:27","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6520,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6495,"mutability":"mutable","name":"value","nameLocation":"13322:5:27","nodeType":"VariableDeclaration","scope":6520,"src":"13314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6494,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:27"},"returnParameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6520,"src":"13352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6497,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:27"},"scope":7586,"src":"13296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6547,"nodeType":"Block","src":"13860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"13874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6530,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6529,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:27","memberName":"max","nodeType":"MemberAccess","src":"13882:16:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6541,"nodeType":"IfStatement","src":"13870:103:27","trueBody":{"id":6540,"nodeType":"Block","src":"13900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"13956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6535,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"13921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6539,"nodeType":"RevertStatement","src":"13914:48:27"}]}},{"expression":{"arguments":[{"id":6544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"13996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6542,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:27","typeDescriptions":{}}},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6527,"id":6546,"nodeType":"Return","src":"13982:20:27"}]},"documentation":{"id":6521,"nodeType":"StructuredDocumentation","src":"13515:276:27","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6548,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"value","nameLocation":"13822:5:27","nodeType":"VariableDeclaration","scope":6548,"src":"13814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:27"},"returnParameters":{"id":6527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6548,"src":"13852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6525,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:27"},"scope":7586,"src":"13796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6575,"nodeType":"Block","src":"14360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"14374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6558,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:27","memberName":"max","nodeType":"MemberAccess","src":"14382:16:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6569,"nodeType":"IfStatement","src":"14370:103:27","trueBody":{"id":6568,"nodeType":"Block","src":"14400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"14456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6563,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"14421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6567,"nodeType":"RevertStatement","src":"14414:48:27"}]}},{"expression":{"arguments":[{"id":6572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"14496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6570,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:27","typeDescriptions":{}}},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6555,"id":6574,"nodeType":"Return","src":"14482:20:27"}]},"documentation":{"id":6549,"nodeType":"StructuredDocumentation","src":"14015:276:27","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6576,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"value","nameLocation":"14322:5:27","nodeType":"VariableDeclaration","scope":6576,"src":"14314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:27"},"returnParameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6576,"src":"14352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6553,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:27"},"scope":7586,"src":"14296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6603,"nodeType":"Block","src":"14860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"14874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6586,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6585,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:27","memberName":"max","nodeType":"MemberAccess","src":"14882:16:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6597,"nodeType":"IfStatement","src":"14870:103:27","trueBody":{"id":6596,"nodeType":"Block","src":"14900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"14956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6591,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"14921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6595,"nodeType":"RevertStatement","src":"14914:48:27"}]}},{"expression":{"arguments":[{"id":6600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"14996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6598,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:27","typeDescriptions":{}}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6583,"id":6602,"nodeType":"Return","src":"14982:20:27"}]},"documentation":{"id":6577,"nodeType":"StructuredDocumentation","src":"14515:276:27","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6604,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"value","nameLocation":"14822:5:27","nodeType":"VariableDeclaration","scope":6604,"src":"14814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6578,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:27"},"returnParameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6604,"src":"14852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6581,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:27"},"scope":7586,"src":"14796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6631,"nodeType":"Block","src":"15360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"15374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6614,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6613,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:27","memberName":"max","nodeType":"MemberAccess","src":"15382:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6625,"nodeType":"IfStatement","src":"15370:103:27","trueBody":{"id":6624,"nodeType":"Block","src":"15400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"15456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6619,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"15421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6623,"nodeType":"RevertStatement","src":"15414:48:27"}]}},{"expression":{"arguments":[{"id":6628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"15496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6626,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:27","typeDescriptions":{}}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6611,"id":6630,"nodeType":"Return","src":"15482:20:27"}]},"documentation":{"id":6605,"nodeType":"StructuredDocumentation","src":"15015:276:27","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6632,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"value","nameLocation":"15322:5:27","nodeType":"VariableDeclaration","scope":6632,"src":"15314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6606,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:27"},"returnParameters":{"id":6611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6632,"src":"15352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6609,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:27"},"scope":7586,"src":"15296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6659,"nodeType":"Block","src":"15860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"15874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6642,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6641,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:27","memberName":"max","nodeType":"MemberAccess","src":"15882:16:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6653,"nodeType":"IfStatement","src":"15870:103:27","trueBody":{"id":6652,"nodeType":"Block","src":"15900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"15956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6647,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"15921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6651,"nodeType":"RevertStatement","src":"15914:48:27"}]}},{"expression":{"arguments":[{"id":6656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"15996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6654,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:27","typeDescriptions":{}}},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6639,"id":6658,"nodeType":"Return","src":"15982:20:27"}]},"documentation":{"id":6633,"nodeType":"StructuredDocumentation","src":"15515:276:27","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6660,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"value","nameLocation":"15822:5:27","nodeType":"VariableDeclaration","scope":6660,"src":"15814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6634,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:27"},"returnParameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6660,"src":"15852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6637,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:27"},"scope":7586,"src":"15796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6687,"nodeType":"Block","src":"16360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"16374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6670,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6669,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:27","memberName":"max","nodeType":"MemberAccess","src":"16382:16:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6681,"nodeType":"IfStatement","src":"16370:103:27","trueBody":{"id":6680,"nodeType":"Block","src":"16400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"16456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6675,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"16421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6679,"nodeType":"RevertStatement","src":"16414:48:27"}]}},{"expression":{"arguments":[{"id":6684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"16496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6682,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:27","typeDescriptions":{}}},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6667,"id":6686,"nodeType":"Return","src":"16482:20:27"}]},"documentation":{"id":6661,"nodeType":"StructuredDocumentation","src":"16015:276:27","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6688,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"value","nameLocation":"16322:5:27","nodeType":"VariableDeclaration","scope":6688,"src":"16314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6662,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:27"},"returnParameters":{"id":6667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6688,"src":"16352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6665,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:27"},"scope":7586,"src":"16296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6715,"nodeType":"Block","src":"16854:146:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"16868:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6698,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6697,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:27","memberName":"max","nodeType":"MemberAccess","src":"16876:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6709,"nodeType":"IfStatement","src":"16864:101:27","trueBody":{"id":6708,"nodeType":"Block","src":"16893:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"16948:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6703,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"16914:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6707,"nodeType":"RevertStatement","src":"16907:47:27"}]}},{"expression":{"arguments":[{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"16987:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6710,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:27","typeDescriptions":{}}},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6695,"id":6714,"nodeType":"Return","src":"16974:19:27"}]},"documentation":{"id":6689,"nodeType":"StructuredDocumentation","src":"16515:272:27","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6716,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:27","nodeType":"FunctionDefinition","parameters":{"id":6692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6691,"mutability":"mutable","name":"value","nameLocation":"16817:5:27","nodeType":"VariableDeclaration","scope":6716,"src":"16809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6690,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:27"},"returnParameters":{"id":6695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6716,"src":"16847:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6693,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:27"},"scope":7586,"src":"16792:208:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6738,"nodeType":"Block","src":"17236:128:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"17250:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6732,"nodeType":"IfStatement","src":"17246:81:27","trueBody":{"id":6731,"nodeType":"Block","src":"17261:66:27","statements":[{"errorCall":{"arguments":[{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"17310:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6727,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"17282:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6730,"nodeType":"RevertStatement","src":"17275:41:27"}]}},{"expression":{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"17351:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6733,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:27","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6723,"id":6737,"nodeType":"Return","src":"17336:21:27"}]},"documentation":{"id":6717,"nodeType":"StructuredDocumentation","src":"17006:160:27","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6739,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:27","nodeType":"FunctionDefinition","parameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"value","nameLocation":"17197:5:27","nodeType":"VariableDeclaration","scope":6739,"src":"17190:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6718,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:27"},"returnParameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6739,"src":"17227:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6721,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:27"},"scope":7586,"src":"17171:193:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6764,"nodeType":"Block","src":"17761:150:27","statements":[{"expression":{"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"17771:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"17791:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6748,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:27","typeDescriptions":{}}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6753,"nodeType":"ExpressionStatement","src":"17771:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"17811:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"17825:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6763,"nodeType":"IfStatement","src":"17807:98:27","trueBody":{"id":6762,"nodeType":"Block","src":"17832:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"17888:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6757,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"17853:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6761,"nodeType":"RevertStatement","src":"17846:48:27"}]}}]},"documentation":{"id":6740,"nodeType":"StructuredDocumentation","src":"17370:312:27","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6765,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:27","nodeType":"FunctionDefinition","parameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"value","nameLocation":"17712:5:27","nodeType":"VariableDeclaration","scope":6765,"src":"17705:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6741,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:27"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:27","nodeType":"VariableDeclaration","scope":6765,"src":"17742:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6744,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:27"},"scope":7586,"src":"17687:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6790,"nodeType":"Block","src":"18308:150:27","statements":[{"expression":{"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"18318:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"18338:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6774,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:27","typeDescriptions":{}}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6779,"nodeType":"ExpressionStatement","src":"18318:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"18358:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"18372:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6789,"nodeType":"IfStatement","src":"18354:98:27","trueBody":{"id":6788,"nodeType":"Block","src":"18379:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"18435:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6783,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"18400:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6787,"nodeType":"RevertStatement","src":"18393:48:27"}]}}]},"documentation":{"id":6766,"nodeType":"StructuredDocumentation","src":"17917:312:27","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6791,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:27","nodeType":"FunctionDefinition","parameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"value","nameLocation":"18259:5:27","nodeType":"VariableDeclaration","scope":6791,"src":"18252:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6767,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:27"},"returnParameters":{"id":6772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6771,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:27","nodeType":"VariableDeclaration","scope":6791,"src":"18289:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6770,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:27"},"scope":7586,"src":"18234:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6816,"nodeType":"Block","src":"18855:150:27","statements":[{"expression":{"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"18865:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"18885:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6800,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:27","typeDescriptions":{}}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6805,"nodeType":"ExpressionStatement","src":"18865:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"18905:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"18919:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6815,"nodeType":"IfStatement","src":"18901:98:27","trueBody":{"id":6814,"nodeType":"Block","src":"18926:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"18982:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6809,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"18947:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6813,"nodeType":"RevertStatement","src":"18940:48:27"}]}}]},"documentation":{"id":6792,"nodeType":"StructuredDocumentation","src":"18464:312:27","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:27","nodeType":"FunctionDefinition","parameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"value","nameLocation":"18806:5:27","nodeType":"VariableDeclaration","scope":6817,"src":"18799:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6793,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:27"},"returnParameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:27","nodeType":"VariableDeclaration","scope":6817,"src":"18836:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6796,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:27"},"scope":7586,"src":"18781:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6842,"nodeType":"Block","src":"19402:150:27","statements":[{"expression":{"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"19412:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"19432:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6826,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:27","typeDescriptions":{}}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6831,"nodeType":"ExpressionStatement","src":"19412:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"19452:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"19466:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6841,"nodeType":"IfStatement","src":"19448:98:27","trueBody":{"id":6840,"nodeType":"Block","src":"19473:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"19529:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6835,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"19494:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6839,"nodeType":"RevertStatement","src":"19487:48:27"}]}}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"19011:312:27","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6843,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:27","nodeType":"FunctionDefinition","parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"value","nameLocation":"19353:5:27","nodeType":"VariableDeclaration","scope":6843,"src":"19346:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6819,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:27"},"returnParameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:27","nodeType":"VariableDeclaration","scope":6843,"src":"19383:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6822,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:27"},"scope":7586,"src":"19328:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6868,"nodeType":"Block","src":"19949:150:27","statements":[{"expression":{"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"19959:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"19979:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6852,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:27","typeDescriptions":{}}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6857,"nodeType":"ExpressionStatement","src":"19959:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"19999:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"20013:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6867,"nodeType":"IfStatement","src":"19995:98:27","trueBody":{"id":6866,"nodeType":"Block","src":"20020:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"20076:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6861,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"20041:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6865,"nodeType":"RevertStatement","src":"20034:48:27"}]}}]},"documentation":{"id":6844,"nodeType":"StructuredDocumentation","src":"19558:312:27","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6869,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:27","nodeType":"FunctionDefinition","parameters":{"id":6847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"value","nameLocation":"19900:5:27","nodeType":"VariableDeclaration","scope":6869,"src":"19893:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6845,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:27"},"returnParameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:27","nodeType":"VariableDeclaration","scope":6869,"src":"19930:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6848,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:27"},"scope":7586,"src":"19875:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6894,"nodeType":"Block","src":"20496:150:27","statements":[{"expression":{"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"20506:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"20526:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6878,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:27","typeDescriptions":{}}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6883,"nodeType":"ExpressionStatement","src":"20506:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"20546:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"20560:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6893,"nodeType":"IfStatement","src":"20542:98:27","trueBody":{"id":6892,"nodeType":"Block","src":"20567:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"20623:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6887,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"20588:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6891,"nodeType":"RevertStatement","src":"20581:48:27"}]}}]},"documentation":{"id":6870,"nodeType":"StructuredDocumentation","src":"20105:312:27","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6895,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:27","nodeType":"FunctionDefinition","parameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"value","nameLocation":"20447:5:27","nodeType":"VariableDeclaration","scope":6895,"src":"20440:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6871,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:27"},"returnParameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6875,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:27","nodeType":"VariableDeclaration","scope":6895,"src":"20477:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6874,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:27"},"scope":7586,"src":"20422:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6920,"nodeType":"Block","src":"21043:150:27","statements":[{"expression":{"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"21053:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"21073:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6904,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:27","typeDescriptions":{}}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6909,"nodeType":"ExpressionStatement","src":"21053:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"21093:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"21107:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6919,"nodeType":"IfStatement","src":"21089:98:27","trueBody":{"id":6918,"nodeType":"Block","src":"21114:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"21170:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6913,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"21135:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6917,"nodeType":"RevertStatement","src":"21128:48:27"}]}}]},"documentation":{"id":6896,"nodeType":"StructuredDocumentation","src":"20652:312:27","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6921,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:27","nodeType":"FunctionDefinition","parameters":{"id":6899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"value","nameLocation":"20994:5:27","nodeType":"VariableDeclaration","scope":6921,"src":"20987:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6897,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:27"},"returnParameters":{"id":6902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6901,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:27","nodeType":"VariableDeclaration","scope":6921,"src":"21024:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6900,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:27"},"scope":7586,"src":"20969:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6946,"nodeType":"Block","src":"21590:150:27","statements":[{"expression":{"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"21600:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"21620:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6930,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:27","typeDescriptions":{}}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6935,"nodeType":"ExpressionStatement","src":"21600:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"21640:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"21654:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6945,"nodeType":"IfStatement","src":"21636:98:27","trueBody":{"id":6944,"nodeType":"Block","src":"21661:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"21717:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6939,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"21682:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6943,"nodeType":"RevertStatement","src":"21675:48:27"}]}}]},"documentation":{"id":6922,"nodeType":"StructuredDocumentation","src":"21199:312:27","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6947,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:27","nodeType":"FunctionDefinition","parameters":{"id":6925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6924,"mutability":"mutable","name":"value","nameLocation":"21541:5:27","nodeType":"VariableDeclaration","scope":6947,"src":"21534:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6923,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:27"},"returnParameters":{"id":6928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6927,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:27","nodeType":"VariableDeclaration","scope":6947,"src":"21571:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6926,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:27"},"scope":7586,"src":"21516:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6972,"nodeType":"Block","src":"22137:150:27","statements":[{"expression":{"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"22147:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"22167:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6956,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:27","typeDescriptions":{}}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6961,"nodeType":"ExpressionStatement","src":"22147:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"22187:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"22201:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6971,"nodeType":"IfStatement","src":"22183:98:27","trueBody":{"id":6970,"nodeType":"Block","src":"22208:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"22264:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6965,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"22229:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6969,"nodeType":"RevertStatement","src":"22222:48:27"}]}}]},"documentation":{"id":6948,"nodeType":"StructuredDocumentation","src":"21746:312:27","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6973,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:27","nodeType":"FunctionDefinition","parameters":{"id":6951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"mutability":"mutable","name":"value","nameLocation":"22088:5:27","nodeType":"VariableDeclaration","scope":6973,"src":"22081:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6949,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:27"},"returnParameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:27","nodeType":"VariableDeclaration","scope":6973,"src":"22118:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6952,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:27"},"scope":7586,"src":"22063:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6998,"nodeType":"Block","src":"22684:150:27","statements":[{"expression":{"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"22694:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"22714:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6982,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:27","typeDescriptions":{}}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6987,"nodeType":"ExpressionStatement","src":"22694:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"22734:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"22748:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6997,"nodeType":"IfStatement","src":"22730:98:27","trueBody":{"id":6996,"nodeType":"Block","src":"22755:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"22811:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6991,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"22776:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6995,"nodeType":"RevertStatement","src":"22769:48:27"}]}}]},"documentation":{"id":6974,"nodeType":"StructuredDocumentation","src":"22293:312:27","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6999,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:27","nodeType":"FunctionDefinition","parameters":{"id":6977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6976,"mutability":"mutable","name":"value","nameLocation":"22635:5:27","nodeType":"VariableDeclaration","scope":6999,"src":"22628:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6975,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:27"},"returnParameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6979,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:27","nodeType":"VariableDeclaration","scope":6999,"src":"22665:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6978,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:27"},"scope":7586,"src":"22610:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7024,"nodeType":"Block","src":"23231:150:27","statements":[{"expression":{"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"23241:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"23261:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7008,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:27","typeDescriptions":{}}},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7013,"nodeType":"ExpressionStatement","src":"23241:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"23281:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"23295:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7023,"nodeType":"IfStatement","src":"23277:98:27","trueBody":{"id":7022,"nodeType":"Block","src":"23302:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"23358:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7017,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"23323:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7021,"nodeType":"RevertStatement","src":"23316:48:27"}]}}]},"documentation":{"id":7000,"nodeType":"StructuredDocumentation","src":"22840:312:27","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7025,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:27","nodeType":"FunctionDefinition","parameters":{"id":7003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7002,"mutability":"mutable","name":"value","nameLocation":"23182:5:27","nodeType":"VariableDeclaration","scope":7025,"src":"23175:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7001,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:27"},"returnParameters":{"id":7006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7005,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:27","nodeType":"VariableDeclaration","scope":7025,"src":"23212:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7004,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:27"},"scope":7586,"src":"23157:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7050,"nodeType":"Block","src":"23778:150:27","statements":[{"expression":{"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"23788:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"23808:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7034,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:27","typeDescriptions":{}}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7039,"nodeType":"ExpressionStatement","src":"23788:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"23828:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"23842:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7049,"nodeType":"IfStatement","src":"23824:98:27","trueBody":{"id":7048,"nodeType":"Block","src":"23849:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"23905:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7043,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"23870:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7047,"nodeType":"RevertStatement","src":"23863:48:27"}]}}]},"documentation":{"id":7026,"nodeType":"StructuredDocumentation","src":"23387:312:27","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7051,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:27","nodeType":"FunctionDefinition","parameters":{"id":7029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7028,"mutability":"mutable","name":"value","nameLocation":"23729:5:27","nodeType":"VariableDeclaration","scope":7051,"src":"23722:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7027,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:27"},"returnParameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7031,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:27","nodeType":"VariableDeclaration","scope":7051,"src":"23759:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7030,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:27"},"scope":7586,"src":"23704:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7076,"nodeType":"Block","src":"24325:150:27","statements":[{"expression":{"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"24335:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"24355:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7060,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:27","typeDescriptions":{}}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7065,"nodeType":"ExpressionStatement","src":"24335:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"24375:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"24389:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7075,"nodeType":"IfStatement","src":"24371:98:27","trueBody":{"id":7074,"nodeType":"Block","src":"24396:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"24452:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7069,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"24417:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7073,"nodeType":"RevertStatement","src":"24410:48:27"}]}}]},"documentation":{"id":7052,"nodeType":"StructuredDocumentation","src":"23934:312:27","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7077,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:27","nodeType":"FunctionDefinition","parameters":{"id":7055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7054,"mutability":"mutable","name":"value","nameLocation":"24276:5:27","nodeType":"VariableDeclaration","scope":7077,"src":"24269:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7053,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:27"},"returnParameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:27","nodeType":"VariableDeclaration","scope":7077,"src":"24306:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7056,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:27"},"scope":7586,"src":"24251:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7102,"nodeType":"Block","src":"24872:150:27","statements":[{"expression":{"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"24882:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"24902:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7086,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:27","typeDescriptions":{}}},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7091,"nodeType":"ExpressionStatement","src":"24882:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"24922:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"24936:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7101,"nodeType":"IfStatement","src":"24918:98:27","trueBody":{"id":7100,"nodeType":"Block","src":"24943:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"24999:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7095,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"24964:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7099,"nodeType":"RevertStatement","src":"24957:48:27"}]}}]},"documentation":{"id":7078,"nodeType":"StructuredDocumentation","src":"24481:312:27","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7103,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:27","nodeType":"FunctionDefinition","parameters":{"id":7081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7080,"mutability":"mutable","name":"value","nameLocation":"24823:5:27","nodeType":"VariableDeclaration","scope":7103,"src":"24816:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7079,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:27"},"returnParameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:27","nodeType":"VariableDeclaration","scope":7103,"src":"24853:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7082,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:27"},"scope":7586,"src":"24798:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7128,"nodeType":"Block","src":"25419:150:27","statements":[{"expression":{"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"25429:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"25449:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7112,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:27","typeDescriptions":{}}},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7117,"nodeType":"ExpressionStatement","src":"25429:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"25469:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"25483:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7127,"nodeType":"IfStatement","src":"25465:98:27","trueBody":{"id":7126,"nodeType":"Block","src":"25490:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"25546:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7121,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"25511:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7125,"nodeType":"RevertStatement","src":"25504:48:27"}]}}]},"documentation":{"id":7104,"nodeType":"StructuredDocumentation","src":"25028:312:27","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7129,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:27","nodeType":"FunctionDefinition","parameters":{"id":7107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7106,"mutability":"mutable","name":"value","nameLocation":"25370:5:27","nodeType":"VariableDeclaration","scope":7129,"src":"25363:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7105,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:27"},"returnParameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:27","nodeType":"VariableDeclaration","scope":7129,"src":"25400:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7108,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:27"},"scope":7586,"src":"25345:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7154,"nodeType":"Block","src":"25966:150:27","statements":[{"expression":{"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7137,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"25976:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"25996:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7138,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:27","typeDescriptions":{}}},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7143,"nodeType":"ExpressionStatement","src":"25976:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"26016:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"26030:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7153,"nodeType":"IfStatement","src":"26012:98:27","trueBody":{"id":7152,"nodeType":"Block","src":"26037:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"26093:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7147,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"26058:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7151,"nodeType":"RevertStatement","src":"26051:48:27"}]}}]},"documentation":{"id":7130,"nodeType":"StructuredDocumentation","src":"25575:312:27","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7155,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:27","nodeType":"FunctionDefinition","parameters":{"id":7133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7132,"mutability":"mutable","name":"value","nameLocation":"25917:5:27","nodeType":"VariableDeclaration","scope":7155,"src":"25910:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7131,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:27"},"returnParameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7135,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:27","nodeType":"VariableDeclaration","scope":7155,"src":"25947:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7134,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:27"},"scope":7586,"src":"25892:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7180,"nodeType":"Block","src":"26513:150:27","statements":[{"expression":{"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7163,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"26523:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"26543:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7164,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:27","typeDescriptions":{}}},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7169,"nodeType":"ExpressionStatement","src":"26523:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"26563:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"26577:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7179,"nodeType":"IfStatement","src":"26559:98:27","trueBody":{"id":7178,"nodeType":"Block","src":"26584:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"26640:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7173,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"26605:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7177,"nodeType":"RevertStatement","src":"26598:48:27"}]}}]},"documentation":{"id":7156,"nodeType":"StructuredDocumentation","src":"26122:312:27","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7181,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:27","nodeType":"FunctionDefinition","parameters":{"id":7159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7158,"mutability":"mutable","name":"value","nameLocation":"26464:5:27","nodeType":"VariableDeclaration","scope":7181,"src":"26457:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7157,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:27"},"returnParameters":{"id":7162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7161,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:27","nodeType":"VariableDeclaration","scope":7181,"src":"26494:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7160,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:27"},"scope":7586,"src":"26439:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7206,"nodeType":"Block","src":"27060:150:27","statements":[{"expression":{"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"27070:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"27090:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7190,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:27","typeDescriptions":{}}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7195,"nodeType":"ExpressionStatement","src":"27070:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"27110:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"27124:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7205,"nodeType":"IfStatement","src":"27106:98:27","trueBody":{"id":7204,"nodeType":"Block","src":"27131:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"27187:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7199,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"27152:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7203,"nodeType":"RevertStatement","src":"27145:48:27"}]}}]},"documentation":{"id":7182,"nodeType":"StructuredDocumentation","src":"26669:312:27","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7207,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:27","nodeType":"FunctionDefinition","parameters":{"id":7185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7184,"mutability":"mutable","name":"value","nameLocation":"27011:5:27","nodeType":"VariableDeclaration","scope":7207,"src":"27004:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7183,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:27"},"returnParameters":{"id":7188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7187,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:27","nodeType":"VariableDeclaration","scope":7207,"src":"27041:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7186,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:27"},"scope":7586,"src":"26986:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7232,"nodeType":"Block","src":"27607:150:27","statements":[{"expression":{"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7215,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"27617:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"27637:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7216,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:27","typeDescriptions":{}}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7221,"nodeType":"ExpressionStatement","src":"27617:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"27657:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"27671:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7231,"nodeType":"IfStatement","src":"27653:98:27","trueBody":{"id":7230,"nodeType":"Block","src":"27678:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"27734:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7225,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"27699:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7229,"nodeType":"RevertStatement","src":"27692:48:27"}]}}]},"documentation":{"id":7208,"nodeType":"StructuredDocumentation","src":"27216:312:27","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7233,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:27","nodeType":"FunctionDefinition","parameters":{"id":7211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7210,"mutability":"mutable","name":"value","nameLocation":"27558:5:27","nodeType":"VariableDeclaration","scope":7233,"src":"27551:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7209,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:27"},"returnParameters":{"id":7214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:27","nodeType":"VariableDeclaration","scope":7233,"src":"27588:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7212,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:27"},"scope":7586,"src":"27533:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7258,"nodeType":"Block","src":"28147:148:27","statements":[{"expression":{"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"28157:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"28176:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7242,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:27","typeDescriptions":{}}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7247,"nodeType":"ExpressionStatement","src":"28157:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"28196:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"28210:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7257,"nodeType":"IfStatement","src":"28192:97:27","trueBody":{"id":7256,"nodeType":"Block","src":"28217:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"28272:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7251,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"28238:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7255,"nodeType":"RevertStatement","src":"28231:47:27"}]}}]},"documentation":{"id":7234,"nodeType":"StructuredDocumentation","src":"27763:307:27","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7259,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:27","nodeType":"FunctionDefinition","parameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7236,"mutability":"mutable","name":"value","nameLocation":"28099:5:27","nodeType":"VariableDeclaration","scope":7259,"src":"28092:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7235,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:27"},"returnParameters":{"id":7240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:27","nodeType":"VariableDeclaration","scope":7259,"src":"28129:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7238,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:27"},"scope":7586,"src":"28075:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7284,"nodeType":"Block","src":"28685:148:27","statements":[{"expression":{"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"28695:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"28714:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7268,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:27","typeDescriptions":{}}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7273,"nodeType":"ExpressionStatement","src":"28695:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"28734:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"28748:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7283,"nodeType":"IfStatement","src":"28730:97:27","trueBody":{"id":7282,"nodeType":"Block","src":"28755:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"28810:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7277,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"28776:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7281,"nodeType":"RevertStatement","src":"28769:47:27"}]}}]},"documentation":{"id":7260,"nodeType":"StructuredDocumentation","src":"28301:307:27","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7285,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:27","nodeType":"FunctionDefinition","parameters":{"id":7263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7262,"mutability":"mutable","name":"value","nameLocation":"28637:5:27","nodeType":"VariableDeclaration","scope":7285,"src":"28630:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7261,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:27"},"returnParameters":{"id":7266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7265,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:27","nodeType":"VariableDeclaration","scope":7285,"src":"28667:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7264,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:27"},"scope":7586,"src":"28613:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7310,"nodeType":"Block","src":"29223:148:27","statements":[{"expression":{"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"29233:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"29252:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7294,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:27","typeDescriptions":{}}},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7299,"nodeType":"ExpressionStatement","src":"29233:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"29272:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"29286:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7309,"nodeType":"IfStatement","src":"29268:97:27","trueBody":{"id":7308,"nodeType":"Block","src":"29293:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"29348:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7303,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"29314:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7307,"nodeType":"RevertStatement","src":"29307:47:27"}]}}]},"documentation":{"id":7286,"nodeType":"StructuredDocumentation","src":"28839:307:27","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7311,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:27","nodeType":"FunctionDefinition","parameters":{"id":7289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7288,"mutability":"mutable","name":"value","nameLocation":"29175:5:27","nodeType":"VariableDeclaration","scope":7311,"src":"29168:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7287,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:27"},"returnParameters":{"id":7292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7291,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:27","nodeType":"VariableDeclaration","scope":7311,"src":"29205:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7290,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:27"},"scope":7586,"src":"29151:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7336,"nodeType":"Block","src":"29761:148:27","statements":[{"expression":{"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"29771:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"29790:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7320,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:27","typeDescriptions":{}}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7325,"nodeType":"ExpressionStatement","src":"29771:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7326,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"29810:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"29824:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7335,"nodeType":"IfStatement","src":"29806:97:27","trueBody":{"id":7334,"nodeType":"Block","src":"29831:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"29886:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7329,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"29852:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7333,"nodeType":"RevertStatement","src":"29845:47:27"}]}}]},"documentation":{"id":7312,"nodeType":"StructuredDocumentation","src":"29377:307:27","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7337,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:27","nodeType":"FunctionDefinition","parameters":{"id":7315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7314,"mutability":"mutable","name":"value","nameLocation":"29713:5:27","nodeType":"VariableDeclaration","scope":7337,"src":"29706:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7313,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:27"},"returnParameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:27","nodeType":"VariableDeclaration","scope":7337,"src":"29743:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7316,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:27"},"scope":7586,"src":"29689:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7362,"nodeType":"Block","src":"30299:148:27","statements":[{"expression":{"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"30309:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"30328:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7346,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:27","typeDescriptions":{}}},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7351,"nodeType":"ExpressionStatement","src":"30309:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"30348:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"30362:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7361,"nodeType":"IfStatement","src":"30344:97:27","trueBody":{"id":7360,"nodeType":"Block","src":"30369:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"30424:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7355,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"30390:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7359,"nodeType":"RevertStatement","src":"30383:47:27"}]}}]},"documentation":{"id":7338,"nodeType":"StructuredDocumentation","src":"29915:307:27","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7363,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:27","nodeType":"FunctionDefinition","parameters":{"id":7341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"mutability":"mutable","name":"value","nameLocation":"30251:5:27","nodeType":"VariableDeclaration","scope":7363,"src":"30244:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7339,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:27"},"returnParameters":{"id":7344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7343,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:27","nodeType":"VariableDeclaration","scope":7363,"src":"30281:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7342,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:27"},"scope":7586,"src":"30227:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7388,"nodeType":"Block","src":"30837:148:27","statements":[{"expression":{"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"30847:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"30866:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7372,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:27","typeDescriptions":{}}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7377,"nodeType":"ExpressionStatement","src":"30847:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7378,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"30886:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"30900:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7387,"nodeType":"IfStatement","src":"30882:97:27","trueBody":{"id":7386,"nodeType":"Block","src":"30907:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"30962:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7381,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"30928:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7385,"nodeType":"RevertStatement","src":"30921:47:27"}]}}]},"documentation":{"id":7364,"nodeType":"StructuredDocumentation","src":"30453:307:27","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7389,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:27","nodeType":"FunctionDefinition","parameters":{"id":7367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7366,"mutability":"mutable","name":"value","nameLocation":"30789:5:27","nodeType":"VariableDeclaration","scope":7389,"src":"30782:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7365,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:27"},"returnParameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:27","nodeType":"VariableDeclaration","scope":7389,"src":"30819:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7368,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:27"},"scope":7586,"src":"30765:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7414,"nodeType":"Block","src":"31375:148:27","statements":[{"expression":{"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"31385:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"31404:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7398,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:27","typeDescriptions":{}}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7403,"nodeType":"ExpressionStatement","src":"31385:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"31424:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"31438:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7413,"nodeType":"IfStatement","src":"31420:97:27","trueBody":{"id":7412,"nodeType":"Block","src":"31445:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"31500:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7407,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"31466:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7411,"nodeType":"RevertStatement","src":"31459:47:27"}]}}]},"documentation":{"id":7390,"nodeType":"StructuredDocumentation","src":"30991:307:27","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7415,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:27","nodeType":"FunctionDefinition","parameters":{"id":7393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7392,"mutability":"mutable","name":"value","nameLocation":"31327:5:27","nodeType":"VariableDeclaration","scope":7415,"src":"31320:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7391,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:27"},"returnParameters":{"id":7396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7395,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:27","nodeType":"VariableDeclaration","scope":7415,"src":"31357:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7394,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:27"},"scope":7586,"src":"31303:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7440,"nodeType":"Block","src":"31913:148:27","statements":[{"expression":{"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"31923:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"31942:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7424,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:27","typeDescriptions":{}}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7429,"nodeType":"ExpressionStatement","src":"31923:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7430,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"31962:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"31976:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7439,"nodeType":"IfStatement","src":"31958:97:27","trueBody":{"id":7438,"nodeType":"Block","src":"31983:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"32038:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7433,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"32004:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7437,"nodeType":"RevertStatement","src":"31997:47:27"}]}}]},"documentation":{"id":7416,"nodeType":"StructuredDocumentation","src":"31529:307:27","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7441,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:27","nodeType":"FunctionDefinition","parameters":{"id":7419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7418,"mutability":"mutable","name":"value","nameLocation":"31865:5:27","nodeType":"VariableDeclaration","scope":7441,"src":"31858:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7417,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:27"},"returnParameters":{"id":7422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:27","nodeType":"VariableDeclaration","scope":7441,"src":"31895:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7420,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:27"},"scope":7586,"src":"31841:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7466,"nodeType":"Block","src":"32451:148:27","statements":[{"expression":{"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"32461:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"32480:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7450,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:27","typeDescriptions":{}}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7455,"nodeType":"ExpressionStatement","src":"32461:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7456,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"32500:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"32514:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7465,"nodeType":"IfStatement","src":"32496:97:27","trueBody":{"id":7464,"nodeType":"Block","src":"32521:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"32576:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7459,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"32542:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7463,"nodeType":"RevertStatement","src":"32535:47:27"}]}}]},"documentation":{"id":7442,"nodeType":"StructuredDocumentation","src":"32067:307:27","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:27","nodeType":"FunctionDefinition","parameters":{"id":7445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7444,"mutability":"mutable","name":"value","nameLocation":"32403:5:27","nodeType":"VariableDeclaration","scope":7467,"src":"32396:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7443,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:27"},"returnParameters":{"id":7448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:27","nodeType":"VariableDeclaration","scope":7467,"src":"32433:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7446,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:27"},"scope":7586,"src":"32379:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7492,"nodeType":"Block","src":"32989:148:27","statements":[{"expression":{"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"32999:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"33018:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7476,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:27","typeDescriptions":{}}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7481,"nodeType":"ExpressionStatement","src":"32999:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"33038:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"33052:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7491,"nodeType":"IfStatement","src":"33034:97:27","trueBody":{"id":7490,"nodeType":"Block","src":"33059:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"33114:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7485,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"33080:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7489,"nodeType":"RevertStatement","src":"33073:47:27"}]}}]},"documentation":{"id":7468,"nodeType":"StructuredDocumentation","src":"32605:307:27","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7493,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:27","nodeType":"FunctionDefinition","parameters":{"id":7471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7470,"mutability":"mutable","name":"value","nameLocation":"32941:5:27","nodeType":"VariableDeclaration","scope":7493,"src":"32934:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7469,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:27"},"returnParameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:27","nodeType":"VariableDeclaration","scope":7493,"src":"32971:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7472,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:27"},"scope":7586,"src":"32917:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7518,"nodeType":"Block","src":"33527:148:27","statements":[{"expression":{"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"33537:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"33556:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7502,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:27","typeDescriptions":{}}},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7507,"nodeType":"ExpressionStatement","src":"33537:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"33576:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"33590:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7517,"nodeType":"IfStatement","src":"33572:97:27","trueBody":{"id":7516,"nodeType":"Block","src":"33597:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"33652:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7511,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"33618:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7515,"nodeType":"RevertStatement","src":"33611:47:27"}]}}]},"documentation":{"id":7494,"nodeType":"StructuredDocumentation","src":"33143:307:27","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7519,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:27","nodeType":"FunctionDefinition","parameters":{"id":7497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7496,"mutability":"mutable","name":"value","nameLocation":"33479:5:27","nodeType":"VariableDeclaration","scope":7519,"src":"33472:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7495,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:27"},"returnParameters":{"id":7500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7499,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:27","nodeType":"VariableDeclaration","scope":7519,"src":"33509:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7498,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:27"},"scope":7586,"src":"33455:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7544,"nodeType":"Block","src":"34058:146:27","statements":[{"expression":{"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"34068:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"34086:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7528,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:27","typeDescriptions":{}}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7533,"nodeType":"ExpressionStatement","src":"34068:24:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"34106:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"34120:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7543,"nodeType":"IfStatement","src":"34102:96:27","trueBody":{"id":7542,"nodeType":"Block","src":"34127:71:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"34181:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7537,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"34148:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7541,"nodeType":"RevertStatement","src":"34141:46:27"}]}}]},"documentation":{"id":7520,"nodeType":"StructuredDocumentation","src":"33681:302:27","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7545,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:27","nodeType":"FunctionDefinition","parameters":{"id":7523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7522,"mutability":"mutable","name":"value","nameLocation":"34011:5:27","nodeType":"VariableDeclaration","scope":7545,"src":"34004:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7521,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:27"},"returnParameters":{"id":7526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7525,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:27","nodeType":"VariableDeclaration","scope":7545,"src":"34041:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7524,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:27"},"scope":7586,"src":"33988:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7574,"nodeType":"Block","src":"34444:250:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"34557:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7557,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7556,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:27","memberName":"max","nodeType":"MemberAccess","src":"34573:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7554,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:27","typeDescriptions":{}}},"id":7561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7568,"nodeType":"IfStatement","src":"34553:105:27","trueBody":{"id":7567,"nodeType":"Block","src":"34592:66:27","statements":[{"errorCall":{"arguments":[{"id":7564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"34641:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7563,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"34613:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7566,"nodeType":"RevertStatement","src":"34606:41:27"}]}},{"expression":{"arguments":[{"id":7571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"34681:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7569,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:27","typeDescriptions":{}}},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7552,"id":7573,"nodeType":"Return","src":"34667:20:27"}]},"documentation":{"id":7546,"nodeType":"StructuredDocumentation","src":"34210:165:27","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7575,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:27","nodeType":"FunctionDefinition","parameters":{"id":7549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7548,"mutability":"mutable","name":"value","nameLocation":"34406:5:27","nodeType":"VariableDeclaration","scope":7575,"src":"34398:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7547,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:27"},"returnParameters":{"id":7552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7575,"src":"34436:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7550,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:27"},"scope":7586,"src":"34380:314:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7584,"nodeType":"Block","src":"34853:87:27","statements":[{"AST":{"nativeSrc":"34888:46:27","nodeType":"YulBlock","src":"34888:46:27","statements":[{"nativeSrc":"34902:22:27","nodeType":"YulAssignment","src":"34902:22:27","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:27","nodeType":"YulIdentifier","src":"34921:1:27"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:27","nodeType":"YulIdentifier","src":"34914:6:27"},"nativeSrc":"34914:9:27","nodeType":"YulFunctionCall","src":"34914:9:27"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:27","nodeType":"YulIdentifier","src":"34907:6:27"},"nativeSrc":"34907:17:27","nodeType":"YulFunctionCall","src":"34907:17:27"},"variableNames":[{"name":"u","nativeSrc":"34902:1:27","nodeType":"YulIdentifier","src":"34902:1:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7578,"isOffset":false,"isSlot":false,"src":"34921:1:27","valueSize":1},{"declaration":7581,"isOffset":false,"isSlot":false,"src":"34902:1:27","valueSize":1}],"flags":["memory-safe"],"id":7583,"nodeType":"InlineAssembly","src":"34863:71:27"}]},"documentation":{"id":7576,"nodeType":"StructuredDocumentation","src":"34700:90:27","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7585,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:27","nodeType":"FunctionDefinition","parameters":{"id":7579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7578,"mutability":"mutable","name":"b","nameLocation":"34816:1:27","nodeType":"VariableDeclaration","scope":7585,"src":"34811:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7577,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:27"},"returnParameters":{"id":7582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7581,"mutability":"mutable","name":"u","nameLocation":"34850:1:27","nodeType":"VariableDeclaration","scope":7585,"src":"34842:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7580,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:27"},"scope":7586,"src":"34795:145:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7587,"src":"769:34173:27","usedErrors":[5831,5836,5843,5848],"usedEvents":[]}],"src":"192:34751:27"},"id":27},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7586],"SignedMath":[7730]},"id":7731,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7588,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7590,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7731,"sourceUnit":7587,"src":"135:40:28","symbolAliases":[{"foreign":{"id":7589,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"143:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7591,"nodeType":"StructuredDocumentation","src":"177:80:28","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7730,"linearizedBaseContracts":[7730],"name":"SignedMath","nameLocation":"266:10:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":7620,"nodeType":"Block","src":"746:215:28","statements":[{"id":7619,"nodeType":"UncheckedBlock","src":"756:199:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"894:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"900:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"904:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7612,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"932:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7610,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"916:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7586_$","typeString":"type(library SafeCast)"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7585,"src":"916:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7608,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:28","typeDescriptions":{}}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7602,"id":7618,"nodeType":"Return","src":"887:57:28"}]}]},"documentation":{"id":7592,"nodeType":"StructuredDocumentation","src":"283:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7621,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:28","nodeType":"FunctionDefinition","parameters":{"id":7599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7594,"mutability":"mutable","name":"condition","nameLocation":"684:9:28","nodeType":"VariableDeclaration","scope":7621,"src":"679:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7593,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7596,"mutability":"mutable","name":"a","nameLocation":"702:1:28","nodeType":"VariableDeclaration","scope":7621,"src":"695:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7595,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7598,"mutability":"mutable","name":"b","nameLocation":"712:1:28","nodeType":"VariableDeclaration","scope":7621,"src":"705:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7597,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:28"},"returnParameters":{"id":7602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7621,"src":"738:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7600,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:28"},"scope":7730,"src":"662:299:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7639,"nodeType":"Block","src":"1102:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7632,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"1127:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7633,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"1131:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"1134:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7636,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"1137:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7631,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"1119:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7630,"id":7638,"nodeType":"Return","src":"1112:27:28"}]},"documentation":{"id":7622,"nodeType":"StructuredDocumentation","src":"967:66:28","text":" @dev Returns the largest of two signed numbers."},"id":7640,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:28","nodeType":"FunctionDefinition","parameters":{"id":7627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7624,"mutability":"mutable","name":"a","nameLocation":"1058:1:28","nodeType":"VariableDeclaration","scope":7640,"src":"1051:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7623,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7626,"mutability":"mutable","name":"b","nameLocation":"1068:1:28","nodeType":"VariableDeclaration","scope":7640,"src":"1061:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7625,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:28"},"returnParameters":{"id":7630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7640,"src":"1094:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7628,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:28"},"scope":7730,"src":"1038:108:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7658,"nodeType":"Block","src":"1288:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"1313:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7652,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"1317:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"1320:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"1323:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7650,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"1305:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7649,"id":7657,"nodeType":"Return","src":"1298:27:28"}]},"documentation":{"id":7641,"nodeType":"StructuredDocumentation","src":"1152:67:28","text":" @dev Returns the smallest of two signed numbers."},"id":7659,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:28","nodeType":"FunctionDefinition","parameters":{"id":7646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7643,"mutability":"mutable","name":"a","nameLocation":"1244:1:28","nodeType":"VariableDeclaration","scope":7659,"src":"1237:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7642,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7645,"mutability":"mutable","name":"b","nameLocation":"1254:1:28","nodeType":"VariableDeclaration","scope":7659,"src":"1247:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7644,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:28"},"returnParameters":{"id":7649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7659,"src":"1280:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7647,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:28"},"scope":7730,"src":"1224:108:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7702,"nodeType":"Block","src":"1537:162:28","statements":[{"assignments":[7670],"declarations":[{"constant":false,"id":7670,"mutability":"mutable","name":"x","nameLocation":"1606:1:28","nodeType":"VariableDeclaration","scope":7702,"src":"1599:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7669,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7683,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7671,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"1611:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7672,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"1615:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7675,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"1622:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7676,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"1626:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:28"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7684,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"1651:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7689,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"1671:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:28","typeDescriptions":{}}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7685,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:28","typeDescriptions":{}}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"1685:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7695,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"1689:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7668,"id":7701,"nodeType":"Return","src":"1644:48:28"}]},"documentation":{"id":7660,"nodeType":"StructuredDocumentation","src":"1338:126:28","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7703,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:28","nodeType":"FunctionDefinition","parameters":{"id":7665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7662,"mutability":"mutable","name":"a","nameLocation":"1493:1:28","nodeType":"VariableDeclaration","scope":7703,"src":"1486:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7661,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7664,"mutability":"mutable","name":"b","nameLocation":"1503:1:28","nodeType":"VariableDeclaration","scope":7703,"src":"1496:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7663,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:28"},"returnParameters":{"id":7668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7703,"src":"1529:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7666,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:28"},"scope":7730,"src":"1469:230:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7728,"nodeType":"Block","src":"1843:767:28","statements":[{"id":7727,"nodeType":"UncheckedBlock","src":"1853:751:28","statements":[{"assignments":[7712],"declarations":[{"constant":false,"id":7712,"mutability":"mutable","name":"mask","nameLocation":"2424:4:28","nodeType":"VariableDeclaration","scope":7727,"src":"2417:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7711,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7716,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7713,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"2431:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7719,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"2576:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7720,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"2580:4:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7723,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"2588:4:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:28","typeDescriptions":{}}},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7710,"id":7726,"nodeType":"Return","src":"2560:33:28"}]}]},"documentation":{"id":7704,"nodeType":"StructuredDocumentation","src":"1705:78:28","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7729,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:28","nodeType":"FunctionDefinition","parameters":{"id":7707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7706,"mutability":"mutable","name":"n","nameLocation":"1808:1:28","nodeType":"VariableDeclaration","scope":7729,"src":"1801:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7705,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:28"},"returnParameters":{"id":7710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7729,"src":"1834:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:28"},"scope":7730,"src":"1788:822:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7731,"src":"258:2354:28","usedErrors":[],"usedEvents":[]}],"src":"109:2504:28"},"id":28},"contracts/NFTCMSvDigitalSignature.sol":{"ast":{"absolutePath":"contracts/NFTCMSvDigitalSignature.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"Address":[3194],"ContextUpgradeable":[1924],"ECDSA":[4129],"ERC165Upgradeable":[2140],"ERC1967Utils":[2685],"ERC721Upgradeable":[1878],"ERC721Utils":[2935],"Errors":[3216],"IAccessControl":[2223],"IERC165":[4215],"IERC1822Proxiable":[2254],"IERC721":[2812],"IERC721Errors":[2344],"IERC721Metadata":[2858],"Initializable":[616],"MessageHashUtils":[4203],"NFTCMS":[8362],"PausableUpgradeable":[2100],"ReentrancyGuard":[3337],"Strings":[3781],"UUPSUpgradeable":[798]},"id":8363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7732,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:29"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","id":7733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8363,"sourceUnit":1879,"src":"61:80:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":7734,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8363,"sourceUnit":363,"src":"143:81:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":7735,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8363,"sourceUnit":2101,"src":"226:75:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":7736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8363,"sourceUnit":617,"src":"303:75:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":7737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8363,"sourceUnit":799,"src":"380:77:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8363,"sourceUnit":3338,"src":"459:59:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":7739,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8363,"sourceUnit":4204,"src":"568:73:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8363,"sourceUnit":4130,"src":"643:62:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":7741,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8363,"sourceUnit":3195,"src":"707:51:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7742,"name":"Initializable","nameLocations":["844:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"844:13:29"},"id":7743,"nodeType":"InheritanceSpecifier","src":"844:13:29"},{"baseName":{"id":7744,"name":"ERC721Upgradeable","nameLocations":["865:17:29"],"nodeType":"IdentifierPath","referencedDeclaration":1878,"src":"865:17:29"},"id":7745,"nodeType":"InheritanceSpecifier","src":"865:17:29"},{"baseName":{"id":7746,"name":"AccessControlUpgradeable","nameLocations":["890:24:29"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"890:24:29"},"id":7747,"nodeType":"InheritanceSpecifier","src":"890:24:29"},{"baseName":{"id":7748,"name":"PausableUpgradeable","nameLocations":["922:19:29"],"nodeType":"IdentifierPath","referencedDeclaration":2100,"src":"922:19:29"},"id":7749,"nodeType":"InheritanceSpecifier","src":"922:19:29"},{"baseName":{"id":7750,"name":"UUPSUpgradeable","nameLocations":["948:15:29"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"948:15:29"},"id":7751,"nodeType":"InheritanceSpecifier","src":"948:15:29"},{"baseName":{"id":7752,"name":"ReentrancyGuard","nameLocations":["970:15:29"],"nodeType":"IdentifierPath","referencedDeclaration":3337,"src":"970:15:29"},"id":7753,"nodeType":"InheritanceSpecifier","src":"970:15:29"}],"canonicalName":"NFTCMS","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8362,"linearizedBaseContracts":[8362,3337,798,2254,2100,362,1878,2344,2858,2812,2140,4215,2223,1924,616],"name":"NFTCMS","nameLocation":"828:6:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7756,"libraryName":{"id":7754,"name":"ECDSA","nameLocations":["1004:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":4129,"src":"1004:5:29"},"nodeType":"UsingForDirective","src":"998:24:29","typeName":{"id":7755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1014:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":7759,"libraryName":{"id":7757,"name":"Address","nameLocations":["1034:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":3194,"src":"1034:7:29"},"nodeType":"UsingForDirective","src":"1028:26:29","typeName":{"id":7758,"name":"address","nodeType":"ElementaryTypeName","src":"1046:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":7762,"mutability":"mutable","name":"_tokenId","nameLocation":"1082:8:29","nodeType":"VariableDeclaration","scope":8362,"src":"1066:26:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1066:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":7761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1091:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"body":{"id":7768,"nodeType":"Block","src":"1138:29:29","statements":[{"expression":{"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1149:10:29","subExpression":{"id":7765,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"1149:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7767,"nodeType":"ExpressionStatement","src":"1149:10:29"}]},"id":7769,"implemented":true,"kind":"function","modifiers":[],"name":"incrementTokenId","nameLocation":"1110:16:29","nodeType":"FunctionDefinition","parameters":{"id":7763,"nodeType":"ParameterList","parameters":[],"src":"1126:2:29"},"returnParameters":{"id":7764,"nodeType":"ParameterList","parameters":[],"src":"1138:0:29"},"scope":8362,"src":"1101:66:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7776,"nodeType":"Block","src":"1235:34:29","statements":[{"expression":{"id":7774,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"1253:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7773,"id":7775,"nodeType":"Return","src":"1246:15:29"}]},"id":7777,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTokenId","nameLocation":"1184:17:29","nodeType":"FunctionDefinition","parameters":{"id":7770,"nodeType":"ParameterList","parameters":[],"src":"1201:2:29"},"returnParameters":{"id":7773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7777,"src":"1226:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1225:9:29"},"scope":8362,"src":"1175:94:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"functionSelector":"ec87621c","id":7782,"mutability":"constant","name":"MANAGER_ROLE","nameLocation":"1326:12:29","nodeType":"VariableDeclaration","scope":8362,"src":"1302:64:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1302:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d414e414745525f524f4c45","id":7780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1351:14:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08","typeString":"literal_string \"MANAGER_ROLE\""},"value":"MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08","typeString":"literal_string \"MANAGER_ROLE\""}],"id":7779,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1341:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1341:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"1b929c21","id":7787,"mutability":"constant","name":"INSTITUTION_ROLE","nameLocation":"1397:16:29","nodeType":"VariableDeclaration","scope":8362,"src":"1373:72:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1373:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"494e535449545554494f4e5f524f4c45","id":7785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1426:18:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d1","typeString":"literal_string \"INSTITUTION_ROLE\""},"value":"INSTITUTION_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d1","typeString":"literal_string \"INSTITUTION_ROLE\""}],"id":7784,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1416:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1416:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"NFTCMS.Credential","id":7799,"members":[{"constant":false,"id":7789,"mutability":"mutable","name":"tokenId","nameLocation":"1491:7:29","nodeType":"VariableDeclaration","scope":7799,"src":"1483:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7791,"mutability":"mutable","name":"ipfsURI","nameLocation":"1516:7:29","nodeType":"VariableDeclaration","scope":7799,"src":"1509:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7790,"name":"string","nodeType":"ElementaryTypeName","src":"1509:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7794,"mutability":"mutable","name":"status","nameLocation":"1551:6:29","nodeType":"VariableDeclaration","scope":7799,"src":"1534:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"},"typeName":{"id":7793,"nodeType":"UserDefinedTypeName","pathNode":{"id":7792,"name":"CredentialStatus","nameLocations":["1534:16:29"],"nodeType":"IdentifierPath","referencedDeclaration":7802,"src":"1534:16:29"},"referencedDeclaration":7802,"src":"1534:16:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"visibility":"internal"},{"constant":false,"id":7796,"mutability":"mutable","name":"signature","nameLocation":"1574:9:29","nodeType":"VariableDeclaration","scope":7799,"src":"1568:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7795,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7798,"mutability":"mutable","name":"signer","nameLocation":"1602:6:29","nodeType":"VariableDeclaration","scope":7799,"src":"1594:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7797,"name":"address","nodeType":"ElementaryTypeName","src":"1594:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Credential","nameLocation":"1461:10:29","nodeType":"StructDefinition","scope":8362,"src":"1454:162:29","visibility":"public"},{"canonicalName":"NFTCMS.CredentialStatus","id":7802,"members":[{"id":7800,"name":"VALID","nameLocation":"1657:5:29","nodeType":"EnumValue","src":"1657:5:29"},{"id":7801,"name":"REVOKED","nameLocation":"1673:7:29","nodeType":"EnumValue","src":"1673:7:29"}],"name":"CredentialStatus","nameLocation":"1629:16:29","nodeType":"EnumDefinition","src":"1624:83:29"},{"constant":false,"functionSelector":"e0574e3f","id":7807,"mutability":"mutable","name":"credentials","nameLocation":"1797:11:29","nodeType":"VariableDeclaration","scope":8362,"src":"1759:49:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Credential_$7799_storage_$","typeString":"mapping(uint256 => struct NFTCMS.Credential)"},"typeName":{"id":7806,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1759:30:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Credential_$7799_storage_$","typeString":"mapping(uint256 => struct NFTCMS.Credential)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7805,"nodeType":"UserDefinedTypeName","pathNode":{"id":7804,"name":"Credential","nameLocations":["1778:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":7799,"src":"1778:10:29"},"referencedDeclaration":7799,"src":"1778:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage_ptr","typeString":"struct NFTCMS.Credential"}}},"visibility":"public"},{"constant":false,"id":7811,"mutability":"mutable","name":"_ipfsURIs","nameLocation":"1850:9:29","nodeType":"VariableDeclaration","scope":8362,"src":"1815:44:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":7810,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7808,"name":"string","nodeType":"ElementaryTypeName","src":"1823:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1815:26:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1833:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"d3bd681d2fe91fda330d69feca5dc6a668f4862360861444de295f833e351053","id":7819,"name":"CredentialIssued","nameLocation":"1947:16:29","nodeType":"EventDefinition","parameters":{"id":7818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7813,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1990:7:29","nodeType":"VariableDeclaration","scope":7819,"src":"1974:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1974:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7815,"indexed":true,"mutability":"mutable","name":"student","nameLocation":"2024:7:29","nodeType":"VariableDeclaration","scope":7819,"src":"2008:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7814,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7817,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"2058:11:29","nodeType":"VariableDeclaration","scope":7819,"src":"2042:27:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7816,"name":"address","nodeType":"ElementaryTypeName","src":"2042:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1963:113:29"},"src":"1941:136:29"},{"anonymous":false,"eventSelector":"2840fba00bdcda6213ac8f2df6bd0eaa93c78b71e752268cef89210a1705e4ef","id":7831,"name":"CredentialStatusChanged","nameLocation":"2091:23:29","nodeType":"EventDefinition","parameters":{"id":7830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7821,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2141:7:29","nodeType":"VariableDeclaration","scope":7831,"src":"2125:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7820,"name":"uint256","nodeType":"ElementaryTypeName","src":"2125:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7824,"indexed":false,"mutability":"mutable","name":"previousStatus","nameLocation":"2177:14:29","nodeType":"VariableDeclaration","scope":7831,"src":"2160:31:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"},"typeName":{"id":7823,"nodeType":"UserDefinedTypeName","pathNode":{"id":7822,"name":"CredentialStatus","nameLocations":["2160:16:29"],"nodeType":"IdentifierPath","referencedDeclaration":7802,"src":"2160:16:29"},"referencedDeclaration":7802,"src":"2160:16:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"visibility":"internal"},{"constant":false,"id":7827,"indexed":false,"mutability":"mutable","name":"newStatus","nameLocation":"2220:9:29","nodeType":"VariableDeclaration","scope":7831,"src":"2203:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"},"typeName":{"id":7826,"nodeType":"UserDefinedTypeName","pathNode":{"id":7825,"name":"CredentialStatus","nameLocations":["2203:16:29"],"nodeType":"IdentifierPath","referencedDeclaration":7802,"src":"2203:16:29"},"referencedDeclaration":7802,"src":"2203:16:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"visibility":"internal"},{"constant":false,"id":7829,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"2248:6:29","nodeType":"VariableDeclaration","scope":7831,"src":"2241:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7828,"name":"string","nodeType":"ElementaryTypeName","src":"2241:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2114:147:29"},"src":"2085:177:29"},{"anonymous":false,"eventSelector":"88fae95b509ff46ec752cd32b3c9e319fa7a8dd9aefc64fb91c1aa6ba4e88897","id":7835,"name":"InstitutionRegistered","nameLocation":"2280:21:29","nodeType":"EventDefinition","parameters":{"id":7834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7833,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"2318:11:29","nodeType":"VariableDeclaration","scope":7835,"src":"2302:27:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7832,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2301:29:29"},"src":"2274:57:29"},{"anonymous":false,"eventSelector":"594022ae30f535100bd2169ab77ab37c1dba3d7e89d04bd6bf17b121a3ca7c25","id":7839,"name":"ManagerRegistered","nameLocation":"2343:17:29","nodeType":"EventDefinition","parameters":{"id":7838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7837,"indexed":true,"mutability":"mutable","name":"manager","nameLocation":"2377:7:29","nodeType":"VariableDeclaration","scope":7839,"src":"2361:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7836,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2360:25:29"},"src":"2337:49:29"},{"anonymous":false,"eventSelector":"2a65d71ddd7e0fc167105c9d6a51832464fca91d67b3d8871c2ed3d1fab22787","id":7845,"name":"ManagerRevoked","nameLocation":"2400:14:29","nodeType":"EventDefinition","parameters":{"id":7844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"indexed":true,"mutability":"mutable","name":"manager","nameLocation":"2441:7:29","nodeType":"VariableDeclaration","scope":7845,"src":"2425:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7840,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7843,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"2466:6:29","nodeType":"VariableDeclaration","scope":7845,"src":"2459:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7842,"name":"string","nodeType":"ElementaryTypeName","src":"2459:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2414:65:29"},"src":"2394:86:29"},{"anonymous":false,"eventSelector":"ac234b0e1c8c07e26dc3f3271849babac0394b68f7d0e15f1b8d9ea28d482dfd","id":7851,"name":"InstitutionRevoked","nameLocation":"2494:18:29","nodeType":"EventDefinition","parameters":{"id":7850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7847,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"2539:11:29","nodeType":"VariableDeclaration","scope":7851,"src":"2523:27:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7846,"name":"address","nodeType":"ElementaryTypeName","src":"2523:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7849,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"2568:6:29","nodeType":"VariableDeclaration","scope":7851,"src":"2561:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7848,"name":"string","nodeType":"ElementaryTypeName","src":"2561:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2512:69:29"},"src":"2488:94:29"},{"body":{"id":7858,"nodeType":"Block","src":"2658:41:29","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7855,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"2669:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2669:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7857,"nodeType":"ExpressionStatement","src":"2669:22:29"}]},"documentation":{"id":7852,"nodeType":"StructuredDocumentation","src":"2590:48:29","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":7859,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7853,"nodeType":"ParameterList","parameters":[],"src":"2655:2:29"},"returnParameters":{"id":7854,"nodeType":"ParameterList","parameters":[],"src":"2658:0:29"},"scope":8362,"src":"2644:55:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7884,"nodeType":"Block","src":"2748:311:29","statements":[{"expression":{"arguments":[{"hexValue":"41636164656d69632043726564656e7469616c73","id":7865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2773:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a76c83709106344156831718337e02916d39b96998026b68475316e9c6eb94c","typeString":"literal_string \"Academic Credentials\""},"value":"Academic Credentials"},{"hexValue":"4143524544","id":7866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2797:7:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_40c5e9cbc59df77db14ecd5f57751d6990fc8750db1fb91d4080bc330bc150c0","typeString":"literal_string \"ACRED\""},"value":"ACRED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1a76c83709106344156831718337e02916d39b96998026b68475316e9c6eb94c","typeString":"literal_string \"Academic Credentials\""},{"typeIdentifier":"t_stringliteral_40c5e9cbc59df77db14ecd5f57751d6990fc8750db1fb91d4080bc330bc150c0","typeString":"literal_string \"ACRED\""}],"id":7864,"name":"__ERC721_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2759:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2759:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7868,"nodeType":"ExpressionStatement","src":"2759:46:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7869,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2816:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2816:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7871,"nodeType":"ExpressionStatement","src":"2816:22:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7872,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"2849:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7874,"nodeType":"ExpressionStatement","src":"2849:17:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7875,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"2877:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7877,"nodeType":"ExpressionStatement","src":"2877:24:29"},{"expression":{"arguments":[{"id":7879,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"2923:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7880,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2943:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2947:6:29","memberName":"sender","nodeType":"MemberAccess","src":"2943:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7878,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2912:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7883,"nodeType":"ExpressionStatement","src":"2912:42:29"}]},"functionSelector":"8129fc1c","id":7885,"implemented":true,"kind":"function","modifiers":[{"id":7862,"kind":"modifierInvocation","modifierName":{"id":7861,"name":"initializer","nameLocations":["2736:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":470,"src":"2736:11:29"},"nodeType":"ModifierInvocation","src":"2736:11:29"}],"name":"initialize","nameLocation":"2716:10:29","nodeType":"FunctionDefinition","parameters":{"id":7860,"nodeType":"ParameterList","parameters":[],"src":"2726:2:29"},"returnParameters":{"id":7863,"nodeType":"ParameterList","parameters":[],"src":"2748:0:29"},"scope":8362,"src":"2707:352:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7894,"nodeType":"Block","src":"3105:73:29","statements":[{"expression":{"arguments":[{"id":7888,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"3127:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3147:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3151:6:29","memberName":"sender","nodeType":"MemberAccess","src":"3147:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7887,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"3116:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7892,"nodeType":"ExpressionStatement","src":"3116:42:29"},{"id":7893,"nodeType":"PlaceholderStatement","src":"3169:1:29"}]},"id":7895,"name":"onlyAdmin","nameLocation":"3094:9:29","nodeType":"ModifierDefinition","parameters":{"id":7886,"nodeType":"ParameterList","parameters":[],"src":"3103:2:29"},"src":"3085:93:29","virtual":false,"visibility":"internal"},{"body":{"id":7904,"nodeType":"Block","src":"3209:67:29","statements":[{"expression":{"arguments":[{"id":7898,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"3231:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3245:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3249:6:29","memberName":"sender","nodeType":"MemberAccess","src":"3245:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7897,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"3220:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3220:36:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7902,"nodeType":"ExpressionStatement","src":"3220:36:29"},{"id":7903,"nodeType":"PlaceholderStatement","src":"3267:1:29"}]},"id":7905,"name":"onlyManager","nameLocation":"3195:11:29","nodeType":"ModifierDefinition","parameters":{"id":7896,"nodeType":"ParameterList","parameters":[],"src":"3206:2:29"},"src":"3186:90:29","virtual":false,"visibility":"internal"},{"body":{"id":7914,"nodeType":"Block","src":"3311:71:29","statements":[{"expression":{"arguments":[{"id":7908,"name":"INSTITUTION_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"3333:16:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3351:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3355:6:29","memberName":"sender","nodeType":"MemberAccess","src":"3351:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7907,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"3322:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3322:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7912,"nodeType":"ExpressionStatement","src":"3322:40:29"},{"id":7913,"nodeType":"PlaceholderStatement","src":"3373:1:29"}]},"id":7915,"name":"onlyInstitution","nameLocation":"3293:15:29","nodeType":"ModifierDefinition","parameters":{"id":7906,"nodeType":"ParameterList","parameters":[],"src":"3308:2:29"},"src":"3284:98:29","virtual":false,"visibility":"internal"},{"body":{"id":7958,"nodeType":"Block","src":"3470:361:29","statements":[{"expression":{"arguments":[{"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3489:32:29","subExpression":{"arguments":[{"id":7924,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"3498:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7925,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"3512:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7923,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3490:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4164647265737320697320616c72656164792061206d616e61676572","id":7928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3523:30:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049","typeString":"literal_string \"Address is already a manager\""},"value":"Address is already a manager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049","typeString":"literal_string \"Address is already a manager\""}],"id":7922,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3481:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:73:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7930,"nodeType":"ExpressionStatement","src":"3481:73:29"},{"expression":{"arguments":[{"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3573:36:29","subExpression":{"arguments":[{"id":7933,"name":"INSTITUTION_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"3582:16:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7934,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"3600:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7932,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3574:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4164647265737320697320616c726561647920616e20696e737469747574696f6e","id":7937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:35:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1","typeString":"literal_string \"Address is already an institution\""},"value":"Address is already an institution"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1","typeString":"literal_string \"Address is already an institution\""}],"id":7931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3565:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:82:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7939,"nodeType":"ExpressionStatement","src":"3565:82:29"},{"expression":{"arguments":[{"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3666:38:29","subExpression":{"arguments":[{"id":7942,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"3675:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7943,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"3695:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7941,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3667:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4164647265737320697320616c726561647920616e2061646d696e","id":7946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3706:29:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3","typeString":"literal_string \"Address is already an admin\""},"value":"Address is already an admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3","typeString":"literal_string \"Address is already an admin\""}],"id":7940,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3658:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3658:78:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7948,"nodeType":"ExpressionStatement","src":"3658:78:29"},{"expression":{"arguments":[{"id":7950,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"3757:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7951,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"3771:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7949,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3747:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3747:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7953,"nodeType":"ExpressionStatement","src":"3747:33:29"},{"eventCall":{"arguments":[{"id":7955,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"3814:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7954,"name":"ManagerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"3796:17:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3796:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7957,"nodeType":"EmitStatement","src":"3791:32:29"}]},"functionSelector":"2b2da97e","id":7959,"implemented":true,"kind":"function","modifiers":[{"id":7920,"kind":"modifierInvocation","modifierName":{"id":7919,"name":"onlyAdmin","nameLocations":["3460:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7895,"src":"3460:9:29"},"nodeType":"ModifierInvocation","src":"3460:9:29"}],"name":"registerManager","nameLocation":"3399:15:29","nodeType":"FunctionDefinition","parameters":{"id":7918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7917,"mutability":"mutable","name":"_manager","nameLocation":"3423:8:29","nodeType":"VariableDeclaration","scope":7959,"src":"3415:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7916,"name":"address","nodeType":"ElementaryTypeName","src":"3415:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3414:18:29"},"returnParameters":{"id":7921,"nodeType":"ParameterList","parameters":[],"src":"3470:0:29"},"scope":8362,"src":"3390:441:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7986,"nodeType":"Block","src":"3957:181:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":7970,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"3984:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7971,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"3998:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7969,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3976:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3976:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646472657373206973206e6f742061206d616e61676572","id":7973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4009:26:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb","typeString":"literal_string \"Address is not a manager\""},"value":"Address is not a manager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb","typeString":"literal_string \"Address is not a manager\""}],"id":7968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3968:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3968:68:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7975,"nodeType":"ExpressionStatement","src":"3968:68:29"},{"expression":{"arguments":[{"id":7977,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"4058:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7978,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"4072:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7976,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4047:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4047:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7980,"nodeType":"ExpressionStatement","src":"4047:34:29"},{"eventCall":{"arguments":[{"id":7982,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"4112:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7983,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"4123:6:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7981,"name":"ManagerRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"4097:14:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4097:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7985,"nodeType":"EmitStatement","src":"4092:38:29"}]},"functionSelector":"896695de","id":7987,"implemented":true,"kind":"function","modifiers":[{"id":7966,"kind":"modifierInvocation","modifierName":{"id":7965,"name":"onlyAdmin","nameLocations":["3947:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7895,"src":"3947:9:29"},"nodeType":"ModifierInvocation","src":"3947:9:29"}],"name":"revokeManager","nameLocation":"3848:13:29","nodeType":"FunctionDefinition","parameters":{"id":7964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7961,"mutability":"mutable","name":"_manager","nameLocation":"3880:8:29","nodeType":"VariableDeclaration","scope":7987,"src":"3872:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7960,"name":"address","nodeType":"ElementaryTypeName","src":"3872:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7963,"mutability":"mutable","name":"reason","nameLocation":"3913:6:29","nodeType":"VariableDeclaration","scope":7987,"src":"3899:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7962,"name":"string","nodeType":"ElementaryTypeName","src":"3899:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3861:65:29"},"returnParameters":{"id":7967,"nodeType":"ParameterList","parameters":[],"src":"3957:0:29"},"scope":8362,"src":"3839:299:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8030,"nodeType":"Block","src":"4271:389:29","statements":[{"expression":{"arguments":[{"id":7999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4290:36:29","subExpression":{"arguments":[{"id":7996,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"4299:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7997,"name":"_institution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"4313:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7995,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4291:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4164647265737320697320616c72656164792061206d616e61676572","id":8000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4328:30:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049","typeString":"literal_string \"Address is already a manager\""},"value":"Address is already a manager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049","typeString":"literal_string \"Address is already a manager\""}],"id":7994,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4282:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:77:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8002,"nodeType":"ExpressionStatement","src":"4282:77:29"},{"expression":{"arguments":[{"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4378:40:29","subExpression":{"arguments":[{"id":8005,"name":"INSTITUTION_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"4387:16:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8006,"name":"_institution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"4405:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8004,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4379:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4379:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4164647265737320697320616c726561647920616e20696e737469747574696f6e","id":8009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4420:35:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1","typeString":"literal_string \"Address is already an institution\""},"value":"Address is already an institution"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1","typeString":"literal_string \"Address is already an institution\""}],"id":8003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4370:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:86:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8011,"nodeType":"ExpressionStatement","src":"4370:86:29"},{"expression":{"arguments":[{"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4475:42:29","subExpression":{"arguments":[{"id":8014,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"4484:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8015,"name":"_institution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"4504:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8013,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4476:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4476:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4164647265737320697320616c726561647920616e2061646d696e","id":8018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4519:29:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3","typeString":"literal_string \"Address is already an admin\""},"value":"Address is already an admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3","typeString":"literal_string \"Address is already an admin\""}],"id":8012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4467:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4467:82:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8020,"nodeType":"ExpressionStatement","src":"4467:82:29"},{"expression":{"arguments":[{"id":8022,"name":"INSTITUTION_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"4570:16:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8023,"name":"_institution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"4588:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8021,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"4560:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4560:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8025,"nodeType":"ExpressionStatement","src":"4560:41:29"},{"eventCall":{"arguments":[{"id":8027,"name":"_institution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"4639:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8026,"name":"InstitutionRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"4617:21:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8029,"nodeType":"EmitStatement","src":"4612:40:29"}]},"functionSelector":"f06d80fc","id":8031,"implemented":true,"kind":"function","modifiers":[{"id":7992,"kind":"modifierInvocation","modifierName":{"id":7991,"name":"onlyManager","nameLocations":["4259:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":7905,"src":"4259:11:29"},"nodeType":"ModifierInvocation","src":"4259:11:29"}],"name":"registerInstitution","nameLocation":"4188:19:29","nodeType":"FunctionDefinition","parameters":{"id":7990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7989,"mutability":"mutable","name":"_institution","nameLocation":"4216:12:29","nodeType":"VariableDeclaration","scope":8031,"src":"4208:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7988,"name":"address","nodeType":"ElementaryTypeName","src":"4208:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4207:22:29"},"returnParameters":{"id":7993,"nodeType":"ParameterList","parameters":[],"src":"4271:0:29"},"scope":8362,"src":"4179:481:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8058,"nodeType":"Block","src":"4796:209:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":8042,"name":"INSTITUTION_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"4823:16:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8043,"name":"_institution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"4841:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8041,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4815:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4815:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646472657373206973206e6f7420616e20696e737469747574696f6e","id":8045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4856:31:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216","typeString":"literal_string \"Address is not an institution\""},"value":"Address is not an institution"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216","typeString":"literal_string \"Address is not an institution\""}],"id":8040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4807:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4807:81:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8047,"nodeType":"ExpressionStatement","src":"4807:81:29"},{"expression":{"arguments":[{"id":8049,"name":"INSTITUTION_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"4910:16:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8050,"name":"_institution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"4928:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8048,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4899:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4899:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8052,"nodeType":"ExpressionStatement","src":"4899:42:29"},{"eventCall":{"arguments":[{"id":8054,"name":"_institution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"4976:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8055,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"4990:6:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8053,"name":"InstitutionRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"4957:18:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":8056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4957:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8057,"nodeType":"EmitStatement","src":"4952:45:29"}]},"functionSelector":"7baa47d9","id":8059,"implemented":true,"kind":"function","modifiers":[{"id":8038,"kind":"modifierInvocation","modifierName":{"id":8037,"name":"onlyManager","nameLocations":["4784:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":7905,"src":"4784:11:29"},"nodeType":"ModifierInvocation","src":"4784:11:29"}],"name":"revokeInstitution","nameLocation":"4677:17:29","nodeType":"FunctionDefinition","parameters":{"id":8036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8033,"mutability":"mutable","name":"_institution","nameLocation":"4713:12:29","nodeType":"VariableDeclaration","scope":8059,"src":"4705:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8032,"name":"address","nodeType":"ElementaryTypeName","src":"4705:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8035,"mutability":"mutable","name":"reason","nameLocation":"4750:6:29","nodeType":"VariableDeclaration","scope":8059,"src":"4736:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8034,"name":"string","nodeType":"ElementaryTypeName","src":"4736:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4694:69:29"},"returnParameters":{"id":8039,"nodeType":"ParameterList","parameters":[],"src":"4796:0:29"},"scope":8362,"src":"4668:337:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8088,"nodeType":"Block","src":"5200:197:29","statements":[{"assignments":[8071],"declarations":[{"constant":false,"id":8071,"mutability":"mutable","name":"hash","nameLocation":"5223:4:29","nodeType":"VariableDeclaration","scope":8088,"src":"5215:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5215:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8076,"initialValue":{"arguments":[{"id":8074,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"5270:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8072,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"5230:16:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4203_$","typeString":"type(library MessageHashUtils)"}},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5247:22:29","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":4144,"src":"5230:39:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5230:48:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5215:63:29"},{"assignments":[8078],"declarations":[{"constant":false,"id":8078,"mutability":"mutable","name":"recoveredSigner","nameLocation":"5301:15:29","nodeType":"VariableDeclaration","scope":8088,"src":"5293:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8077,"name":"address","nodeType":"ElementaryTypeName","src":"5293:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8083,"initialValue":{"arguments":[{"id":8081,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"5332:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8079,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"5319:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5324:7:29","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3885,"src":"5319:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5293:49:29"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8084,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"5364:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8085,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"5374:15:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5364:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8069,"id":8087,"nodeType":"Return","src":"5357:32:29"}]},"functionSelector":"98a3410d","id":8089,"implemented":true,"kind":"function","modifiers":[],"name":"verifySignature","nameLocation":"5022:15:29","nodeType":"FunctionDefinition","parameters":{"id":8066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8061,"mutability":"mutable","name":"message","nameLocation":"5060:7:29","nodeType":"VariableDeclaration","scope":8089,"src":"5052:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8063,"mutability":"mutable","name":"signer","nameLocation":"5090:6:29","nodeType":"VariableDeclaration","scope":8089,"src":"5082:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8062,"name":"address","nodeType":"ElementaryTypeName","src":"5082:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8065,"mutability":"mutable","name":"signature","nameLocation":"5124:9:29","nodeType":"VariableDeclaration","scope":8089,"src":"5111:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8064,"name":"bytes","nodeType":"ElementaryTypeName","src":"5111:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5037:107:29"},"returnParameters":{"id":8069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8089,"src":"5194:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8067,"name":"bool","nodeType":"ElementaryTypeName","src":"5194:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5193:6:29"},"scope":8362,"src":"5013:384:29","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":8175,"nodeType":"Block","src":"5687:853:29","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8106,"name":"incrementTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"5698:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5698:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8108,"nodeType":"ExpressionStatement","src":"5698:18:29"},{"assignments":[8110],"declarations":[{"constant":false,"id":8110,"mutability":"mutable","name":"newTokenId","nameLocation":"5735:10:29","nodeType":"VariableDeclaration","scope":8175,"src":"5727:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8109,"name":"uint256","nodeType":"ElementaryTypeName","src":"5727:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8111,"name":"getCurrentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"5748:17:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5748:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5727:40:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8115,"name":"credentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"5786:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Credential_$7799_storage_$","typeString":"mapping(uint256 => struct NFTCMS.Credential storage ref)"}},"id":8117,"indexExpression":{"id":8116,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5798:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5786:23:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage","typeString":"struct NFTCMS.Credential storage ref"}},"id":8118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5810:7:29","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7789,"src":"5786:31:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5821:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5786:36:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20494420616c726561647920657869737473","id":8121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5824:25:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563","typeString":"literal_string \"Token ID already exists\""},"value":"Token ID already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563","typeString":"literal_string \"Token ID already exists\""}],"id":8114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5778:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5778:72:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8123,"nodeType":"ExpressionStatement","src":"5778:72:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8125,"name":"_ipfsURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"5869:9:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":8127,"indexExpression":{"id":8126,"name":"_ipfsURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"5879:8:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5869:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5890:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5869:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520495046532055524920697320616c72656164792069737375656420666f7220612063726564656e7469616c","id":8130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5893:49:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53","typeString":"literal_string \"The IPFS URI is already issued for a credential\""},"value":"The IPFS URI is already issued for a credential"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53","typeString":"literal_string \"The IPFS URI is already issued for a credential\""}],"id":8124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5861:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5861:82:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8132,"nodeType":"ExpressionStatement","src":"5861:82:29"},{"expression":{"arguments":[{"arguments":[{"id":8135,"name":"_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"6051:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8136,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6071:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6075:6:29","memberName":"sender","nodeType":"MemberAccess","src":"6071:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8138,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"6096:10:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8134,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"5962:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,address,bytes memory) pure returns (bool)"}},"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5962:155:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":8140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6119:19:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":8133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5954:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5954:185:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8142,"nodeType":"ExpressionStatement","src":"5954:185:29"},{"expression":{"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8143,"name":"credentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"6154:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Credential_$7799_storage_$","typeString":"mapping(uint256 => struct NFTCMS.Credential storage ref)"}},"id":8145,"indexExpression":{"id":8144,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"6166:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6154:23:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage","typeString":"struct NFTCMS.Credential storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8147,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"6215:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8148,"name":"CredentialStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"6248:16:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CredentialStatus_$7802_$","typeString":"type(enum NFTCMS.CredentialStatus)"}},"id":8149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6265:5:29","memberName":"VALID","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"6248:22:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},{"id":8150,"name":"_ipfsURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"6294:8:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8151,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"6328:10:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":8152,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6361:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6365:6:29","memberName":"sender","nodeType":"MemberAccess","src":"6361:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8146,"name":"Credential","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"6180:10:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Credential_$7799_storage_ptr_$","typeString":"type(struct NFTCMS.Credential storage pointer)"}},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6206:7:29","6240:6:29","6285:7:29","6317:9:29","6353:6:29"],"names":["tokenId","status","ipfsURI","signature","signer"],"nodeType":"FunctionCall","src":"6180:203:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_memory_ptr","typeString":"struct NFTCMS.Credential memory"}},"src":"6154:229:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage","typeString":"struct NFTCMS.Credential storage ref"}},"id":8156,"nodeType":"ExpressionStatement","src":"6154:229:29"},{"expression":{"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8157,"name":"_ipfsURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"6396:9:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":8159,"indexExpression":{"id":8158,"name":"_ipfsURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"6406:8:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6396:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8160,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"6416:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6396:30:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8162,"nodeType":"ExpressionStatement","src":"6396:30:29"},{"expression":{"arguments":[{"id":8164,"name":"_student","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"6445:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8165,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"6455:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8163,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"6439:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6439:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8167,"nodeType":"ExpressionStatement","src":"6439:27:29"},{"eventCall":{"arguments":[{"id":8169,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"6499:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8170,"name":"_student","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"6511:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6521:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6525:6:29","memberName":"sender","nodeType":"MemberAccess","src":"6521:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8168,"name":"CredentialIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"6482:16:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6482:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8174,"nodeType":"EmitStatement","src":"6477:55:29"}]},"functionSelector":"593dc75c","id":8176,"implemented":true,"kind":"function","modifiers":[{"id":8100,"kind":"modifierInvocation","modifierName":{"id":8099,"name":"onlyInstitution","nameLocations":["5626:15:29"],"nodeType":"IdentifierPath","referencedDeclaration":7915,"src":"5626:15:29"},"nodeType":"ModifierInvocation","src":"5626:15:29"},{"id":8102,"kind":"modifierInvocation","modifierName":{"id":8101,"name":"whenNotPaused","nameLocations":["5651:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"5651:13:29"},"nodeType":"ModifierInvocation","src":"5651:13:29"},{"id":8104,"kind":"modifierInvocation","modifierName":{"id":8103,"name":"nonReentrant","nameLocations":["5674:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":3301,"src":"5674:12:29"},"nodeType":"ModifierInvocation","src":"5674:12:29"}],"name":"issueCredential","nameLocation":"5467:15:29","nodeType":"FunctionDefinition","parameters":{"id":8098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8091,"mutability":"mutable","name":"_student","nameLocation":"5501:8:29","nodeType":"VariableDeclaration","scope":8176,"src":"5493:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8090,"name":"address","nodeType":"ElementaryTypeName","src":"5493:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8093,"mutability":"mutable","name":"_ipfsURI","nameLocation":"5534:8:29","nodeType":"VariableDeclaration","scope":8176,"src":"5520:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8092,"name":"string","nodeType":"ElementaryTypeName","src":"5520:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8095,"mutability":"mutable","name":"_hash","nameLocation":"5561:5:29","nodeType":"VariableDeclaration","scope":8176,"src":"5553:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5553:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8097,"mutability":"mutable","name":"_signature","nameLocation":"5590:10:29","nodeType":"VariableDeclaration","scope":8176,"src":"5577:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8096,"name":"bytes","nodeType":"ElementaryTypeName","src":"5577:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5482:125:29"},"returnParameters":{"id":8105,"nodeType":"ParameterList","parameters":[],"src":"5687:0:29"},"scope":8362,"src":"5458:1082:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8216,"nodeType":"Block","src":"6679:522:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":8187,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"6708:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8186,"name":"_isMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"6698:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6718:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6690:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6690:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8191,"nodeType":"ExpressionStatement","src":"6690:51:29"},{"assignments":[8193],"declarations":[{"constant":false,"id":8193,"mutability":"mutable","name":"signature","nameLocation":"6884:9:29","nodeType":"VariableDeclaration","scope":8216,"src":"6871:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8192,"name":"bytes","nodeType":"ElementaryTypeName","src":"6871:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8198,"initialValue":{"expression":{"baseExpression":{"id":8194,"name":"credentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"6896:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Credential_$7799_storage_$","typeString":"mapping(uint256 => struct NFTCMS.Credential storage ref)"}},"id":8196,"indexExpression":{"id":8195,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"6908:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6896:20:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage","typeString":"struct NFTCMS.Credential storage ref"}},"id":8197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6917:9:29","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":7796,"src":"6896:30:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6871:55:29"},{"assignments":[8200],"declarations":[{"constant":false,"id":8200,"mutability":"mutable","name":"signer","nameLocation":"6945:6:29","nodeType":"VariableDeclaration","scope":8216,"src":"6937:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8199,"name":"address","nodeType":"ElementaryTypeName","src":"6937:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8205,"initialValue":{"expression":{"baseExpression":{"id":8201,"name":"credentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"6954:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Credential_$7799_storage_$","typeString":"mapping(uint256 => struct NFTCMS.Credential storage ref)"}},"id":8203,"indexExpression":{"id":8202,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"6966:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6954:20:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage","typeString":"struct NFTCMS.Credential storage ref"}},"id":8204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6975:6:29","memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":7798,"src":"6954:27:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6937:44:29"},{"assignments":[8207],"declarations":[{"constant":false,"id":8207,"mutability":"mutable","name":"isVerified","nameLocation":"6997:10:29","nodeType":"VariableDeclaration","scope":8216,"src":"6992:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8206,"name":"bool","nodeType":"ElementaryTypeName","src":"6992:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8213,"initialValue":{"arguments":[{"id":8209,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"7026:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8210,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"7032:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8211,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"7040:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8208,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"7010:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,address,bytes memory) pure returns (bool)"}},"id":8212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7010:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6992:58:29"},{"expression":{"id":8214,"name":"isVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"7183:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8184,"id":8215,"nodeType":"Return","src":"7176:17:29"}]},"functionSelector":"1b9519a8","id":8217,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCredential","nameLocation":"6557:16:29","nodeType":"FunctionDefinition","parameters":{"id":8181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8178,"mutability":"mutable","name":"tokenId","nameLocation":"6592:7:29","nodeType":"VariableDeclaration","scope":8217,"src":"6584:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8177,"name":"uint256","nodeType":"ElementaryTypeName","src":"6584:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8180,"mutability":"mutable","name":"hash","nameLocation":"6618:4:29","nodeType":"VariableDeclaration","scope":8217,"src":"6610:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6610:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6573:56:29"},"returnParameters":{"id":8184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8217,"src":"6673:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8182,"name":"bool","nodeType":"ElementaryTypeName","src":"6673:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6672:6:29"},"scope":8362,"src":"6548:653:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8272,"nodeType":"Block","src":"7394:506:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":8230,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"7423:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8229,"name":"_isMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"7413:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7413:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7433:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7405:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7405:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8234,"nodeType":"ExpressionStatement","src":"7405:51:29"},{"assignments":[8237],"declarations":[{"constant":false,"id":8237,"mutability":"mutable","name":"cred","nameLocation":"7486:4:29","nodeType":"VariableDeclaration","scope":8272,"src":"7467:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage_ptr","typeString":"struct NFTCMS.Credential"},"typeName":{"id":8236,"nodeType":"UserDefinedTypeName","pathNode":{"id":8235,"name":"Credential","nameLocations":["7467:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":7799,"src":"7467:10:29"},"referencedDeclaration":7799,"src":"7467:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage_ptr","typeString":"struct NFTCMS.Credential"}},"visibility":"internal"}],"id":8241,"initialValue":{"baseExpression":{"id":8238,"name":"credentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"7493:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Credential_$7799_storage_$","typeString":"mapping(uint256 => struct NFTCMS.Credential storage ref)"}},"id":8240,"indexExpression":{"id":8239,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"7505:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7493:20:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage","typeString":"struct NFTCMS.Credential storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7467:46:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"},"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8243,"name":"cred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"7532:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage_ptr","typeString":"struct NFTCMS.Credential storage pointer"}},"id":8244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7537:6:29","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7794,"src":"7532:11:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8245,"name":"CredentialStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"7547:16:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CredentialStatus_$7802_$","typeString":"type(enum NFTCMS.CredentialStatus)"}},"id":8246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7564:5:29","memberName":"VALID","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"7547:22:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"src":"7532:37:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726564656e7469616c20697320616c7265616479205245564f4b4544","id":8248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7571:31:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4","typeString":"literal_string \"Credential is already REVOKED\""},"value":"Credential is already REVOKED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4","typeString":"literal_string \"Credential is already REVOKED\""}],"id":8242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7524:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7524:79:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8250,"nodeType":"ExpressionStatement","src":"7524:79:29"},{"assignments":[8253],"declarations":[{"constant":false,"id":8253,"mutability":"mutable","name":"previousStatus","nameLocation":"7641:14:29","nodeType":"VariableDeclaration","scope":8272,"src":"7624:31:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"},"typeName":{"id":8252,"nodeType":"UserDefinedTypeName","pathNode":{"id":8251,"name":"CredentialStatus","nameLocations":["7624:16:29"],"nodeType":"IdentifierPath","referencedDeclaration":7802,"src":"7624:16:29"},"referencedDeclaration":7802,"src":"7624:16:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"visibility":"internal"}],"id":8256,"initialValue":{"expression":{"id":8254,"name":"cred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"7658:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage_ptr","typeString":"struct NFTCMS.Credential storage pointer"}},"id":8255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7663:6:29","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7794,"src":"7658:11:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"nodeType":"VariableDeclarationStatement","src":"7624:45:29"},{"expression":{"id":8262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8257,"name":"cred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"7680:4:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage_ptr","typeString":"struct NFTCMS.Credential storage pointer"}},"id":8259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7685:6:29","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7794,"src":"7680:11:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8260,"name":"CredentialStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"7694:16:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CredentialStatus_$7802_$","typeString":"type(enum NFTCMS.CredentialStatus)"}},"id":8261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7711:7:29","memberName":"REVOKED","nodeType":"MemberAccess","referencedDeclaration":7801,"src":"7694:24:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"src":"7680:38:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},"id":8263,"nodeType":"ExpressionStatement","src":"7680:38:29"},{"eventCall":{"arguments":[{"id":8265,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"7782:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8266,"name":"previousStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8253,"src":"7805:14:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},{"expression":{"id":8267,"name":"CredentialStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"7835:16:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CredentialStatus_$7802_$","typeString":"type(enum NFTCMS.CredentialStatus)"}},"id":8268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7852:7:29","memberName":"REVOKED","nodeType":"MemberAccess","referencedDeclaration":7801,"src":"7835:24:29","typeDescriptions":{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"}},{"id":8269,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"7875:6:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"},{"typeIdentifier":"t_enum$_CredentialStatus_$7802","typeString":"enum NFTCMS.CredentialStatus"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8264,"name":"CredentialStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"7744:23:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_CredentialStatus_$7802_$_t_enum$_CredentialStatus_$7802_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,enum NFTCMS.CredentialStatus,enum NFTCMS.CredentialStatus,string memory)"}},"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:148:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8271,"nodeType":"EmitStatement","src":"7739:153:29"}]},"functionSelector":"957a3205","id":8273,"implemented":true,"kind":"function","modifiers":[{"id":8224,"kind":"modifierInvocation","modifierName":{"id":8223,"name":"onlyInstitution","nameLocations":["7356:15:29"],"nodeType":"IdentifierPath","referencedDeclaration":7915,"src":"7356:15:29"},"nodeType":"ModifierInvocation","src":"7356:15:29"},{"id":8226,"kind":"modifierInvocation","modifierName":{"id":8225,"name":"nonReentrant","nameLocations":["7381:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":3301,"src":"7381:12:29"},"nodeType":"ModifierInvocation","src":"7381:12:29"}],"name":"revokeCredential","nameLocation":"7256:16:29","nodeType":"FunctionDefinition","parameters":{"id":8222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8219,"mutability":"mutable","name":"tokenId","nameLocation":"7291:7:29","nodeType":"VariableDeclaration","scope":8273,"src":"7283:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8218,"name":"uint256","nodeType":"ElementaryTypeName","src":"7283:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8221,"mutability":"mutable","name":"reason","nameLocation":"7324:6:29","nodeType":"VariableDeclaration","scope":8273,"src":"7310:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8220,"name":"string","nodeType":"ElementaryTypeName","src":"7310:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7272:65:29"},"returnParameters":{"id":8227,"nodeType":"ParameterList","parameters":[],"src":"7394:0:29"},"scope":8362,"src":"7247:653:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8296,"nodeType":"Block","src":"8059:146:29","statements":[{"clauses":[{"block":{"id":8289,"nodeType":"Block","src":"8114:38:29","statements":[{"expression":{"hexValue":"74727565","id":8287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8136:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8279,"id":8288,"nodeType":"Return","src":"8129:11:29"}]},"errorName":"","id":8290,"nodeType":"TryCatchClause","parameters":{"id":8286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8290,"src":"8105:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8284,"name":"address","nodeType":"ElementaryTypeName","src":"8105:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8104:9:29"},"src":"8096:56:29"},{"block":{"id":8293,"nodeType":"Block","src":"8159:39:29","statements":[{"expression":{"hexValue":"66616c7365","id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8181:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8279,"id":8292,"nodeType":"Return","src":"8174:12:29"}]},"errorName":"","id":8294,"nodeType":"TryCatchClause","src":"8153:45:29"}],"externalCall":{"arguments":[{"id":8282,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8275,"src":"8087:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8280,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8074:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCMS_$8362","typeString":"contract NFTCMS"}},"id":8281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8079:7:29","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"8074:12:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":8283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:21:29","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8295,"nodeType":"TryStatement","src":"8070:128:29"}]},"id":8297,"implemented":true,"kind":"function","modifiers":[],"name":"_isMinted","nameLocation":"7976:9:29","nodeType":"FunctionDefinition","parameters":{"id":8276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8275,"mutability":"mutable","name":"tokenId","nameLocation":"7994:7:29","nodeType":"VariableDeclaration","scope":8297,"src":"7986:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8274,"name":"uint256","nodeType":"ElementaryTypeName","src":"7986:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7985:17:29"},"returnParameters":{"id":8279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8297,"src":"8053:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8277,"name":"bool","nodeType":"ElementaryTypeName","src":"8053:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8052:6:29"},"scope":8362,"src":"7967:238:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1060],"body":{"id":8317,"nodeType":"Block","src":"8391:116:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":8307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"8420:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8306,"name":"_isMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"8410:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8430:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8305,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8402:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8402:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8311,"nodeType":"ExpressionStatement","src":"8402:51:29"},{"expression":{"expression":{"baseExpression":{"id":8312,"name":"credentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"8471:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Credential_$7799_storage_$","typeString":"mapping(uint256 => struct NFTCMS.Credential storage ref)"}},"id":8314,"indexExpression":{"id":8313,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"8483:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8471:20:29","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$7799_storage","typeString":"struct NFTCMS.Credential storage ref"}},"id":8315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8492:7:29","memberName":"ipfsURI","nodeType":"MemberAccess","referencedDeclaration":7791,"src":"8471:28:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":8304,"id":8316,"nodeType":"Return","src":"8464:35:29"}]},"functionSelector":"c87b56dd","id":8318,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"8262:8:29","nodeType":"FunctionDefinition","overrides":{"id":8301,"nodeType":"OverrideSpecifier","overrides":[],"src":"8348:8:29"},"parameters":{"id":8300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8299,"mutability":"mutable","name":"tokenId","nameLocation":"8279:7:29","nodeType":"VariableDeclaration","scope":8318,"src":"8271:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8298,"name":"uint256","nodeType":"ElementaryTypeName","src":"8271:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8270:17:29"},"returnParameters":{"id":8304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8318,"src":"8376:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8302,"name":"string","nodeType":"ElementaryTypeName","src":"8376:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8375:15:29"},"scope":8362,"src":"8253:254:29","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":8326,"nodeType":"Block","src":"8583:27:29","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8323,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"8594:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8594:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8325,"nodeType":"ExpressionStatement","src":"8594:8:29"}]},"functionSelector":"8456cb59","id":8327,"implemented":true,"kind":"function","modifiers":[{"id":8321,"kind":"modifierInvocation","modifierName":{"id":8320,"name":"onlyManager","nameLocations":["8571:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":7905,"src":"8571:11:29"},"nodeType":"ModifierInvocation","src":"8571:11:29"}],"name":"pause","nameLocation":"8554:5:29","nodeType":"FunctionDefinition","parameters":{"id":8319,"nodeType":"ParameterList","parameters":[],"src":"8559:2:29"},"returnParameters":{"id":8322,"nodeType":"ParameterList","parameters":[],"src":"8583:0:29"},"scope":8362,"src":"8545:65:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8335,"nodeType":"Block","src":"8658:29:29","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8332,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"8669:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8669:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8334,"nodeType":"ExpressionStatement","src":"8669:10:29"}]},"functionSelector":"3f4ba83a","id":8336,"implemented":true,"kind":"function","modifiers":[{"id":8330,"kind":"modifierInvocation","modifierName":{"id":8329,"name":"onlyManager","nameLocations":["8646:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":7905,"src":"8646:11:29"},"nodeType":"ModifierInvocation","src":"8646:11:29"}],"name":"unpause","nameLocation":"8627:7:29","nodeType":"FunctionDefinition","parameters":{"id":8328,"nodeType":"ParameterList","parameters":[],"src":"8634:2:29"},"returnParameters":{"id":8331,"nodeType":"ParameterList","parameters":[],"src":"8658:0:29"},"scope":8362,"src":"8618:69:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[752],"body":{"id":8344,"nodeType":"Block","src":"8845:2:29","statements":[]},"id":8345,"implemented":true,"kind":"function","modifiers":[{"id":8341,"kind":"modifierInvocation","modifierName":{"id":8340,"name":"onlyManager","nameLocations":["8815:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":7905,"src":"8815:11:29"},"nodeType":"ModifierInvocation","src":"8815:11:29"}],"name":"_authorizeUpgrade","nameLocation":"8743:17:29","nodeType":"FunctionDefinition","overrides":{"id":8342,"nodeType":"OverrideSpecifier","overrides":[],"src":"8836:8:29"},"parameters":{"id":8339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"newImplementation","nameLocation":"8769:17:29","nodeType":"VariableDeclaration","scope":8345,"src":"8761:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8337,"name":"address","nodeType":"ElementaryTypeName","src":"8761:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8760:27:29"},"returnParameters":{"id":8343,"nodeType":"ParameterList","parameters":[],"src":"8845:0:29"},"scope":8362,"src":"8734:113:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[91,944],"body":{"id":8360,"nodeType":"Block","src":"9045:62:29","statements":[{"expression":{"arguments":[{"id":8357,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8347,"src":"9087:11:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8355,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9063:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFTCMS_$8362_$","typeString":"type(contract super NFTCMS)"}},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9069:17:29","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":91,"src":"9063:23:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9063:36:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8354,"id":8359,"nodeType":"Return","src":"9056:43:29"}]},"functionSelector":"01ffc9a7","id":8361,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"8890:17:29","nodeType":"FunctionDefinition","overrides":{"id":8351,"nodeType":"OverrideSpecifier","overrides":[{"id":8349,"name":"ERC721Upgradeable","nameLocations":["8976:17:29"],"nodeType":"IdentifierPath","referencedDeclaration":1878,"src":"8976:17:29"},{"id":8350,"name":"AccessControlUpgradeable","nameLocations":["8995:24:29"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"8995:24:29"}],"src":"8967:53:29"},"parameters":{"id":8348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8347,"mutability":"mutable","name":"interfaceId","nameLocation":"8915:11:29","nodeType":"VariableDeclaration","scope":8361,"src":"8908:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8346,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8908:6:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8907:20:29"},"returnParameters":{"id":8354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8361,"src":"9039:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8352,"name":"bool","nodeType":"ElementaryTypeName","src":"9039:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9038:6:29"},"scope":8362,"src":"8881:226:29","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8363,"src":"819:8291:29","usedErrors":[379,382,643,648,1963,1966,2150,2153,2302,2307,2316,2321,2326,2333,2338,2343,2411,2424,2945,3207,3282,3792,3797,3802],"usedEvents":[387,1955,1960,2162,2171,2180,2231,2711,2720,2729,7819,7831,7835,7839,7845,7851]}],"src":"33:9077:29"},"id":29}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ERC721Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xfd473ea8f70e13eaa6475c7e348885b8a32925252e3bc237e07c0e3fde0f10f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea9d17ae8f18568ab1aedf555ebc79906ba3eaaccfa78efbaed05bd3a9e1b6f2\",\"dweb:/ipfs/QmUQDGwCVE72tExiyA9EuwBeaiu9a8DQin3DZxuX76umg4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef0fc99c0949794e70d544a632b2494b1b2e609c2d556bd89e51a9b7809ec4c364736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xF 0xC9 SWAP13 MULMOD BLOBHASH PUSH26 0x4E70D544A632B2494B1B2E609C2D556BD89E51A9B7809EC4C364 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"496:5741:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef0fc99c0949794e70d544a632b2494b1b2e609c2d556bd89e51a9b7809ec4c364736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xF 0xC9 SWAP13 MULMOD BLOBHASH PUSH26 0x4E70D544A632B2494B1B2E609C2D556BD89E51A9B7809EC4C364 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"496:5741:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a28091ddc0c74bac4c67a3ac04136eb37e65f0d65d15d3d70d173c0f3dd61fea64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP1 SWAP2 0xDD 0xC0 0xC7 0x4B 0xAC 0x4C PUSH8 0xA3AC04136EB37E65 CREATE 0xD6 TSTORE ISZERO 0xD3 0xD7 0xD OR EXTCODECOPY 0xF RETURNDATASIZE 0xD6 0x1F 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"431:1480:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a28091ddc0c74bac4c67a3ac04136eb37e65f0d65d15d3d70d173c0f3dd61fea64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP1 SWAP2 0xDD 0xC0 0xC7 0x4B 0xAC 0x4C PUSH8 0xA3AC04136EB37E65 CREATE 0xD6 TSTORE ISZERO 0xD3 0xD7 0xD OR EXTCODECOPY 0xF RETURNDATASIZE 0xD6 0x1F 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"431:1480:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb690ca80c111267b1ba64fef1a8c055d42bb1beade5201d7a8d5bdc2984b06a64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH10 0xCA80C111267B1BA64FE CALL 0xA8 0xC0 SSTORE 0xD4 0x2B 0xB1 0xBE 0xAD 0xE5 KECCAK256 SAR PUSH27 0x8D5BDC2984B06A64736F6C634300081B0033000000000000000000 ","sourceMap":"233:5799:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb690ca80c111267b1ba64fef1a8c055d42bb1beade5201d7a8d5bdc2984b06a64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH10 0xCA80C111267B1BA64FE CALL 0xA8 0xC0 SSTORE 0xD4 0x2B 0xB1 0xBE 0xAD 0xE5 KECCAK256 SAR PUSH27 0x8D5BDC2984B06A64736F6C634300081B0033000000000000000000 ","sourceMap":"233:5799:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2b6017f27ba330c5ddbf7938587f4edb92dfd2131074cedcf85ca87c7a4769c64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xB6 ADD PUSH32 0x27BA330C5DDBF7938587F4EDB92DFD2131074CEDCF85CA87C7A4769C64736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"411:484:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2b6017f27ba330c5ddbf7938587f4edb92dfd2131074cedcf85ca87c7a4769c64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xB6 ADD PUSH32 0x27BA330C5DDBF7938587F4EDB92DFD2131074CEDCF85CA87C7A4769C64736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"411:484:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220315420d2a34f54a0426c9d4fa643e55c756e077cf0b1ca748a3d08550624cc3764736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLOAD KECCAK256 0xD2 LOG3 0x4F SLOAD LOG0 TIMESTAMP PUSH13 0x9D4FA643E55C756E077CF0B1CA PUSH21 0x8A3D08550624CC3764736F6C634300081B00330000 ","sourceMap":"657:1315:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220315420d2a34f54a0426c9d4fa643e55c756e077cf0b1ca748a3d08550624cc3764736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLOAD KECCAK256 0xD2 LOG3 0x4F SLOAD LOG0 TIMESTAMP PUSH13 0x9D4FA643E55C756E077CF0B1CA PUSH21 0x8A3D08550624CC3764736F6C634300081B00330000 ","sourceMap":"657:1315:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c5b9741516a89aa3b21db03a537447b20e0f0eca242db0ef8c93e38ed69d9f664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY JUMPDEST SWAP8 COINBASE MLOAD PUSH11 0x89AA3B21DB03A537447B20 0xE0 CREATE 0xEC LOG2 TIMESTAMP 0xDB 0xE 0xF8 0xC9 RETURNDATACOPY CODESIZE 0xED PUSH10 0xD9F664736F6C63430008 SHL STOP CALLER ","sourceMap":"1407:2774:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c5b9741516a89aa3b21db03a537447b20e0f0eca242db0ef8c93e38ed69d9f664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY JUMPDEST SWAP8 COINBASE MLOAD PUSH11 0x89AA3B21DB03A537447B20 0xE0 CREATE 0xEC LOG2 TIMESTAMP 0xDB 0xE 0xF8 0xC9 RETURNDATACOPY CODESIZE 0xED PUSH10 0xD9F664736F6C63430008 SHL STOP CALLER ","sourceMap":"1407:2774:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699303a5c52bc84a454e1d7f1979e68af835e3d029de02ddc146e280c842441964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9303A5C52BC84A454E1D PUSH32 0x1979E68AF835E3D029DE02DDC146E280C842441964736F6C634300081B003300 ","sourceMap":"251:3680:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699303a5c52bc84a454e1d7f1979e68af835e3d029de02ddc146e280c842441964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9303A5C52BC84A454E1D PUSH32 0x1979E68AF835E3D029DE02DDC146E280C842441964736F6C634300081B003300 ","sourceMap":"251:3680:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200609642c22ba18325abd959c2f05794f0e137b8622597c479ac1b7b6cecbaefa64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD MULMOD PUSH5 0x2C22BA1832 GAS 0xBD SWAP6 SWAP13 0x2F SDIV PUSH26 0x4F0E137B8622597C479AC1B7B6CECBAEFA64736F6C634300081B STOP CALLER ","sourceMap":"344:7470:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200609642c22ba18325abd959c2f05794f0e137b8622597c479ac1b7b6cecbaefa64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD MULMOD PUSH5 0x2C22BA1832 GAS 0xBD SWAP6 SWAP13 0x2F SDIV PUSH26 0x4F0E137B8622597C479AC1B7B6CECBAEFA64736F6C634300081B STOP CALLER ","sourceMap":"344:7470:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045964c3323036b458d2cd7d327a9020c8d264023ab02397202e9ad562599c37964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP7 0x4C CALLER 0x23 SUB PUSH12 0x458D2CD7D327A9020C8D2640 0x23 0xAB MUL CODECOPY PUSH19 0x2E9AD562599C37964736F6C634300081B0033 ","sourceMap":"521:3181:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045964c3323036b458d2cd7d327a9020c8d264023ab02397202e9ad562599c37964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP7 0x4C CALLER 0x23 SUB PUSH12 0x458D2CD7D327A9020C8D2640 0x23 0xAB MUL CODECOPY PUSH19 0x2E9AD562599C37964736F6C634300081B0033 ","sourceMap":"521:3181:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9b729d0e4b7415694476ac1dd6b51b73e23ed609e32d344cf12a11202ac949e64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xB7 0x29 0xD0 0xE4 0xB7 COINBASE JUMP SWAP5 SELFBALANCE PUSH11 0xC1DD6B51B73E23ED609E32 0xD3 PREVRANDAO 0xCF SLT LOG1 SLT MUL 0xAC SWAP5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:28026:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9b729d0e4b7415694476ac1dd6b51b73e23ed609e32d344cf12a11202ac949e64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xB7 0x29 0xD0 0xE4 0xB7 COINBASE JUMP SWAP5 SELFBALANCE PUSH11 0xC1DD6B51B73E23ED609E32 0xD3 PREVRANDAO 0xCF SLT LOG1 SLT MUL 0xAC SWAP5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:28026:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f555b99f34b1c067f4d2ea441095768d54040c479b869b2116f2283c5ea029cc64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SSTORE 0xB9 SWAP16 CALLVALUE 0xB1 0xC0 PUSH8 0xF4D2EA441095768D SLOAD DIV 0xC SELFBALANCE SWAP12 DUP7 SWAP12 0x21 AND CALLCODE 0x28 EXTCODECOPY MCOPY LOG0 0x29 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f555b99f34b1c067f4d2ea441095768d54040c479b869b2116f2283c5ea029cc64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SSTORE 0xB9 SWAP16 CALLVALUE 0xB1 0xC0 PUSH8 0xF4D2EA441095768D SLOAD DIV 0xC SELFBALANCE SWAP12 DUP7 SWAP12 0x21 AND CALLCODE 0x28 EXTCODECOPY MCOPY LOG0 0x29 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2b69475893fef9566b51a6f4707efb246e99a221eea24472d422e54ab1462664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2B PUSH10 0x475893FEF9566B51A6F4 PUSH17 0x7EFB246E99A221EEA24472D422E54AB146 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"258:2354:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2b69475893fef9566b51a6f4707efb246e99a221eea24472d422e54ab1462664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2B PUSH10 0x475893FEF9566B51A6F4 PUSH17 0x7EFB246E99A221EEA24472D422E54AB146 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"258:2354:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/NFTCMSvDigitalSignature.sol":{"NFTCMS":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"student","type":"address"},{"indexed":true,"internalType":"address","name":"institution","type":"address"}],"name":"CredentialIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"enum NFTCMS.CredentialStatus","name":"previousStatus","type":"uint8"},{"indexed":false,"internalType":"enum NFTCMS.CredentialStatus","name":"newStatus","type":"uint8"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"CredentialStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"institution","type":"address"}],"name":"InstitutionRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"institution","type":"address"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"InstitutionRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"manager","type":"address"}],"name":"ManagerRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"manager","type":"address"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"ManagerRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INSTITUTION_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"credentials","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"ipfsURI","type":"string"},{"internalType":"enum NFTCMS.CredentialStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_student","type":"address"},{"internalType":"string","name":"_ipfsURI","type":"string"},{"internalType":"bytes32","name":"_hash","type":"bytes32"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"issueCredential","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_institution","type":"address"}],"name":"registerInstitution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_manager","type":"address"}],"name":"registerManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"revokeCredential","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_institution","type":"address"},{"internalType":"string","name":"reason","type":"string"}],"name":"revokeInstitution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_manager","type":"address"},{"internalType":"string","name":"reason","type":"string"}],"name":"revokeManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"verifyCredential","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"message","type":"bytes32"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"verifySignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3290":{"entryPoint":null,"id":3290,"parameterSlots":0,"returnSlots":0},"@_7859":{"entryPoint":null,"id":7859,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_584":{"entryPoint":100,"id":584,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_615":{"entryPoint":360,"id":615,"parameterSlots":0,"returnSlots":1},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":435,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":400,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:456:30","nodeType":"YulBlock","src":"0:456:30","statements":[{"body":{"nativeSrc":"51:57:30","nodeType":"YulBlock","src":"51:57:30","statements":[{"nativeSrc":"61:41:30","nodeType":"YulAssignment","src":"61:41:30","value":{"arguments":[{"name":"value","nativeSrc":"76:5:30","nodeType":"YulIdentifier","src":"76:5:30"},{"kind":"number","nativeSrc":"83:18:30","nodeType":"YulLiteral","src":"83:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"72:3:30","nodeType":"YulIdentifier","src":"72:3:30"},"nativeSrc":"72:30:30","nodeType":"YulFunctionCall","src":"72:30:30"},"variableNames":[{"name":"cleaned","nativeSrc":"61:7:30","nodeType":"YulIdentifier","src":"61:7:30"}]}]},"name":"cleanup_t_uint64","nativeSrc":"7:101:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33:5:30","nodeType":"YulTypedName","src":"33:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"43:7:30","nodeType":"YulTypedName","src":"43:7:30","type":""}],"src":"7:101:30"},{"body":{"nativeSrc":"177:52:30","nodeType":"YulBlock","src":"177:52:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"194:3:30","nodeType":"YulIdentifier","src":"194:3:30"},{"arguments":[{"name":"value","nativeSrc":"216:5:30","nodeType":"YulIdentifier","src":"216:5:30"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"199:16:30","nodeType":"YulIdentifier","src":"199:16:30"},"nativeSrc":"199:23:30","nodeType":"YulFunctionCall","src":"199:23:30"}],"functionName":{"name":"mstore","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:36:30","nodeType":"YulFunctionCall","src":"187:36:30"},"nativeSrc":"187:36:30","nodeType":"YulExpressionStatement","src":"187:36:30"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"114:115:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"165:5:30","nodeType":"YulTypedName","src":"165:5:30","type":""},{"name":"pos","nativeSrc":"172:3:30","nodeType":"YulTypedName","src":"172:3:30","type":""}],"src":"114:115:30"},{"body":{"nativeSrc":"331:122:30","nodeType":"YulBlock","src":"331:122:30","statements":[{"nativeSrc":"341:26:30","nodeType":"YulAssignment","src":"341:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"353:9:30","nodeType":"YulIdentifier","src":"353:9:30"},{"kind":"number","nativeSrc":"364:2:30","nodeType":"YulLiteral","src":"364:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"349:3:30","nodeType":"YulIdentifier","src":"349:3:30"},"nativeSrc":"349:18:30","nodeType":"YulFunctionCall","src":"349:18:30"},"variableNames":[{"name":"tail","nativeSrc":"341:4:30","nodeType":"YulIdentifier","src":"341:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"419:6:30","nodeType":"YulIdentifier","src":"419:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"432:9:30","nodeType":"YulIdentifier","src":"432:9:30"},{"kind":"number","nativeSrc":"443:1:30","nodeType":"YulLiteral","src":"443:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"428:3:30","nodeType":"YulIdentifier","src":"428:3:30"},"nativeSrc":"428:17:30","nodeType":"YulFunctionCall","src":"428:17:30"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"377:41:30","nodeType":"YulIdentifier","src":"377:41:30"},"nativeSrc":"377:69:30","nodeType":"YulFunctionCall","src":"377:69:30"},"nativeSrc":"377:69:30","nodeType":"YulExpressionStatement","src":"377:69:30"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"235:218:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"303:9:30","nodeType":"YulTypedName","src":"303:9:30","type":""},{"name":"value0","nativeSrc":"315:6:30","nodeType":"YulTypedName","src":"315:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"326:4:30","nodeType":"YulTypedName","src":"326:4:30","type":""}],"src":"235:218:30"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x5F PUSH2 0x64 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74 PUSH2 0x168 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x165 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD DUP2 PUSH2 0x190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x5360 PUSH2 0x1F7 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2744 ADD MSTORE DUP2 DUP2 PUSH2 0x2799 ADD MSTORE PUSH2 0x2976 ADD MSTORE PUSH2 0x5360 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0xE0574E3F EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0xF06D80FC EQ PUSH2 0x890 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x781 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x896695DE GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x896695DE EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0x957A3205 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0x98A3410D EQ PUSH2 0x69C JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x7BAA47D9 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5CB JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x593DC75C EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x511 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x44D JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x1B929C21 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x1B929C21 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x1B9519A8 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x2B2DA97E EQ PUSH2 0x3BB JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3C8F JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DDA JUMP JUMPDEST PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x3E8F JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x3F2F JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0xB05 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x3FC2 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x401C JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x401C JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0xE70 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0xEA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x4191 JUMP JUMPDEST PUSH2 0xEC4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x3DDA JUMP JUMPDEST PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH2 0x1249 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x4357 JUMP JUMPDEST PUSH2 0x1312 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C9 PUSH2 0x1421 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH2 0x1640 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x4357 JUMP JUMPDEST PUSH2 0x1674 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x401C JUMP JUMPDEST PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x43B3 JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x686 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x440F JUMP JUMPDEST PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EE PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x44AA JUMP JUMPDEST PUSH2 0x1A7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x742 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74F SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x44EA JUMP JUMPDEST PUSH2 0x1ACC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x3DDA JUMP JUMPDEST PUSH2 0x1AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x401C JUMP JUMPDEST PUSH2 0x1BE1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x3DDA JUMP JUMPDEST PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84A SWAP2 SWAP1 PUSH2 0x469A JUMP JUMPDEST PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85C SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87A PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH2 0x1E3C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x8C4 DUP3 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x8D7 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x914 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x936 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x961 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x944 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x977 DUP3 PUSH2 0x2099 JUMP JUMPDEST POP PUSH2 0x981 DUP3 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99A DUP3 DUP3 PUSH2 0x995 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x2174 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CD DUP4 PUSH2 0x2186 JUMP JUMPDEST PUSH2 0xA0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA03 SWAP1 PUSH2 0x4786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xA2F SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0xAF7 DUP6 DUP4 DUP6 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB77 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6E SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB8B DUP4 DUP4 PUSH2 0xB86 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x2213 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC01 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC12 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC42 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0xC6C PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA3 SWAP1 PUSH2 0x4829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD6 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0D SWAP1 PUSH2 0x48BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD23 PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8D PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP3 PUSH2 0xDD3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x594022AE30F535100BD2169AB77AB37C1DBA3D7E89D04BD6BF17B121A3CA7C25 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xDDC DUP3 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xDE5 DUP2 PUSH2 0x24B9 JUMP JUMPDEST PUSH2 0xDEF DUP4 DUP4 PUSH2 0x24CD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xDFD PUSH2 0x216C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6B DUP3 DUP3 PUSH2 0x25CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE9A PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0xEA2 PUSH2 0x26D0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEBF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1ACC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xECC PUSH2 0x2742 JUMP JUMPDEST PUSH2 0xED5 DUP3 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0xEDF DUP3 DUP3 PUSH2 0x2855 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED PUSH2 0x2974 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF40 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0xF48 PUSH2 0x29FB JUMP JUMPDEST PUSH2 0xF50 PUSH2 0x2A3C JUMP JUMPDEST PUSH2 0xF58 PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF62 PUSH2 0x2A9C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB4 SWAP1 PUSH2 0x4993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP6 PUSH1 0x40 MLOAD PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x49EF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD EQ PUSH2 0x101E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x4A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1029 DUP4 CALLER DUP5 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x1068 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105F SWAP1 PUSH2 0x4AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1093 JUMPI PUSH2 0x1092 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x10EA SWAP2 SWAP1 PUSH2 0x4CB0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1116 JUMPI PUSH2 0x1115 PUSH2 0x456D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x4DDD JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x49EF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11A8 DUP6 DUP3 PUSH2 0x2AA6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xD3BD681D2FE91FDA330D69FECA5DC6A668F4862360861444DE295F833E351053 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x120C PUSH2 0x2B9F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x121D PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1254 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BF SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133C PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x1366 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP4 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP1 PUSH2 0x4EFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CF PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP4 PUSH2 0x1BE1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAC234B0E1C8C07E26DC3F3271849BABAC0394B68F7D0E15F1B8D9EA28D482DFD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142B PUSH2 0x2BD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1479 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x14AE JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x14BC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x14F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1543 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x15B7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41636164656D69632043726564656E7469616C73000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4143524544000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0x15BF PUSH2 0x2C0F JUMP JUMPDEST PUSH2 0x15C7 PUSH2 0x2C19 JUMP JUMPDEST PUSH2 0x15CF PUSH2 0x2C2B JUMP JUMPDEST PUSH2 0x15DC PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x24CD JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1639 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1630 SWAP2 SWAP1 PUSH2 0x4F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x166A PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x1672 PUSH2 0x2C35 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1681 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x16AB PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP4 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x16EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E1 SWAP1 PUSH2 0x4FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1714 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP4 PUSH2 0x1BE1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2A65D71DDD7E0FC167105C9D6A51832464FCA91D67B3D8871C2ED3D1FAB22787 DUP3 PUSH1 0x40 MLOAD PUSH2 0x175A SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1771 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1809 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x1811 PUSH2 0x2A3C JUMP JUMPDEST PUSH2 0x181A DUP3 PUSH2 0x2186 JUMP JUMPDEST PUSH2 0x1859 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1850 SWAP1 PUSH2 0x4786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18A8 JUMPI PUSH2 0x18A7 PUSH2 0x456D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DF SWAP1 PUSH2 0x503D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1926 JUMPI PUSH2 0x1925 PUSH2 0x456D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP4 PUSH32 0x2840FBA00BDCDA6213AC8F2DF6BD0EAA93C78B71E752268CEF89210A1705E4EF DUP3 PUSH1 0x1 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1960 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x505D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1972 PUSH2 0x2B9F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1982 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1993 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19BF SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A23 DUP6 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A3A DUP5 DUP4 PUSH2 0x2CDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x1A8F PUSH2 0x1A88 PUSH2 0x216C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2D09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1AD7 DUP5 DUP5 DUP5 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x1AEB PUSH2 0x1AE2 PUSH2 0x216C JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2E87 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AFC DUP3 PUSH2 0x2186 JUMP JUMPDEST PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B32 SWAP1 PUSH2 0x4786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1B5C SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B88 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEA DUP3 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1BF3 DUP2 PUSH2 0x24B9 JUMP JUMPDEST PUSH2 0x1BFD DUP4 DUP4 PUSH2 0x25CE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1C2C SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C58 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CA5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CA5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C88 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1CCD SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CF9 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D81 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH2 0x1E66 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x1E90 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC7 SWAP1 PUSH2 0x4829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EFA PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0x1F3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F31 SWAP1 PUSH2 0x48BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F47 PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0x1F87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F7E SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FB1 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP3 PUSH2 0xDD3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88FAE95B509FF46EC752CD32B3C9E319FA7A8DD9AEFC64FB91C1AA6BA4E88897 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x206A JUMPI POP PUSH2 0x2069 DUP3 PUSH2 0x3038 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20A5 DUP4 PUSH2 0x311A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2118 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210F SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x212C PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2181 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3165 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C1 SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x21FB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21F8 SWAP2 SWAP1 PUSH2 0x50B0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2208 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x220E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x221E PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x222B DUP6 PUSH2 0x311A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x226D JUMPI PUSH2 0x226C DUP2 DUP6 DUP8 PUSH2 0x3339 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2300 JUMPI PUSH2 0x22AF PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x3165 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2385 JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2472 DUP3 DUP3 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x24B5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24AC SWAP3 SWAP2 SWAP1 PUSH2 0x50DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x24CA DUP2 PUSH2 0x24C5 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x2468 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x24D8 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP PUSH2 0x24E4 DUP5 DUP5 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x25C2 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x255E PUSH2 0x216C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x25C8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x25D9 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP PUSH2 0x25E5 DUP5 DUP5 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0x26C4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2660 PUSH2 0x216C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26D8 PUSH2 0x33FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E2 PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x272A PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2737 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x27EF JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27D6 PUSH2 0x343D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2826 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2852 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x28BD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x511B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x28FE JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F5 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x2965 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295C SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x296F DUP4 DUP4 PUSH2 0x3494 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2A03 PUSH2 0x1212 JUMP JUMPDEST ISZERO PUSH2 0x2A3A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x2A78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A95 SWAP1 PUSH2 0x5177 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B18 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B0F SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B26 DUP4 DUP4 PUSH1 0x0 PUSH2 0x2213 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B9A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B91 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2C01 PUSH2 0x3507 JUMP JUMPDEST PUSH2 0x2C0B DUP3 DUP3 PUSH2 0x3547 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2C17 PUSH2 0x3507 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C21 PUSH2 0x3507 JUMP JUMPDEST PUSH2 0x2C29 PUSH2 0x3584 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C33 PUSH2 0x3507 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C3D PUSH2 0x29FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C47 PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2C8F PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9C SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2CED DUP7 DUP7 PUSH2 0x35B8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2CFD DUP3 DUP3 PUSH2 0x3614 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D13 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D86 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7D SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2E79 SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x3031 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EE6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2F22 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F1F SWAP2 SWAP1 PUSH2 0x5220 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2FA6 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F52 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F57 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2F9E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F95 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x302F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3026 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3103 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3113 JUMPI POP PUSH2 0x3112 DUP3 PUSH2 0x3778 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3125 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x316F PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x31AA JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 PUSH2 0x31BA DUP6 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3225 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3238 JUMPI POP PUSH2 0x3236 DUP2 DUP6 PUSH2 0x1D76 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x327A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3271 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x32DC JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3344 DUP4 DUP4 DUP4 PUSH2 0x37E2 JUMP JUMPDEST PUSH2 0x33F8 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33B9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B0 SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33EF SWAP3 SWAP2 SWAP1 PUSH2 0x524D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3405 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x343B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x38A3 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x349D DUP3 PUSH2 0x38AD JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x34FA JUMPI PUSH2 0x34F4 DUP3 DUP3 PUSH2 0x397A JUMP JUMPDEST POP PUSH2 0x3503 JUMP JUMPDEST PUSH2 0x3502 PUSH2 0x39FE JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x350F PUSH2 0x3A3B JUMP JUMPDEST PUSH2 0x3545 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x354F PUSH2 0x3507 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3559 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x356C SWAP2 SWAP1 PUSH2 0x4CB0 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x357E SWAP2 SWAP1 PUSH2 0x4CB0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x358C PUSH2 0x3507 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3596 PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x35FD JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x35EF DUP9 DUP3 DUP6 DUP6 PUSH2 0x3A5B JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x360D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3628 JUMPI PUSH2 0x3627 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x363B JUMPI PUSH2 0x363A PUSH2 0x456D JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x3774 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3655 JUMPI PUSH2 0x3654 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3668 JUMPI PUSH2 0x3667 PUSH2 0x456D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x369F JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x36B3 JUMPI PUSH2 0x36B2 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x36C6 JUMPI PUSH2 0x36C5 PUSH2 0x456D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x370B JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3702 SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x371E JUMPI PUSH2 0x371D PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3731 JUMPI PUSH2 0x3730 PUSH2 0x456D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3773 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x376A SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x389A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x385B JUMPI POP PUSH2 0x385A DUP5 DUP5 PUSH2 0x1D76 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x3899 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3881 DUP4 PUSH2 0x2121 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x3909 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3900 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x3936 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x38A3 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x39A4 SWAP2 SWAP1 PUSH2 0x52B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x39DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x39E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x39F4 DUP6 DUP4 DUP4 PUSH2 0x3B4F JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x3A39 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A45 PUSH2 0x2BD1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3A9B JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3B45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3AC0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B36 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x3B45 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3B64 JUMPI PUSH2 0x3B5F DUP3 PUSH2 0x3BDE JUMP JUMPDEST PUSH2 0x3BD6 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x3B8C JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x3BCE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BC5 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x3BD7 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3BF1 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C6C DUP2 PUSH2 0x3C37 JUMP JUMPDEST DUP2 EQ PUSH2 0x3C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C89 DUP2 PUSH2 0x3C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CA5 JUMPI PUSH2 0x3CA4 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CB3 DUP5 DUP3 DUP6 ADD PUSH2 0x3C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CD1 DUP2 PUSH2 0x3CBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D2C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D11 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D54 DUP3 PUSH2 0x3CF2 JUMP JUMPDEST PUSH2 0x3D5E DUP2 DUP6 PUSH2 0x3CFD JUMP JUMPDEST SWAP4 POP PUSH2 0x3D6E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D0E JUMP JUMPDEST PUSH2 0x3D77 DUP2 PUSH2 0x3D38 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D9C DUP2 DUP5 PUSH2 0x3D49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DB7 DUP2 PUSH2 0x3DA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3DD4 DUP2 PUSH2 0x3DAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DF0 JUMPI PUSH2 0x3DEF PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DFE DUP5 DUP3 DUP6 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E32 DUP3 PUSH2 0x3E07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E42 DUP2 PUSH2 0x3E27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E6C DUP2 PUSH2 0x3E27 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E89 DUP2 PUSH2 0x3E63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3EA6 JUMPI PUSH2 0x3EA5 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EB4 DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3EC5 DUP6 DUP3 DUP7 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EE2 DUP2 PUSH2 0x3ECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3ED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F0C DUP2 PUSH2 0x3ECF JUMP JUMPDEST DUP2 EQ PUSH2 0x3F17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F29 DUP2 PUSH2 0x3F03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F46 JUMPI PUSH2 0x3F45 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F54 DUP6 DUP3 DUP7 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F65 DUP6 DUP3 DUP7 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3F88 JUMPI PUSH2 0x3F87 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F96 DUP7 DUP3 DUP8 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3FA7 DUP7 DUP3 DUP8 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3FB8 DUP7 DUP3 DUP8 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FD8 JUMPI PUSH2 0x3FD7 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FE6 DUP5 DUP3 DUP6 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4005 JUMPI PUSH2 0x4004 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4013 DUP5 DUP3 DUP6 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4033 JUMPI PUSH2 0x4032 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4041 DUP6 DUP3 DUP7 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4052 DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x409E DUP3 PUSH2 0x3D38 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x40BD JUMPI PUSH2 0x40BC PUSH2 0x4066 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D0 PUSH2 0x3C23 JUMP JUMPDEST SWAP1 POP PUSH2 0x40DC DUP3 DUP3 PUSH2 0x4095 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x40FC JUMPI PUSH2 0x40FB PUSH2 0x4066 JUMP JUMPDEST JUMPDEST PUSH2 0x4105 DUP3 PUSH2 0x3D38 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4134 PUSH2 0x412F DUP5 PUSH2 0x40E1 JUMP JUMPDEST PUSH2 0x40C6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4150 JUMPI PUSH2 0x414F PUSH2 0x4061 JUMP JUMPDEST JUMPDEST PUSH2 0x415B DUP5 DUP3 DUP6 PUSH2 0x4112 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4178 JUMPI PUSH2 0x4177 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4188 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41A8 JUMPI PUSH2 0x41A7 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41B6 DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41D7 JUMPI PUSH2 0x41D6 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x41E3 DUP6 DUP3 DUP7 ADD PUSH2 0x4163 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4208 JUMPI PUSH2 0x4207 PUSH2 0x4066 JUMP JUMPDEST JUMPDEST PUSH2 0x4211 DUP3 PUSH2 0x3D38 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4231 PUSH2 0x422C DUP5 PUSH2 0x41ED JUMP JUMPDEST PUSH2 0x40C6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x424D JUMPI PUSH2 0x424C PUSH2 0x4061 JUMP JUMPDEST JUMPDEST PUSH2 0x4258 DUP5 DUP3 DUP6 PUSH2 0x4112 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4275 JUMPI PUSH2 0x4274 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4285 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x421E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x42A8 JUMPI PUSH2 0x42A7 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42B6 DUP8 DUP3 DUP9 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42D7 JUMPI PUSH2 0x42D6 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x42E3 DUP8 DUP3 DUP9 ADD PUSH2 0x4260 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42F4 DUP8 DUP3 DUP9 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4315 JUMPI PUSH2 0x4314 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x4321 DUP8 DUP3 DUP9 ADD PUSH2 0x4163 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x4336 DUP2 PUSH2 0x3DA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4351 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x432D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x436E JUMPI PUSH2 0x436D PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x437C DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x439D JUMPI PUSH2 0x439C PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x43A9 DUP6 DUP3 DUP7 ADD PUSH2 0x4260 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43CA JUMPI PUSH2 0x43C9 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43D8 DUP6 DUP3 DUP7 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43F9 JUMPI PUSH2 0x43F8 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x4405 DUP6 DUP3 DUP7 ADD PUSH2 0x4260 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4428 JUMPI PUSH2 0x4427 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4436 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4447 DUP7 DUP3 DUP8 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4468 JUMPI PUSH2 0x4467 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x4474 DUP7 DUP3 DUP8 ADD PUSH2 0x4163 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x4487 DUP2 PUSH2 0x3CBC JUMP JUMPDEST DUP2 EQ PUSH2 0x4492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44A4 DUP2 PUSH2 0x447E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44C1 JUMPI PUSH2 0x44C0 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44CF DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x44E0 DUP6 DUP3 DUP7 ADD PUSH2 0x4495 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4504 JUMPI PUSH2 0x4503 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4512 DUP8 DUP3 DUP9 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4523 DUP8 DUP3 DUP9 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4534 DUP8 DUP3 DUP9 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4555 JUMPI PUSH2 0x4554 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x4561 DUP8 DUP3 DUP9 ADD PUSH2 0x4163 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x45AD JUMPI PUSH2 0x45AC PUSH2 0x456D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x45BE DUP3 PUSH2 0x459C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45CE DUP3 PUSH2 0x45B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45DE DUP2 PUSH2 0x45C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x460B DUP3 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x4615 DUP2 DUP6 PUSH2 0x45EF JUMP JUMPDEST SWAP4 POP PUSH2 0x4625 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D0E JUMP JUMPDEST PUSH2 0x462E DUP2 PUSH2 0x3D38 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x464E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x432D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4660 DUP2 DUP8 PUSH2 0x3D49 JUMP JUMPDEST SWAP1 POP PUSH2 0x466F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x45D5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4681 DUP2 DUP6 PUSH2 0x4600 JUMP JUMPDEST SWAP1 POP PUSH2 0x4690 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46B1 JUMPI PUSH2 0x46B0 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46BF DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x46D0 DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4721 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4734 JUMPI PUSH2 0x4733 PUSH2 0x46DA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4770 PUSH1 0x14 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x477B DUP3 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x479F DUP2 PUSH2 0x4763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x47BB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x47C8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x432D JUMP JUMPDEST PUSH2 0x47D5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4164647265737320697320616C72656164792061206D616E6167657200000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4813 PUSH1 0x1C DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x481E DUP3 PUSH2 0x47DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4842 DUP2 PUSH2 0x4806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320697320616C726561647920616E20696E737469747574696F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A5 PUSH1 0x21 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x48B0 DUP3 PUSH2 0x4849 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48D4 DUP2 PUSH2 0x4898 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320697320616C726561647920616E2061646D696E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4911 PUSH1 0x1B DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x491C DUP3 PUSH2 0x48DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4940 DUP2 PUSH2 0x4904 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20494420616C726561647920657869737473000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x497D PUSH1 0x17 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4988 DUP3 PUSH2 0x4947 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49AC DUP2 PUSH2 0x4970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C9 DUP3 PUSH2 0x3CF2 JUMP JUMPDEST PUSH2 0x49D3 DUP2 DUP6 PUSH2 0x49B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x49E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D0E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49FB DUP3 DUP5 PUSH2 0x49BE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520495046532055524920697320616C7265616479206973737565642066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7220612063726564656E7469616C0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A62 PUSH1 0x2F DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4A6D DUP3 PUSH2 0x4A06 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A91 DUP2 PUSH2 0x4A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ACE PUSH1 0x11 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4AD9 DUP3 PUSH2 0x4A98 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AFD DUP2 PUSH2 0x4AC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4B66 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4B29 JUMP JUMPDEST PUSH2 0x4B70 DUP7 DUP4 PUSH2 0x4B29 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BAD PUSH2 0x4BA8 PUSH2 0x4BA3 DUP5 PUSH2 0x3DA4 JUMP JUMPDEST PUSH2 0x4B88 JUMP JUMPDEST PUSH2 0x3DA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BC7 DUP4 PUSH2 0x4B92 JUMP JUMPDEST PUSH2 0x4BDB PUSH2 0x4BD3 DUP3 PUSH2 0x4BB4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4B36 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4BF0 PUSH2 0x4BE3 JUMP JUMPDEST PUSH2 0x4BFB DUP2 DUP5 DUP5 PUSH2 0x4BBE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C1F JUMPI PUSH2 0x4C14 PUSH1 0x0 DUP3 PUSH2 0x4BE8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4C01 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4C64 JUMPI PUSH2 0x4C35 DUP2 PUSH2 0x4B04 JUMP JUMPDEST PUSH2 0x4C3E DUP5 PUSH2 0x4B19 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4C4D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4C61 PUSH2 0x4C59 DUP6 PUSH2 0x4B19 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4C00 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C87 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4C69 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA0 DUP4 DUP4 PUSH2 0x4C76 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CB9 DUP3 PUSH2 0x3CF2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CD2 JUMPI PUSH2 0x4CD1 PUSH2 0x4066 JUMP JUMPDEST JUMPDEST PUSH2 0x4CDC DUP3 SLOAD PUSH2 0x4709 JUMP JUMPDEST PUSH2 0x4CE7 DUP3 DUP3 DUP6 PUSH2 0x4C23 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4D1A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4D08 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4D12 DUP6 DUP3 PUSH2 0x4C94 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4D7A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4D28 DUP7 PUSH2 0x4B04 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4D50 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D2B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4D6D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4D69 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4C76 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4DD8 JUMPI PUSH2 0x4DA9 DUP2 PUSH2 0x4D82 JUMP JUMPDEST PUSH2 0x4DB2 DUP5 PUSH2 0x4B19 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4DC1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4DD5 PUSH2 0x4DCD DUP6 PUSH2 0x4B19 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4C00 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4DE6 DUP3 PUSH2 0x45E4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DFF JUMPI PUSH2 0x4DFE PUSH2 0x4066 JUMP JUMPDEST JUMPDEST PUSH2 0x4E09 DUP3 SLOAD PUSH2 0x4709 JUMP JUMPDEST PUSH2 0x4E14 DUP3 DUP3 DUP6 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4E47 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4E35 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4E3F DUP6 DUP3 PUSH2 0x4C94 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4E55 DUP7 PUSH2 0x4D82 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E7D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4E58 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E9A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E96 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4C76 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x41646472657373206973206E6F7420616E20696E737469747574696F6E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EE5 PUSH1 0x1D DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4EF0 DUP3 PUSH2 0x4EAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F14 DUP2 PUSH2 0x4ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F54 PUSH2 0x4F4F PUSH2 0x4F4A DUP5 PUSH2 0x4F1B JUMP JUMPDEST PUSH2 0x4B88 JUMP JUMPDEST PUSH2 0x4F25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F64 DUP2 PUSH2 0x4F39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4F5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373206973206E6F742061206D616E616765720000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FBB PUSH1 0x18 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4FC6 DUP3 PUSH2 0x4F85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FEA DUP2 PUSH2 0x4FAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726564656E7469616C20697320616C7265616479205245564F4B4544000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5027 PUSH1 0x1D DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x5032 DUP3 PUSH2 0x4FF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5056 DUP2 PUSH2 0x501A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5072 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x45D5 JUMP JUMPDEST PUSH2 0x507F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x45D5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5091 DUP2 DUP5 PUSH2 0x3D49 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x50AA DUP2 PUSH2 0x3E63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50C6 JUMPI PUSH2 0x50C5 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x50D4 DUP5 DUP3 DUP6 ADD PUSH2 0x509B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x50F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x50FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3ED9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5115 DUP2 PUSH2 0x3F03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5131 JUMPI PUSH2 0x5130 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x513F DUP5 DUP3 DUP6 ADD PUSH2 0x5106 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5182 DUP3 PUSH2 0x3DA4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x51B4 JUMPI PUSH2 0x51B3 PUSH2 0x5148 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x51D4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x51E1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x51EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x432D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5200 DUP2 DUP5 PUSH2 0x4600 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x521A DUP2 PUSH2 0x3C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5236 JUMPI PUSH2 0x5235 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5244 DUP5 DUP3 DUP6 ADD PUSH2 0x520B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5262 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x526F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x432D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x528C DUP3 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x5296 DUP2 DUP6 PUSH2 0x5276 JUMP JUMPDEST SWAP4 POP PUSH2 0x52A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D0E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52BE DUP3 DUP5 PUSH2 0x5281 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52DF DUP2 PUSH2 0x52C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x52FA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3ED9 JUMP JUMPDEST PUSH2 0x5307 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x52D6 JUMP JUMPDEST PUSH2 0x5314 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3ED9 JUMP JUMPDEST PUSH2 0x5321 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3ED9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xEE 0xE1 0x23 SHL 0xF9 0xB0 0xD2 PUSH8 0x1D44943DBFE13B2D PUSH11 0xF1C3916AD4DF0BA840728E 0xDA MSTORE8 MUL PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"819:8291:29:-:0;;;1171:4:2;1128:48;;;;;;;;;1091:1:29;1066:26;;2644:55;;;;;;;;;;1857:1:20;2061:7;:21;;;;2669:22:29;:20;;;:22;;:::i;:::-;819:8291;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:30:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;819:8291:29:-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_28":{"entryPoint":6774,"id":28,"parameterSlots":0,"returnSlots":0},"@INSTITUTION_ROLE_7787":{"entryPoint":2462,"id":7787,"parameterSlots":0,"returnSlots":0},"@MANAGER_ROLE_7782":{"entryPoint":7704,"id":7782,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_640":{"entryPoint":6803,"id":640,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_63":{"entryPoint":11279,"id":63,"parameterSlots":0,"returnSlots":0},"@__ERC721_init_885":{"entryPoint":11257,"id":885,"parameterSlots":2,"returnSlots":0},"@__ERC721_init_unchained_913":{"entryPoint":13639,"id":913,"parameterSlots":2,"returnSlots":0},"@__Pausable_init_1976":{"entryPoint":11289,"id":1976,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_1994":{"entryPoint":13700,"id":1994,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_670":{"entryPoint":11307,"id":670,"parameterSlots":0,"returnSlots":0},"@_approve_1729":{"entryPoint":8564,"id":1729,"parameterSlots":3,"returnSlots":0},"@_approve_1803":{"entryPoint":12645,"id":1803,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_8345":{"entryPoint":10280,"id":8345,"parameterSlots":1,"returnSlots":0},"@_checkAuthorized_1349":{"entryPoint":13113,"id":1349,"parameterSlots":3,"returnSlots":0},"@_checkInitializing_538":{"entryPoint":13575,"id":538,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2684":{"entryPoint":14846,"id":2684,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_746":{"entryPoint":10612,"id":746,"parameterSlots":0,"returnSlots":0},"@_checkProxy_730":{"entryPoint":10050,"id":730,"parameterSlots":0,"returnSlots":0},"@_checkRole_129":{"entryPoint":9401,"id":129,"parameterSlots":1,"returnSlots":0},"@_checkRole_150":{"entryPoint":9320,"id":150,"parameterSlots":2,"returnSlots":0},"@_getAccessControlStorage_46":{"entryPoint":9280,"id":46,"parameterSlots":0,"returnSlots":1},"@_getApproved_1276":{"entryPoint":8481,"id":1276,"parameterSlots":1,"returnSlots":1},"@_getERC721Storage_869":{"entryPoint":8305,"id":869,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_615":{"entryPoint":11217,"id":615,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_1950":{"entryPoint":11177,"id":1950,"parameterSlots":0,"returnSlots":1},"@_grantRole_315":{"entryPoint":9421,"id":315,"parameterSlots":2,"returnSlots":1},"@_isAuthorized_1312":{"entryPoint":14306,"id":1312,"parameterSlots":3,"returnSlots":1},"@_isInitializing_606":{"entryPoint":14907,"id":606,"parameterSlots":0,"returnSlots":1},"@_isMinted_8297":{"entryPoint":8582,"id":8297,"parameterSlots":1,"returnSlots":1},"@_mint_1525":{"entryPoint":10918,"id":1525,"parameterSlots":2,"returnSlots":0},"@_msgSender_1906":{"entryPoint":8556,"id":1906,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_3325":{"entryPoint":11167,"id":3325,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_3317":{"entryPoint":10812,"id":3317,"parameterSlots":0,"returnSlots":0},"@_ownerOf_1256":{"entryPoint":12570,"id":1256,"parameterSlots":1,"returnSlots":1},"@_pause_2075":{"entryPoint":11317,"id":2075,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_2038":{"entryPoint":10747,"id":2038,"parameterSlots":0,"returnSlots":0},"@_requireOwned_1877":{"entryPoint":8345,"id":1877,"parameterSlots":1,"returnSlots":1},"@_requirePaused_2051":{"entryPoint":13309,"id":2051,"parameterSlots":0,"returnSlots":0},"@_revert_3193":{"entryPoint":15326,"id":3193,"parameterSlots":1,"returnSlots":0},"@_revokeRole_361":{"entryPoint":9678,"id":361,"parameterSlots":2,"returnSlots":1},"@_setApprovalForAll_1848":{"entryPoint":11529,"id":1848,"parameterSlots":3,"returnSlots":0},"@_setImplementation_2464":{"entryPoint":14509,"id":2464,"parameterSlots":1,"returnSlots":0},"@_throwError_4128":{"entryPoint":13844,"id":4128,"parameterSlots":2,"returnSlots":0},"@_unpause_2099":{"entryPoint":9936,"id":2099,"parameterSlots":0,"returnSlots":0},"@_update_1475":{"entryPoint":8723,"id":1475,"parameterSlots":3,"returnSlots":1},"@_upgradeToAndCallUUPS_797":{"entryPoint":10325,"id":797,"parameterSlots":2,"returnSlots":0},"@approve_1085":{"entryPoint":2440,"id":1085,"parameterSlots":2,"returnSlots":0},"@balanceOf_979":{"entryPoint":4681,"id":979,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2934":{"entryPoint":11911,"id":2934,"parameterSlots":5,"returnSlots":0},"@credentials_7807":{"entryPoint":7171,"id":7807,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_3111":{"entryPoint":14714,"id":3111,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_3372":{"entryPoint":14499,"id":3372,"parameterSlots":1,"returnSlots":1},"@getApproved_1102":{"entryPoint":2412,"id":1102,"parameterSlots":1,"returnSlots":1},"@getCurrentTokenId_7777":{"entryPoint":10908,"id":7777,"parameterSlots":0,"returnSlots":1},"@getImplementation_2437":{"entryPoint":13373,"id":2437,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_171":{"entryPoint":3079,"id":171,"parameterSlots":1,"returnSlots":1},"@grantRole_190":{"entryPoint":3539,"id":190,"parameterSlots":2,"returnSlots":0},"@hasRole_116":{"entryPoint":5990,"id":116,"parameterSlots":2,"returnSlots":1},"@incrementTokenId_7769":{"entryPoint":10882,"id":7769,"parameterSlots":0,"returnSlots":0},"@initialize_7885":{"entryPoint":5153,"id":7885,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_1142":{"entryPoint":7542,"id":1142,"parameterSlots":2,"returnSlots":1},"@issueCredential_8176":{"entryPoint":3862,"id":8176,"parameterSlots":4,"returnSlots":0},"@name_1008":{"entryPoint":2251,"id":1008,"parameterSlots":0,"returnSlots":1},"@ownerOf_992":{"entryPoint":4663,"id":992,"parameterSlots":1,"returnSlots":1},"@pause_8327":{"entryPoint":5696,"id":8327,"parameterSlots":0,"returnSlots":0},"@paused_2026":{"entryPoint":4626,"id":2026,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_688":{"entryPoint":3811,"id":688,"parameterSlots":0,"returnSlots":1},"@recover_3885":{"entryPoint":11485,"id":3885,"parameterSlots":2,"returnSlots":1},"@registerInstitution_8031":{"entryPoint":7740,"id":8031,"parameterSlots":1,"returnSlots":0},"@registerManager_7959":{"entryPoint":3125,"id":7959,"parameterSlots":1,"returnSlots":0},"@renounceRole_232":{"entryPoint":3573,"id":232,"parameterSlots":2,"returnSlots":0},"@revokeCredential_8273":{"entryPoint":6111,"id":8273,"parameterSlots":2,"returnSlots":0},"@revokeInstitution_8059":{"entryPoint":4882,"id":8059,"parameterSlots":2,"returnSlots":0},"@revokeManager_7987":{"entryPoint":5748,"id":7987,"parameterSlots":2,"returnSlots":0},"@revokeRole_209":{"entryPoint":7137,"id":209,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1206":{"entryPoint":3748,"id":1206,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1236":{"entryPoint":6860,"id":1236,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1118":{"entryPoint":6781,"id":1118,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2139":{"entryPoint":14200,"id":2139,"parameterSlots":1,"returnSlots":1},"@supportsInterface_8361":{"entryPoint":2233,"id":8361,"parameterSlots":1,"returnSlots":1},"@supportsInterface_91":{"entryPoint":8183,"id":91,"parameterSlots":1,"returnSlots":1},"@supportsInterface_944":{"entryPoint":12344,"id":944,"parameterSlots":1,"returnSlots":1},"@symbol_1024":{"entryPoint":6518,"id":1024,"parameterSlots":0,"returnSlots":1},"@toEthSignedMessageHash_4144":{"entryPoint":11431,"id":4144,"parameterSlots":1,"returnSlots":1},"@tokenURI_8318":{"entryPoint":6897,"id":8318,"parameterSlots":1,"returnSlots":1},"@transferFrom_1188":{"entryPoint":2821,"id":1188,"parameterSlots":3,"returnSlots":0},"@tryRecover_3855":{"entryPoint":13752,"id":3855,"parameterSlots":2,"returnSlots":3},"@tryRecover_4043":{"entryPoint":14939,"id":4043,"parameterSlots":4,"returnSlots":3},"@unpause_8336":{"entryPoint":3696,"id":8336,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_2500":{"entryPoint":13460,"id":2500,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_708":{"entryPoint":3780,"id":708,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_3151":{"entryPoint":15183,"id":3151,"parameterSlots":3,"returnSlots":1},"@verifyCredential_8217":{"entryPoint":2498,"id":8217,"parameterSlots":2,"returnSlots":1},"@verifySignature_8089":{"entryPoint":6679,"id":8089,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":16673,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":16926,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":15994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":20635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":17557,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":16154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":20742,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":15482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":21003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":16739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":16992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":15813,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":16367,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":20656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":18074,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":16239,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":17642,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":17578,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":16785,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":17239,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptrt_bytes32t_bytes_memory_ptr":{"entryPoint":17038,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":16015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":16322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":20763,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":16412,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_addresst_bytes_memory_ptr":{"entryPoint":17423,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes4":{"entryPoint":15503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":21024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":15834,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bytes32":{"entryPoint":16175,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":17331,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":15929,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":15560,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":16089,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":17920,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_CredentialStatus_$7802_to_t_uint8_fromStack":{"entryPoint":17877,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":20315,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216_to_t_string_memory_ptr_fromStack":{"entryPoint":20184,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb_to_t_string_memory_ptr_fromStack":{"entryPoint":20398,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack":{"entryPoint":19137,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3_to_t_string_memory_ptr_fromStack":{"entryPoint":18692,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack":{"entryPoint":18275,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53_to_t_string_memory_ptr_fromStack":{"entryPoint":19029,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4_to_t_string_memory_ptr_fromStack":{"entryPoint":20506,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1_to_t_string_memory_ptr_fromStack":{"entryPoint":18584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049_to_t_string_memory_ptr_fromStack":{"entryPoint":18438,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563_to_t_string_memory_ptr_fromStack":{"entryPoint":18800,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":17197,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":21206,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15944,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":20927,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":20701,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":21069,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":18342,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":15575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":16104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":21221,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_enum$_CredentialStatus_$7802_t_enum$_CredentialStatus_$7802_t_string_memory_ptr__to_t_uint8_t_uint8_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20573,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":20330,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15746,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20219,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20433,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19172,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18727,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18310,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19064,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20541,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18473,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18835,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":17212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_enum$_CredentialStatus_$7802_t_bytes_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_uint8_t_bytes_memory_ptr_t_address__fromStack_reversed":{"entryPoint":17977,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":16582,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":15395,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":16609,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":16877,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":19842,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":19204,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":17892,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":15602,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":17903,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21110,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":15613,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18867,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":19863,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":19491,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":15911,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":15548,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":16079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":15415,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_CredentialStatus_$7802":{"entryPoint":17840,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":20251,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":15879,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":15780,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":20261,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":21193,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":19456,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_enum$_CredentialStatus_$7802_to_t_uint8":{"entryPoint":17859,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":20281,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":19346,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":19933,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":19632,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":16658,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":15630,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":19225,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":18185,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":19604,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":16533,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":19336,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":20855,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":19574,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":20808,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":17773,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":18138,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":16486,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":19380,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":16476,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":16481,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":15410,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":15405,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":15672,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":19241,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":19561,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":19432,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216":{"entryPoint":20143,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb":{"entryPoint":20357,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7":{"entryPoint":19096,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3":{"entryPoint":18651,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726":{"entryPoint":18234,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53":{"entryPoint":18950,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4":{"entryPoint":20465,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1":{"entryPoint":18505,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049":{"entryPoint":18397,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563":{"entryPoint":18759,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":19254,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":19390,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_CredentialStatus_$7802":{"entryPoint":17820,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":15971,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":17534,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":16131,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":15459,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":15790,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":19427,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:44158:30","nodeType":"YulBlock","src":"0:44158:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"378:105:30","nodeType":"YulBlock","src":"378:105:30","statements":[{"nativeSrc":"388:89:30","nodeType":"YulAssignment","src":"388:89:30","value":{"arguments":[{"name":"value","nativeSrc":"403:5:30","nodeType":"YulIdentifier","src":"403:5:30"},{"kind":"number","nativeSrc":"410:66:30","nodeType":"YulLiteral","src":"410:66:30","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:30","nodeType":"YulIdentifier","src":"399:3:30"},"nativeSrc":"399:78:30","nodeType":"YulFunctionCall","src":"399:78:30"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:30","nodeType":"YulIdentifier","src":"388:7:30"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:30","nodeType":"YulTypedName","src":"360:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:30","nodeType":"YulTypedName","src":"370:7:30","type":""}],"src":"334:149:30"},{"body":{"nativeSrc":"531:78:30","nodeType":"YulBlock","src":"531:78:30","statements":[{"body":{"nativeSrc":"587:16:30","nodeType":"YulBlock","src":"587:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:30","nodeType":"YulLiteral","src":"596:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:30","nodeType":"YulLiteral","src":"599:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:30","nodeType":"YulIdentifier","src":"589:6:30"},"nativeSrc":"589:12:30","nodeType":"YulFunctionCall","src":"589:12:30"},"nativeSrc":"589:12:30","nodeType":"YulExpressionStatement","src":"589:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:30","nodeType":"YulIdentifier","src":"554:5:30"},{"arguments":[{"name":"value","nativeSrc":"578:5:30","nodeType":"YulIdentifier","src":"578:5:30"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:30","nodeType":"YulIdentifier","src":"561:16:30"},"nativeSrc":"561:23:30","nodeType":"YulFunctionCall","src":"561:23:30"}],"functionName":{"name":"eq","nativeSrc":"551:2:30","nodeType":"YulIdentifier","src":"551:2:30"},"nativeSrc":"551:34:30","nodeType":"YulFunctionCall","src":"551:34:30"}],"functionName":{"name":"iszero","nativeSrc":"544:6:30","nodeType":"YulIdentifier","src":"544:6:30"},"nativeSrc":"544:42:30","nodeType":"YulFunctionCall","src":"544:42:30"},"nativeSrc":"541:62:30","nodeType":"YulIf","src":"541:62:30"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:30","nodeType":"YulTypedName","src":"524:5:30","type":""}],"src":"489:120:30"},{"body":{"nativeSrc":"666:86:30","nodeType":"YulBlock","src":"666:86:30","statements":[{"nativeSrc":"676:29:30","nodeType":"YulAssignment","src":"676:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:30","nodeType":"YulIdentifier","src":"698:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:30","nodeType":"YulIdentifier","src":"685:12:30"},"nativeSrc":"685:20:30","nodeType":"YulFunctionCall","src":"685:20:30"},"variableNames":[{"name":"value","nativeSrc":"676:5:30","nodeType":"YulIdentifier","src":"676:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:30","nodeType":"YulIdentifier","src":"740:5:30"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:30","nodeType":"YulIdentifier","src":"714:25:30"},"nativeSrc":"714:32:30","nodeType":"YulFunctionCall","src":"714:32:30"},"nativeSrc":"714:32:30","nodeType":"YulExpressionStatement","src":"714:32:30"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:30","nodeType":"YulTypedName","src":"644:6:30","type":""},{"name":"end","nativeSrc":"652:3:30","nodeType":"YulTypedName","src":"652:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:30","nodeType":"YulTypedName","src":"660:5:30","type":""}],"src":"615:137:30"},{"body":{"nativeSrc":"823:262:30","nodeType":"YulBlock","src":"823:262:30","statements":[{"body":{"nativeSrc":"869:83:30","nodeType":"YulBlock","src":"869:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:30","nodeType":"YulIdentifier","src":"871:77:30"},"nativeSrc":"871:79:30","nodeType":"YulFunctionCall","src":"871:79:30"},"nativeSrc":"871:79:30","nodeType":"YulExpressionStatement","src":"871:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:30","nodeType":"YulIdentifier","src":"844:7:30"},{"name":"headStart","nativeSrc":"853:9:30","nodeType":"YulIdentifier","src":"853:9:30"}],"functionName":{"name":"sub","nativeSrc":"840:3:30","nodeType":"YulIdentifier","src":"840:3:30"},"nativeSrc":"840:23:30","nodeType":"YulFunctionCall","src":"840:23:30"},{"kind":"number","nativeSrc":"865:2:30","nodeType":"YulLiteral","src":"865:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:30","nodeType":"YulIdentifier","src":"836:3:30"},"nativeSrc":"836:32:30","nodeType":"YulFunctionCall","src":"836:32:30"},"nativeSrc":"833:119:30","nodeType":"YulIf","src":"833:119:30"},{"nativeSrc":"962:116:30","nodeType":"YulBlock","src":"962:116:30","statements":[{"nativeSrc":"977:15:30","nodeType":"YulVariableDeclaration","src":"977:15:30","value":{"kind":"number","nativeSrc":"991:1:30","nodeType":"YulLiteral","src":"991:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:30","nodeType":"YulTypedName","src":"981:6:30","type":""}]},{"nativeSrc":"1006:62:30","nodeType":"YulAssignment","src":"1006:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:30","nodeType":"YulIdentifier","src":"1040:9:30"},{"name":"offset","nativeSrc":"1051:6:30","nodeType":"YulIdentifier","src":"1051:6:30"}],"functionName":{"name":"add","nativeSrc":"1036:3:30","nodeType":"YulIdentifier","src":"1036:3:30"},"nativeSrc":"1036:22:30","nodeType":"YulFunctionCall","src":"1036:22:30"},{"name":"dataEnd","nativeSrc":"1060:7:30","nodeType":"YulIdentifier","src":"1060:7:30"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:30","nodeType":"YulIdentifier","src":"1016:19:30"},"nativeSrc":"1016:52:30","nodeType":"YulFunctionCall","src":"1016:52:30"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:30","nodeType":"YulIdentifier","src":"1006:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:30","nodeType":"YulTypedName","src":"793:9:30","type":""},{"name":"dataEnd","nativeSrc":"804:7:30","nodeType":"YulTypedName","src":"804:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:30","nodeType":"YulTypedName","src":"816:6:30","type":""}],"src":"758:327:30"},{"body":{"nativeSrc":"1133:48:30","nodeType":"YulBlock","src":"1133:48:30","statements":[{"nativeSrc":"1143:32:30","nodeType":"YulAssignment","src":"1143:32:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:30","nodeType":"YulIdentifier","src":"1168:5:30"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:30","nodeType":"YulIdentifier","src":"1161:6:30"},"nativeSrc":"1161:13:30","nodeType":"YulFunctionCall","src":"1161:13:30"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:30","nodeType":"YulIdentifier","src":"1154:6:30"},"nativeSrc":"1154:21:30","nodeType":"YulFunctionCall","src":"1154:21:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:30","nodeType":"YulIdentifier","src":"1143:7:30"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:30","nodeType":"YulTypedName","src":"1115:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:30","nodeType":"YulTypedName","src":"1125:7:30","type":""}],"src":"1091:90:30"},{"body":{"nativeSrc":"1246:50:30","nodeType":"YulBlock","src":"1246:50:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:30","nodeType":"YulIdentifier","src":"1263:3:30"},{"arguments":[{"name":"value","nativeSrc":"1283:5:30","nodeType":"YulIdentifier","src":"1283:5:30"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:30","nodeType":"YulIdentifier","src":"1268:14:30"},"nativeSrc":"1268:21:30","nodeType":"YulFunctionCall","src":"1268:21:30"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:30","nodeType":"YulIdentifier","src":"1256:6:30"},"nativeSrc":"1256:34:30","nodeType":"YulFunctionCall","src":"1256:34:30"},"nativeSrc":"1256:34:30","nodeType":"YulExpressionStatement","src":"1256:34:30"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:30","nodeType":"YulTypedName","src":"1234:5:30","type":""},{"name":"pos","nativeSrc":"1241:3:30","nodeType":"YulTypedName","src":"1241:3:30","type":""}],"src":"1187:109:30"},{"body":{"nativeSrc":"1394:118:30","nodeType":"YulBlock","src":"1394:118:30","statements":[{"nativeSrc":"1404:26:30","nodeType":"YulAssignment","src":"1404:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:30","nodeType":"YulIdentifier","src":"1416:9:30"},{"kind":"number","nativeSrc":"1427:2:30","nodeType":"YulLiteral","src":"1427:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:30","nodeType":"YulIdentifier","src":"1412:3:30"},"nativeSrc":"1412:18:30","nodeType":"YulFunctionCall","src":"1412:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:30","nodeType":"YulIdentifier","src":"1404:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:30","nodeType":"YulIdentifier","src":"1478:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:30","nodeType":"YulIdentifier","src":"1491:9:30"},{"kind":"number","nativeSrc":"1502:1:30","nodeType":"YulLiteral","src":"1502:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:30","nodeType":"YulIdentifier","src":"1487:3:30"},"nativeSrc":"1487:17:30","nodeType":"YulFunctionCall","src":"1487:17:30"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:30","nodeType":"YulIdentifier","src":"1440:37:30"},"nativeSrc":"1440:65:30","nodeType":"YulFunctionCall","src":"1440:65:30"},"nativeSrc":"1440:65:30","nodeType":"YulExpressionStatement","src":"1440:65:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:30","nodeType":"YulTypedName","src":"1366:9:30","type":""},{"name":"value0","nativeSrc":"1378:6:30","nodeType":"YulTypedName","src":"1378:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:30","nodeType":"YulTypedName","src":"1389:4:30","type":""}],"src":"1302:210:30"},{"body":{"nativeSrc":"1577:40:30","nodeType":"YulBlock","src":"1577:40:30","statements":[{"nativeSrc":"1588:22:30","nodeType":"YulAssignment","src":"1588:22:30","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:30","nodeType":"YulIdentifier","src":"1604:5:30"}],"functionName":{"name":"mload","nativeSrc":"1598:5:30","nodeType":"YulIdentifier","src":"1598:5:30"},"nativeSrc":"1598:12:30","nodeType":"YulFunctionCall","src":"1598:12:30"},"variableNames":[{"name":"length","nativeSrc":"1588:6:30","nodeType":"YulIdentifier","src":"1588:6:30"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:30","nodeType":"YulTypedName","src":"1560:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:30","nodeType":"YulTypedName","src":"1570:6:30","type":""}],"src":"1518:99:30"},{"body":{"nativeSrc":"1719:73:30","nodeType":"YulBlock","src":"1719:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:30","nodeType":"YulIdentifier","src":"1736:3:30"},{"name":"length","nativeSrc":"1741:6:30","nodeType":"YulIdentifier","src":"1741:6:30"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:30","nodeType":"YulIdentifier","src":"1729:6:30"},"nativeSrc":"1729:19:30","nodeType":"YulFunctionCall","src":"1729:19:30"},"nativeSrc":"1729:19:30","nodeType":"YulExpressionStatement","src":"1729:19:30"},{"nativeSrc":"1757:29:30","nodeType":"YulAssignment","src":"1757:29:30","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:30","nodeType":"YulIdentifier","src":"1776:3:30"},{"kind":"number","nativeSrc":"1781:4:30","nodeType":"YulLiteral","src":"1781:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:30","nodeType":"YulIdentifier","src":"1772:3:30"},"nativeSrc":"1772:14:30","nodeType":"YulFunctionCall","src":"1772:14:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:30","nodeType":"YulIdentifier","src":"1757:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:30","nodeType":"YulTypedName","src":"1691:3:30","type":""},{"name":"length","nativeSrc":"1696:6:30","nodeType":"YulTypedName","src":"1696:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:30","nodeType":"YulTypedName","src":"1707:11:30","type":""}],"src":"1623:169:30"},{"body":{"nativeSrc":"1860:186:30","nodeType":"YulBlock","src":"1860:186:30","statements":[{"nativeSrc":"1871:10:30","nodeType":"YulVariableDeclaration","src":"1871:10:30","value":{"kind":"number","nativeSrc":"1880:1:30","nodeType":"YulLiteral","src":"1880:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:30","nodeType":"YulTypedName","src":"1875:1:30","type":""}]},{"body":{"nativeSrc":"1940:63:30","nodeType":"YulBlock","src":"1940:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:30","nodeType":"YulIdentifier","src":"1965:3:30"},{"name":"i","nativeSrc":"1970:1:30","nodeType":"YulIdentifier","src":"1970:1:30"}],"functionName":{"name":"add","nativeSrc":"1961:3:30","nodeType":"YulIdentifier","src":"1961:3:30"},"nativeSrc":"1961:11:30","nodeType":"YulFunctionCall","src":"1961:11:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:30","nodeType":"YulIdentifier","src":"1984:3:30"},{"name":"i","nativeSrc":"1989:1:30","nodeType":"YulIdentifier","src":"1989:1:30"}],"functionName":{"name":"add","nativeSrc":"1980:3:30","nodeType":"YulIdentifier","src":"1980:3:30"},"nativeSrc":"1980:11:30","nodeType":"YulFunctionCall","src":"1980:11:30"}],"functionName":{"name":"mload","nativeSrc":"1974:5:30","nodeType":"YulIdentifier","src":"1974:5:30"},"nativeSrc":"1974:18:30","nodeType":"YulFunctionCall","src":"1974:18:30"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:30","nodeType":"YulIdentifier","src":"1954:6:30"},"nativeSrc":"1954:39:30","nodeType":"YulFunctionCall","src":"1954:39:30"},"nativeSrc":"1954:39:30","nodeType":"YulExpressionStatement","src":"1954:39:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:30","nodeType":"YulIdentifier","src":"1901:1:30"},{"name":"length","nativeSrc":"1904:6:30","nodeType":"YulIdentifier","src":"1904:6:30"}],"functionName":{"name":"lt","nativeSrc":"1898:2:30","nodeType":"YulIdentifier","src":"1898:2:30"},"nativeSrc":"1898:13:30","nodeType":"YulFunctionCall","src":"1898:13:30"},"nativeSrc":"1890:113:30","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:30","nodeType":"YulBlock","src":"1912:19:30","statements":[{"nativeSrc":"1914:15:30","nodeType":"YulAssignment","src":"1914:15:30","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:30","nodeType":"YulIdentifier","src":"1923:1:30"},{"kind":"number","nativeSrc":"1926:2:30","nodeType":"YulLiteral","src":"1926:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:30","nodeType":"YulIdentifier","src":"1919:3:30"},"nativeSrc":"1919:10:30","nodeType":"YulFunctionCall","src":"1919:10:30"},"variableNames":[{"name":"i","nativeSrc":"1914:1:30","nodeType":"YulIdentifier","src":"1914:1:30"}]}]},"pre":{"nativeSrc":"1894:3:30","nodeType":"YulBlock","src":"1894:3:30","statements":[]},"src":"1890:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:30","nodeType":"YulIdentifier","src":"2023:3:30"},{"name":"length","nativeSrc":"2028:6:30","nodeType":"YulIdentifier","src":"2028:6:30"}],"functionName":{"name":"add","nativeSrc":"2019:3:30","nodeType":"YulIdentifier","src":"2019:3:30"},"nativeSrc":"2019:16:30","nodeType":"YulFunctionCall","src":"2019:16:30"},{"kind":"number","nativeSrc":"2037:1:30","nodeType":"YulLiteral","src":"2037:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:30","nodeType":"YulIdentifier","src":"2012:6:30"},"nativeSrc":"2012:27:30","nodeType":"YulFunctionCall","src":"2012:27:30"},"nativeSrc":"2012:27:30","nodeType":"YulExpressionStatement","src":"2012:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:30","nodeType":"YulTypedName","src":"1842:3:30","type":""},{"name":"dst","nativeSrc":"1847:3:30","nodeType":"YulTypedName","src":"1847:3:30","type":""},{"name":"length","nativeSrc":"1852:6:30","nodeType":"YulTypedName","src":"1852:6:30","type":""}],"src":"1798:248:30"},{"body":{"nativeSrc":"2100:54:30","nodeType":"YulBlock","src":"2100:54:30","statements":[{"nativeSrc":"2110:38:30","nodeType":"YulAssignment","src":"2110:38:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:30","nodeType":"YulIdentifier","src":"2128:5:30"},{"kind":"number","nativeSrc":"2135:2:30","nodeType":"YulLiteral","src":"2135:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:30","nodeType":"YulIdentifier","src":"2124:3:30"},"nativeSrc":"2124:14:30","nodeType":"YulFunctionCall","src":"2124:14:30"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:30","nodeType":"YulLiteral","src":"2144:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:30","nodeType":"YulIdentifier","src":"2140:3:30"},"nativeSrc":"2140:7:30","nodeType":"YulFunctionCall","src":"2140:7:30"}],"functionName":{"name":"and","nativeSrc":"2120:3:30","nodeType":"YulIdentifier","src":"2120:3:30"},"nativeSrc":"2120:28:30","nodeType":"YulFunctionCall","src":"2120:28:30"},"variableNames":[{"name":"result","nativeSrc":"2110:6:30","nodeType":"YulIdentifier","src":"2110:6:30"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:30","nodeType":"YulTypedName","src":"2083:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:30","nodeType":"YulTypedName","src":"2093:6:30","type":""}],"src":"2052:102:30"},{"body":{"nativeSrc":"2252:285:30","nodeType":"YulBlock","src":"2252:285:30","statements":[{"nativeSrc":"2262:53:30","nodeType":"YulVariableDeclaration","src":"2262:53:30","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:30","nodeType":"YulIdentifier","src":"2309:5:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:30","nodeType":"YulIdentifier","src":"2276:32:30"},"nativeSrc":"2276:39:30","nodeType":"YulFunctionCall","src":"2276:39:30"},"variables":[{"name":"length","nativeSrc":"2266:6:30","nodeType":"YulTypedName","src":"2266:6:30","type":""}]},{"nativeSrc":"2324:78:30","nodeType":"YulAssignment","src":"2324:78:30","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:30","nodeType":"YulIdentifier","src":"2390:3:30"},{"name":"length","nativeSrc":"2395:6:30","nodeType":"YulIdentifier","src":"2395:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:30","nodeType":"YulIdentifier","src":"2331:58:30"},"nativeSrc":"2331:71:30","nodeType":"YulFunctionCall","src":"2331:71:30"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:30","nodeType":"YulIdentifier","src":"2324:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:30","nodeType":"YulIdentifier","src":"2450:5:30"},{"kind":"number","nativeSrc":"2457:4:30","nodeType":"YulLiteral","src":"2457:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:30","nodeType":"YulIdentifier","src":"2446:3:30"},"nativeSrc":"2446:16:30","nodeType":"YulFunctionCall","src":"2446:16:30"},{"name":"pos","nativeSrc":"2464:3:30","nodeType":"YulIdentifier","src":"2464:3:30"},{"name":"length","nativeSrc":"2469:6:30","nodeType":"YulIdentifier","src":"2469:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:30","nodeType":"YulIdentifier","src":"2411:34:30"},"nativeSrc":"2411:65:30","nodeType":"YulFunctionCall","src":"2411:65:30"},"nativeSrc":"2411:65:30","nodeType":"YulExpressionStatement","src":"2411:65:30"},{"nativeSrc":"2485:46:30","nodeType":"YulAssignment","src":"2485:46:30","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:30","nodeType":"YulIdentifier","src":"2496:3:30"},{"arguments":[{"name":"length","nativeSrc":"2523:6:30","nodeType":"YulIdentifier","src":"2523:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:30","nodeType":"YulIdentifier","src":"2501:21:30"},"nativeSrc":"2501:29:30","nodeType":"YulFunctionCall","src":"2501:29:30"}],"functionName":{"name":"add","nativeSrc":"2492:3:30","nodeType":"YulIdentifier","src":"2492:3:30"},"nativeSrc":"2492:39:30","nodeType":"YulFunctionCall","src":"2492:39:30"},"variableNames":[{"name":"end","nativeSrc":"2485:3:30","nodeType":"YulIdentifier","src":"2485:3:30"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:30","nodeType":"YulTypedName","src":"2233:5:30","type":""},{"name":"pos","nativeSrc":"2240:3:30","nodeType":"YulTypedName","src":"2240:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:30","nodeType":"YulTypedName","src":"2248:3:30","type":""}],"src":"2160:377:30"},{"body":{"nativeSrc":"2661:195:30","nodeType":"YulBlock","src":"2661:195:30","statements":[{"nativeSrc":"2671:26:30","nodeType":"YulAssignment","src":"2671:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:30","nodeType":"YulIdentifier","src":"2683:9:30"},{"kind":"number","nativeSrc":"2694:2:30","nodeType":"YulLiteral","src":"2694:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:30","nodeType":"YulIdentifier","src":"2679:3:30"},"nativeSrc":"2679:18:30","nodeType":"YulFunctionCall","src":"2679:18:30"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:30","nodeType":"YulIdentifier","src":"2671:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:30","nodeType":"YulIdentifier","src":"2718:9:30"},{"kind":"number","nativeSrc":"2729:1:30","nodeType":"YulLiteral","src":"2729:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:30","nodeType":"YulIdentifier","src":"2714:3:30"},"nativeSrc":"2714:17:30","nodeType":"YulFunctionCall","src":"2714:17:30"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:30","nodeType":"YulIdentifier","src":"2737:4:30"},{"name":"headStart","nativeSrc":"2743:9:30","nodeType":"YulIdentifier","src":"2743:9:30"}],"functionName":{"name":"sub","nativeSrc":"2733:3:30","nodeType":"YulIdentifier","src":"2733:3:30"},"nativeSrc":"2733:20:30","nodeType":"YulFunctionCall","src":"2733:20:30"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:30","nodeType":"YulIdentifier","src":"2707:6:30"},"nativeSrc":"2707:47:30","nodeType":"YulFunctionCall","src":"2707:47:30"},"nativeSrc":"2707:47:30","nodeType":"YulExpressionStatement","src":"2707:47:30"},{"nativeSrc":"2763:86:30","nodeType":"YulAssignment","src":"2763:86:30","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:30","nodeType":"YulIdentifier","src":"2835:6:30"},{"name":"tail","nativeSrc":"2844:4:30","nodeType":"YulIdentifier","src":"2844:4:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:30","nodeType":"YulIdentifier","src":"2771:63:30"},"nativeSrc":"2771:78:30","nodeType":"YulFunctionCall","src":"2771:78:30"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:30","nodeType":"YulIdentifier","src":"2763:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:30","nodeType":"YulTypedName","src":"2633:9:30","type":""},{"name":"value0","nativeSrc":"2645:6:30","nodeType":"YulTypedName","src":"2645:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:30","nodeType":"YulTypedName","src":"2656:4:30","type":""}],"src":"2543:313:30"},{"body":{"nativeSrc":"2907:32:30","nodeType":"YulBlock","src":"2907:32:30","statements":[{"nativeSrc":"2917:16:30","nodeType":"YulAssignment","src":"2917:16:30","value":{"name":"value","nativeSrc":"2928:5:30","nodeType":"YulIdentifier","src":"2928:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:30","nodeType":"YulIdentifier","src":"2917:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:30","nodeType":"YulTypedName","src":"2889:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:30","nodeType":"YulTypedName","src":"2899:7:30","type":""}],"src":"2862:77:30"},{"body":{"nativeSrc":"2988:79:30","nodeType":"YulBlock","src":"2988:79:30","statements":[{"body":{"nativeSrc":"3045:16:30","nodeType":"YulBlock","src":"3045:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:30","nodeType":"YulLiteral","src":"3054:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:30","nodeType":"YulLiteral","src":"3057:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:30","nodeType":"YulIdentifier","src":"3047:6:30"},"nativeSrc":"3047:12:30","nodeType":"YulFunctionCall","src":"3047:12:30"},"nativeSrc":"3047:12:30","nodeType":"YulExpressionStatement","src":"3047:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:30","nodeType":"YulIdentifier","src":"3011:5:30"},{"arguments":[{"name":"value","nativeSrc":"3036:5:30","nodeType":"YulIdentifier","src":"3036:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:30","nodeType":"YulIdentifier","src":"3018:17:30"},"nativeSrc":"3018:24:30","nodeType":"YulFunctionCall","src":"3018:24:30"}],"functionName":{"name":"eq","nativeSrc":"3008:2:30","nodeType":"YulIdentifier","src":"3008:2:30"},"nativeSrc":"3008:35:30","nodeType":"YulFunctionCall","src":"3008:35:30"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:30","nodeType":"YulIdentifier","src":"3001:6:30"},"nativeSrc":"3001:43:30","nodeType":"YulFunctionCall","src":"3001:43:30"},"nativeSrc":"2998:63:30","nodeType":"YulIf","src":"2998:63:30"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:30","nodeType":"YulTypedName","src":"2981:5:30","type":""}],"src":"2945:122:30"},{"body":{"nativeSrc":"3125:87:30","nodeType":"YulBlock","src":"3125:87:30","statements":[{"nativeSrc":"3135:29:30","nodeType":"YulAssignment","src":"3135:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:30","nodeType":"YulIdentifier","src":"3157:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:30","nodeType":"YulIdentifier","src":"3144:12:30"},"nativeSrc":"3144:20:30","nodeType":"YulFunctionCall","src":"3144:20:30"},"variableNames":[{"name":"value","nativeSrc":"3135:5:30","nodeType":"YulIdentifier","src":"3135:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:30","nodeType":"YulIdentifier","src":"3200:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:30","nodeType":"YulIdentifier","src":"3173:26:30"},"nativeSrc":"3173:33:30","nodeType":"YulFunctionCall","src":"3173:33:30"},"nativeSrc":"3173:33:30","nodeType":"YulExpressionStatement","src":"3173:33:30"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:30","nodeType":"YulTypedName","src":"3103:6:30","type":""},{"name":"end","nativeSrc":"3111:3:30","nodeType":"YulTypedName","src":"3111:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:30","nodeType":"YulTypedName","src":"3119:5:30","type":""}],"src":"3073:139:30"},{"body":{"nativeSrc":"3284:263:30","nodeType":"YulBlock","src":"3284:263:30","statements":[{"body":{"nativeSrc":"3330:83:30","nodeType":"YulBlock","src":"3330:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:30","nodeType":"YulIdentifier","src":"3332:77:30"},"nativeSrc":"3332:79:30","nodeType":"YulFunctionCall","src":"3332:79:30"},"nativeSrc":"3332:79:30","nodeType":"YulExpressionStatement","src":"3332:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:30","nodeType":"YulIdentifier","src":"3305:7:30"},{"name":"headStart","nativeSrc":"3314:9:30","nodeType":"YulIdentifier","src":"3314:9:30"}],"functionName":{"name":"sub","nativeSrc":"3301:3:30","nodeType":"YulIdentifier","src":"3301:3:30"},"nativeSrc":"3301:23:30","nodeType":"YulFunctionCall","src":"3301:23:30"},{"kind":"number","nativeSrc":"3326:2:30","nodeType":"YulLiteral","src":"3326:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:30","nodeType":"YulIdentifier","src":"3297:3:30"},"nativeSrc":"3297:32:30","nodeType":"YulFunctionCall","src":"3297:32:30"},"nativeSrc":"3294:119:30","nodeType":"YulIf","src":"3294:119:30"},{"nativeSrc":"3423:117:30","nodeType":"YulBlock","src":"3423:117:30","statements":[{"nativeSrc":"3438:15:30","nodeType":"YulVariableDeclaration","src":"3438:15:30","value":{"kind":"number","nativeSrc":"3452:1:30","nodeType":"YulLiteral","src":"3452:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:30","nodeType":"YulTypedName","src":"3442:6:30","type":""}]},{"nativeSrc":"3467:63:30","nodeType":"YulAssignment","src":"3467:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:30","nodeType":"YulIdentifier","src":"3502:9:30"},{"name":"offset","nativeSrc":"3513:6:30","nodeType":"YulIdentifier","src":"3513:6:30"}],"functionName":{"name":"add","nativeSrc":"3498:3:30","nodeType":"YulIdentifier","src":"3498:3:30"},"nativeSrc":"3498:22:30","nodeType":"YulFunctionCall","src":"3498:22:30"},{"name":"dataEnd","nativeSrc":"3522:7:30","nodeType":"YulIdentifier","src":"3522:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:30","nodeType":"YulIdentifier","src":"3477:20:30"},"nativeSrc":"3477:53:30","nodeType":"YulFunctionCall","src":"3477:53:30"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:30","nodeType":"YulIdentifier","src":"3467:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:30","nodeType":"YulTypedName","src":"3254:9:30","type":""},{"name":"dataEnd","nativeSrc":"3265:7:30","nodeType":"YulTypedName","src":"3265:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:30","nodeType":"YulTypedName","src":"3277:6:30","type":""}],"src":"3218:329:30"},{"body":{"nativeSrc":"3598:81:30","nodeType":"YulBlock","src":"3598:81:30","statements":[{"nativeSrc":"3608:65:30","nodeType":"YulAssignment","src":"3608:65:30","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:30","nodeType":"YulIdentifier","src":"3623:5:30"},{"kind":"number","nativeSrc":"3630:42:30","nodeType":"YulLiteral","src":"3630:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:30","nodeType":"YulIdentifier","src":"3619:3:30"},"nativeSrc":"3619:54:30","nodeType":"YulFunctionCall","src":"3619:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:30","nodeType":"YulIdentifier","src":"3608:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:30","nodeType":"YulTypedName","src":"3580:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:30","nodeType":"YulTypedName","src":"3590:7:30","type":""}],"src":"3553:126:30"},{"body":{"nativeSrc":"3730:51:30","nodeType":"YulBlock","src":"3730:51:30","statements":[{"nativeSrc":"3740:35:30","nodeType":"YulAssignment","src":"3740:35:30","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:30","nodeType":"YulIdentifier","src":"3769:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:30","nodeType":"YulIdentifier","src":"3751:17:30"},"nativeSrc":"3751:24:30","nodeType":"YulFunctionCall","src":"3751:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:30","nodeType":"YulIdentifier","src":"3740:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:30","nodeType":"YulTypedName","src":"3712:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:30","nodeType":"YulTypedName","src":"3722:7:30","type":""}],"src":"3685:96:30"},{"body":{"nativeSrc":"3852:53:30","nodeType":"YulBlock","src":"3852:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3869:3:30","nodeType":"YulIdentifier","src":"3869:3:30"},{"arguments":[{"name":"value","nativeSrc":"3892:5:30","nodeType":"YulIdentifier","src":"3892:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3874:17:30","nodeType":"YulIdentifier","src":"3874:17:30"},"nativeSrc":"3874:24:30","nodeType":"YulFunctionCall","src":"3874:24:30"}],"functionName":{"name":"mstore","nativeSrc":"3862:6:30","nodeType":"YulIdentifier","src":"3862:6:30"},"nativeSrc":"3862:37:30","nodeType":"YulFunctionCall","src":"3862:37:30"},"nativeSrc":"3862:37:30","nodeType":"YulExpressionStatement","src":"3862:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3787:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3840:5:30","nodeType":"YulTypedName","src":"3840:5:30","type":""},{"name":"pos","nativeSrc":"3847:3:30","nodeType":"YulTypedName","src":"3847:3:30","type":""}],"src":"3787:118:30"},{"body":{"nativeSrc":"4009:124:30","nodeType":"YulBlock","src":"4009:124:30","statements":[{"nativeSrc":"4019:26:30","nodeType":"YulAssignment","src":"4019:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:30","nodeType":"YulIdentifier","src":"4031:9:30"},{"kind":"number","nativeSrc":"4042:2:30","nodeType":"YulLiteral","src":"4042:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:30","nodeType":"YulIdentifier","src":"4027:3:30"},"nativeSrc":"4027:18:30","nodeType":"YulFunctionCall","src":"4027:18:30"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:30","nodeType":"YulIdentifier","src":"4019:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4099:6:30","nodeType":"YulIdentifier","src":"4099:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"4112:9:30","nodeType":"YulIdentifier","src":"4112:9:30"},{"kind":"number","nativeSrc":"4123:1:30","nodeType":"YulLiteral","src":"4123:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4108:3:30","nodeType":"YulIdentifier","src":"4108:3:30"},"nativeSrc":"4108:17:30","nodeType":"YulFunctionCall","src":"4108:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4055:43:30","nodeType":"YulIdentifier","src":"4055:43:30"},"nativeSrc":"4055:71:30","nodeType":"YulFunctionCall","src":"4055:71:30"},"nativeSrc":"4055:71:30","nodeType":"YulExpressionStatement","src":"4055:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3911:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:30","nodeType":"YulTypedName","src":"3981:9:30","type":""},{"name":"value0","nativeSrc":"3993:6:30","nodeType":"YulTypedName","src":"3993:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:30","nodeType":"YulTypedName","src":"4004:4:30","type":""}],"src":"3911:222:30"},{"body":{"nativeSrc":"4182:79:30","nodeType":"YulBlock","src":"4182:79:30","statements":[{"body":{"nativeSrc":"4239:16:30","nodeType":"YulBlock","src":"4239:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:30","nodeType":"YulLiteral","src":"4248:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:30","nodeType":"YulLiteral","src":"4251:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:30","nodeType":"YulIdentifier","src":"4241:6:30"},"nativeSrc":"4241:12:30","nodeType":"YulFunctionCall","src":"4241:12:30"},"nativeSrc":"4241:12:30","nodeType":"YulExpressionStatement","src":"4241:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4205:5:30","nodeType":"YulIdentifier","src":"4205:5:30"},{"arguments":[{"name":"value","nativeSrc":"4230:5:30","nodeType":"YulIdentifier","src":"4230:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4212:17:30","nodeType":"YulIdentifier","src":"4212:17:30"},"nativeSrc":"4212:24:30","nodeType":"YulFunctionCall","src":"4212:24:30"}],"functionName":{"name":"eq","nativeSrc":"4202:2:30","nodeType":"YulIdentifier","src":"4202:2:30"},"nativeSrc":"4202:35:30","nodeType":"YulFunctionCall","src":"4202:35:30"}],"functionName":{"name":"iszero","nativeSrc":"4195:6:30","nodeType":"YulIdentifier","src":"4195:6:30"},"nativeSrc":"4195:43:30","nodeType":"YulFunctionCall","src":"4195:43:30"},"nativeSrc":"4192:63:30","nodeType":"YulIf","src":"4192:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"4139:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:30","nodeType":"YulTypedName","src":"4175:5:30","type":""}],"src":"4139:122:30"},{"body":{"nativeSrc":"4319:87:30","nodeType":"YulBlock","src":"4319:87:30","statements":[{"nativeSrc":"4329:29:30","nodeType":"YulAssignment","src":"4329:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"4351:6:30","nodeType":"YulIdentifier","src":"4351:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"4338:12:30","nodeType":"YulIdentifier","src":"4338:12:30"},"nativeSrc":"4338:20:30","nodeType":"YulFunctionCall","src":"4338:20:30"},"variableNames":[{"name":"value","nativeSrc":"4329:5:30","nodeType":"YulIdentifier","src":"4329:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4394:5:30","nodeType":"YulIdentifier","src":"4394:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4367:26:30","nodeType":"YulIdentifier","src":"4367:26:30"},"nativeSrc":"4367:33:30","nodeType":"YulFunctionCall","src":"4367:33:30"},"nativeSrc":"4367:33:30","nodeType":"YulExpressionStatement","src":"4367:33:30"}]},"name":"abi_decode_t_address","nativeSrc":"4267:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4297:6:30","nodeType":"YulTypedName","src":"4297:6:30","type":""},{"name":"end","nativeSrc":"4305:3:30","nodeType":"YulTypedName","src":"4305:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4313:5:30","nodeType":"YulTypedName","src":"4313:5:30","type":""}],"src":"4267:139:30"},{"body":{"nativeSrc":"4495:391:30","nodeType":"YulBlock","src":"4495:391:30","statements":[{"body":{"nativeSrc":"4541:83:30","nodeType":"YulBlock","src":"4541:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4543:77:30","nodeType":"YulIdentifier","src":"4543:77:30"},"nativeSrc":"4543:79:30","nodeType":"YulFunctionCall","src":"4543:79:30"},"nativeSrc":"4543:79:30","nodeType":"YulExpressionStatement","src":"4543:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4516:7:30","nodeType":"YulIdentifier","src":"4516:7:30"},{"name":"headStart","nativeSrc":"4525:9:30","nodeType":"YulIdentifier","src":"4525:9:30"}],"functionName":{"name":"sub","nativeSrc":"4512:3:30","nodeType":"YulIdentifier","src":"4512:3:30"},"nativeSrc":"4512:23:30","nodeType":"YulFunctionCall","src":"4512:23:30"},{"kind":"number","nativeSrc":"4537:2:30","nodeType":"YulLiteral","src":"4537:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4508:3:30","nodeType":"YulIdentifier","src":"4508:3:30"},"nativeSrc":"4508:32:30","nodeType":"YulFunctionCall","src":"4508:32:30"},"nativeSrc":"4505:119:30","nodeType":"YulIf","src":"4505:119:30"},{"nativeSrc":"4634:117:30","nodeType":"YulBlock","src":"4634:117:30","statements":[{"nativeSrc":"4649:15:30","nodeType":"YulVariableDeclaration","src":"4649:15:30","value":{"kind":"number","nativeSrc":"4663:1:30","nodeType":"YulLiteral","src":"4663:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4653:6:30","nodeType":"YulTypedName","src":"4653:6:30","type":""}]},{"nativeSrc":"4678:63:30","nodeType":"YulAssignment","src":"4678:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4713:9:30","nodeType":"YulIdentifier","src":"4713:9:30"},{"name":"offset","nativeSrc":"4724:6:30","nodeType":"YulIdentifier","src":"4724:6:30"}],"functionName":{"name":"add","nativeSrc":"4709:3:30","nodeType":"YulIdentifier","src":"4709:3:30"},"nativeSrc":"4709:22:30","nodeType":"YulFunctionCall","src":"4709:22:30"},{"name":"dataEnd","nativeSrc":"4733:7:30","nodeType":"YulIdentifier","src":"4733:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4688:20:30","nodeType":"YulIdentifier","src":"4688:20:30"},"nativeSrc":"4688:53:30","nodeType":"YulFunctionCall","src":"4688:53:30"},"variableNames":[{"name":"value0","nativeSrc":"4678:6:30","nodeType":"YulIdentifier","src":"4678:6:30"}]}]},{"nativeSrc":"4761:118:30","nodeType":"YulBlock","src":"4761:118:30","statements":[{"nativeSrc":"4776:16:30","nodeType":"YulVariableDeclaration","src":"4776:16:30","value":{"kind":"number","nativeSrc":"4790:2:30","nodeType":"YulLiteral","src":"4790:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4780:6:30","nodeType":"YulTypedName","src":"4780:6:30","type":""}]},{"nativeSrc":"4806:63:30","nodeType":"YulAssignment","src":"4806:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:30","nodeType":"YulIdentifier","src":"4841:9:30"},{"name":"offset","nativeSrc":"4852:6:30","nodeType":"YulIdentifier","src":"4852:6:30"}],"functionName":{"name":"add","nativeSrc":"4837:3:30","nodeType":"YulIdentifier","src":"4837:3:30"},"nativeSrc":"4837:22:30","nodeType":"YulFunctionCall","src":"4837:22:30"},{"name":"dataEnd","nativeSrc":"4861:7:30","nodeType":"YulIdentifier","src":"4861:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4816:20:30","nodeType":"YulIdentifier","src":"4816:20:30"},"nativeSrc":"4816:53:30","nodeType":"YulFunctionCall","src":"4816:53:30"},"variableNames":[{"name":"value1","nativeSrc":"4806:6:30","nodeType":"YulIdentifier","src":"4806:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4412:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:30","nodeType":"YulTypedName","src":"4457:9:30","type":""},{"name":"dataEnd","nativeSrc":"4468:7:30","nodeType":"YulTypedName","src":"4468:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4480:6:30","nodeType":"YulTypedName","src":"4480:6:30","type":""},{"name":"value1","nativeSrc":"4488:6:30","nodeType":"YulTypedName","src":"4488:6:30","type":""}],"src":"4412:474:30"},{"body":{"nativeSrc":"4937:32:30","nodeType":"YulBlock","src":"4937:32:30","statements":[{"nativeSrc":"4947:16:30","nodeType":"YulAssignment","src":"4947:16:30","value":{"name":"value","nativeSrc":"4958:5:30","nodeType":"YulIdentifier","src":"4958:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"4947:7:30","nodeType":"YulIdentifier","src":"4947:7:30"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4892:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4919:5:30","nodeType":"YulTypedName","src":"4919:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4929:7:30","nodeType":"YulTypedName","src":"4929:7:30","type":""}],"src":"4892:77:30"},{"body":{"nativeSrc":"5040:53:30","nodeType":"YulBlock","src":"5040:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5057:3:30","nodeType":"YulIdentifier","src":"5057:3:30"},{"arguments":[{"name":"value","nativeSrc":"5080:5:30","nodeType":"YulIdentifier","src":"5080:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5062:17:30","nodeType":"YulIdentifier","src":"5062:17:30"},"nativeSrc":"5062:24:30","nodeType":"YulFunctionCall","src":"5062:24:30"}],"functionName":{"name":"mstore","nativeSrc":"5050:6:30","nodeType":"YulIdentifier","src":"5050:6:30"},"nativeSrc":"5050:37:30","nodeType":"YulFunctionCall","src":"5050:37:30"},"nativeSrc":"5050:37:30","nodeType":"YulExpressionStatement","src":"5050:37:30"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4975:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5028:5:30","nodeType":"YulTypedName","src":"5028:5:30","type":""},{"name":"pos","nativeSrc":"5035:3:30","nodeType":"YulTypedName","src":"5035:3:30","type":""}],"src":"4975:118:30"},{"body":{"nativeSrc":"5197:124:30","nodeType":"YulBlock","src":"5197:124:30","statements":[{"nativeSrc":"5207:26:30","nodeType":"YulAssignment","src":"5207:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"5219:9:30","nodeType":"YulIdentifier","src":"5219:9:30"},{"kind":"number","nativeSrc":"5230:2:30","nodeType":"YulLiteral","src":"5230:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5215:3:30","nodeType":"YulIdentifier","src":"5215:3:30"},"nativeSrc":"5215:18:30","nodeType":"YulFunctionCall","src":"5215:18:30"},"variableNames":[{"name":"tail","nativeSrc":"5207:4:30","nodeType":"YulIdentifier","src":"5207:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5287:6:30","nodeType":"YulIdentifier","src":"5287:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"5300:9:30","nodeType":"YulIdentifier","src":"5300:9:30"},{"kind":"number","nativeSrc":"5311:1:30","nodeType":"YulLiteral","src":"5311:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5296:3:30","nodeType":"YulIdentifier","src":"5296:3:30"},"nativeSrc":"5296:17:30","nodeType":"YulFunctionCall","src":"5296:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5243:43:30","nodeType":"YulIdentifier","src":"5243:43:30"},"nativeSrc":"5243:71:30","nodeType":"YulFunctionCall","src":"5243:71:30"},"nativeSrc":"5243:71:30","nodeType":"YulExpressionStatement","src":"5243:71:30"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5099:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5169:9:30","nodeType":"YulTypedName","src":"5169:9:30","type":""},{"name":"value0","nativeSrc":"5181:6:30","nodeType":"YulTypedName","src":"5181:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5192:4:30","nodeType":"YulTypedName","src":"5192:4:30","type":""}],"src":"5099:222:30"},{"body":{"nativeSrc":"5370:79:30","nodeType":"YulBlock","src":"5370:79:30","statements":[{"body":{"nativeSrc":"5427:16:30","nodeType":"YulBlock","src":"5427:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5436:1:30","nodeType":"YulLiteral","src":"5436:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"5439:1:30","nodeType":"YulLiteral","src":"5439:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5429:6:30","nodeType":"YulIdentifier","src":"5429:6:30"},"nativeSrc":"5429:12:30","nodeType":"YulFunctionCall","src":"5429:12:30"},"nativeSrc":"5429:12:30","nodeType":"YulExpressionStatement","src":"5429:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5393:5:30","nodeType":"YulIdentifier","src":"5393:5:30"},{"arguments":[{"name":"value","nativeSrc":"5418:5:30","nodeType":"YulIdentifier","src":"5418:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5400:17:30","nodeType":"YulIdentifier","src":"5400:17:30"},"nativeSrc":"5400:24:30","nodeType":"YulFunctionCall","src":"5400:24:30"}],"functionName":{"name":"eq","nativeSrc":"5390:2:30","nodeType":"YulIdentifier","src":"5390:2:30"},"nativeSrc":"5390:35:30","nodeType":"YulFunctionCall","src":"5390:35:30"}],"functionName":{"name":"iszero","nativeSrc":"5383:6:30","nodeType":"YulIdentifier","src":"5383:6:30"},"nativeSrc":"5383:43:30","nodeType":"YulFunctionCall","src":"5383:43:30"},"nativeSrc":"5380:63:30","nodeType":"YulIf","src":"5380:63:30"}]},"name":"validator_revert_t_bytes32","nativeSrc":"5327:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5363:5:30","nodeType":"YulTypedName","src":"5363:5:30","type":""}],"src":"5327:122:30"},{"body":{"nativeSrc":"5507:87:30","nodeType":"YulBlock","src":"5507:87:30","statements":[{"nativeSrc":"5517:29:30","nodeType":"YulAssignment","src":"5517:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"5539:6:30","nodeType":"YulIdentifier","src":"5539:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"5526:12:30","nodeType":"YulIdentifier","src":"5526:12:30"},"nativeSrc":"5526:20:30","nodeType":"YulFunctionCall","src":"5526:20:30"},"variableNames":[{"name":"value","nativeSrc":"5517:5:30","nodeType":"YulIdentifier","src":"5517:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5582:5:30","nodeType":"YulIdentifier","src":"5582:5:30"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"5555:26:30","nodeType":"YulIdentifier","src":"5555:26:30"},"nativeSrc":"5555:33:30","nodeType":"YulFunctionCall","src":"5555:33:30"},"nativeSrc":"5555:33:30","nodeType":"YulExpressionStatement","src":"5555:33:30"}]},"name":"abi_decode_t_bytes32","nativeSrc":"5455:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5485:6:30","nodeType":"YulTypedName","src":"5485:6:30","type":""},{"name":"end","nativeSrc":"5493:3:30","nodeType":"YulTypedName","src":"5493:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5501:5:30","nodeType":"YulTypedName","src":"5501:5:30","type":""}],"src":"5455:139:30"},{"body":{"nativeSrc":"5683:391:30","nodeType":"YulBlock","src":"5683:391:30","statements":[{"body":{"nativeSrc":"5729:83:30","nodeType":"YulBlock","src":"5729:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5731:77:30","nodeType":"YulIdentifier","src":"5731:77:30"},"nativeSrc":"5731:79:30","nodeType":"YulFunctionCall","src":"5731:79:30"},"nativeSrc":"5731:79:30","nodeType":"YulExpressionStatement","src":"5731:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5704:7:30","nodeType":"YulIdentifier","src":"5704:7:30"},{"name":"headStart","nativeSrc":"5713:9:30","nodeType":"YulIdentifier","src":"5713:9:30"}],"functionName":{"name":"sub","nativeSrc":"5700:3:30","nodeType":"YulIdentifier","src":"5700:3:30"},"nativeSrc":"5700:23:30","nodeType":"YulFunctionCall","src":"5700:23:30"},{"kind":"number","nativeSrc":"5725:2:30","nodeType":"YulLiteral","src":"5725:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5696:3:30","nodeType":"YulIdentifier","src":"5696:3:30"},"nativeSrc":"5696:32:30","nodeType":"YulFunctionCall","src":"5696:32:30"},"nativeSrc":"5693:119:30","nodeType":"YulIf","src":"5693:119:30"},{"nativeSrc":"5822:117:30","nodeType":"YulBlock","src":"5822:117:30","statements":[{"nativeSrc":"5837:15:30","nodeType":"YulVariableDeclaration","src":"5837:15:30","value":{"kind":"number","nativeSrc":"5851:1:30","nodeType":"YulLiteral","src":"5851:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5841:6:30","nodeType":"YulTypedName","src":"5841:6:30","type":""}]},{"nativeSrc":"5866:63:30","nodeType":"YulAssignment","src":"5866:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5901:9:30","nodeType":"YulIdentifier","src":"5901:9:30"},{"name":"offset","nativeSrc":"5912:6:30","nodeType":"YulIdentifier","src":"5912:6:30"}],"functionName":{"name":"add","nativeSrc":"5897:3:30","nodeType":"YulIdentifier","src":"5897:3:30"},"nativeSrc":"5897:22:30","nodeType":"YulFunctionCall","src":"5897:22:30"},{"name":"dataEnd","nativeSrc":"5921:7:30","nodeType":"YulIdentifier","src":"5921:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5876:20:30","nodeType":"YulIdentifier","src":"5876:20:30"},"nativeSrc":"5876:53:30","nodeType":"YulFunctionCall","src":"5876:53:30"},"variableNames":[{"name":"value0","nativeSrc":"5866:6:30","nodeType":"YulIdentifier","src":"5866:6:30"}]}]},{"nativeSrc":"5949:118:30","nodeType":"YulBlock","src":"5949:118:30","statements":[{"nativeSrc":"5964:16:30","nodeType":"YulVariableDeclaration","src":"5964:16:30","value":{"kind":"number","nativeSrc":"5978:2:30","nodeType":"YulLiteral","src":"5978:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5968:6:30","nodeType":"YulTypedName","src":"5968:6:30","type":""}]},{"nativeSrc":"5994:63:30","nodeType":"YulAssignment","src":"5994:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6029:9:30","nodeType":"YulIdentifier","src":"6029:9:30"},{"name":"offset","nativeSrc":"6040:6:30","nodeType":"YulIdentifier","src":"6040:6:30"}],"functionName":{"name":"add","nativeSrc":"6025:3:30","nodeType":"YulIdentifier","src":"6025:3:30"},"nativeSrc":"6025:22:30","nodeType":"YulFunctionCall","src":"6025:22:30"},{"name":"dataEnd","nativeSrc":"6049:7:30","nodeType":"YulIdentifier","src":"6049:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6004:20:30","nodeType":"YulIdentifier","src":"6004:20:30"},"nativeSrc":"6004:53:30","nodeType":"YulFunctionCall","src":"6004:53:30"},"variableNames":[{"name":"value1","nativeSrc":"5994:6:30","nodeType":"YulIdentifier","src":"5994:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32","nativeSrc":"5600:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5645:9:30","nodeType":"YulTypedName","src":"5645:9:30","type":""},{"name":"dataEnd","nativeSrc":"5656:7:30","nodeType":"YulTypedName","src":"5656:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5668:6:30","nodeType":"YulTypedName","src":"5668:6:30","type":""},{"name":"value1","nativeSrc":"5676:6:30","nodeType":"YulTypedName","src":"5676:6:30","type":""}],"src":"5600:474:30"},{"body":{"nativeSrc":"6180:519:30","nodeType":"YulBlock","src":"6180:519:30","statements":[{"body":{"nativeSrc":"6226:83:30","nodeType":"YulBlock","src":"6226:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6228:77:30","nodeType":"YulIdentifier","src":"6228:77:30"},"nativeSrc":"6228:79:30","nodeType":"YulFunctionCall","src":"6228:79:30"},"nativeSrc":"6228:79:30","nodeType":"YulExpressionStatement","src":"6228:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6201:7:30","nodeType":"YulIdentifier","src":"6201:7:30"},{"name":"headStart","nativeSrc":"6210:9:30","nodeType":"YulIdentifier","src":"6210:9:30"}],"functionName":{"name":"sub","nativeSrc":"6197:3:30","nodeType":"YulIdentifier","src":"6197:3:30"},"nativeSrc":"6197:23:30","nodeType":"YulFunctionCall","src":"6197:23:30"},{"kind":"number","nativeSrc":"6222:2:30","nodeType":"YulLiteral","src":"6222:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6193:3:30","nodeType":"YulIdentifier","src":"6193:3:30"},"nativeSrc":"6193:32:30","nodeType":"YulFunctionCall","src":"6193:32:30"},"nativeSrc":"6190:119:30","nodeType":"YulIf","src":"6190:119:30"},{"nativeSrc":"6319:117:30","nodeType":"YulBlock","src":"6319:117:30","statements":[{"nativeSrc":"6334:15:30","nodeType":"YulVariableDeclaration","src":"6334:15:30","value":{"kind":"number","nativeSrc":"6348:1:30","nodeType":"YulLiteral","src":"6348:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6338:6:30","nodeType":"YulTypedName","src":"6338:6:30","type":""}]},{"nativeSrc":"6363:63:30","nodeType":"YulAssignment","src":"6363:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6398:9:30","nodeType":"YulIdentifier","src":"6398:9:30"},{"name":"offset","nativeSrc":"6409:6:30","nodeType":"YulIdentifier","src":"6409:6:30"}],"functionName":{"name":"add","nativeSrc":"6394:3:30","nodeType":"YulIdentifier","src":"6394:3:30"},"nativeSrc":"6394:22:30","nodeType":"YulFunctionCall","src":"6394:22:30"},{"name":"dataEnd","nativeSrc":"6418:7:30","nodeType":"YulIdentifier","src":"6418:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6373:20:30","nodeType":"YulIdentifier","src":"6373:20:30"},"nativeSrc":"6373:53:30","nodeType":"YulFunctionCall","src":"6373:53:30"},"variableNames":[{"name":"value0","nativeSrc":"6363:6:30","nodeType":"YulIdentifier","src":"6363:6:30"}]}]},{"nativeSrc":"6446:118:30","nodeType":"YulBlock","src":"6446:118:30","statements":[{"nativeSrc":"6461:16:30","nodeType":"YulVariableDeclaration","src":"6461:16:30","value":{"kind":"number","nativeSrc":"6475:2:30","nodeType":"YulLiteral","src":"6475:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6465:6:30","nodeType":"YulTypedName","src":"6465:6:30","type":""}]},{"nativeSrc":"6491:63:30","nodeType":"YulAssignment","src":"6491:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6526:9:30","nodeType":"YulIdentifier","src":"6526:9:30"},{"name":"offset","nativeSrc":"6537:6:30","nodeType":"YulIdentifier","src":"6537:6:30"}],"functionName":{"name":"add","nativeSrc":"6522:3:30","nodeType":"YulIdentifier","src":"6522:3:30"},"nativeSrc":"6522:22:30","nodeType":"YulFunctionCall","src":"6522:22:30"},{"name":"dataEnd","nativeSrc":"6546:7:30","nodeType":"YulIdentifier","src":"6546:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6501:20:30","nodeType":"YulIdentifier","src":"6501:20:30"},"nativeSrc":"6501:53:30","nodeType":"YulFunctionCall","src":"6501:53:30"},"variableNames":[{"name":"value1","nativeSrc":"6491:6:30","nodeType":"YulIdentifier","src":"6491:6:30"}]}]},{"nativeSrc":"6574:118:30","nodeType":"YulBlock","src":"6574:118:30","statements":[{"nativeSrc":"6589:16:30","nodeType":"YulVariableDeclaration","src":"6589:16:30","value":{"kind":"number","nativeSrc":"6603:2:30","nodeType":"YulLiteral","src":"6603:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"6593:6:30","nodeType":"YulTypedName","src":"6593:6:30","type":""}]},{"nativeSrc":"6619:63:30","nodeType":"YulAssignment","src":"6619:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6654:9:30","nodeType":"YulIdentifier","src":"6654:9:30"},{"name":"offset","nativeSrc":"6665:6:30","nodeType":"YulIdentifier","src":"6665:6:30"}],"functionName":{"name":"add","nativeSrc":"6650:3:30","nodeType":"YulIdentifier","src":"6650:3:30"},"nativeSrc":"6650:22:30","nodeType":"YulFunctionCall","src":"6650:22:30"},{"name":"dataEnd","nativeSrc":"6674:7:30","nodeType":"YulIdentifier","src":"6674:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6629:20:30","nodeType":"YulIdentifier","src":"6629:20:30"},"nativeSrc":"6629:53:30","nodeType":"YulFunctionCall","src":"6629:53:30"},"variableNames":[{"name":"value2","nativeSrc":"6619:6:30","nodeType":"YulIdentifier","src":"6619:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"6080:619:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6134:9:30","nodeType":"YulTypedName","src":"6134:9:30","type":""},{"name":"dataEnd","nativeSrc":"6145:7:30","nodeType":"YulTypedName","src":"6145:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6157:6:30","nodeType":"YulTypedName","src":"6157:6:30","type":""},{"name":"value1","nativeSrc":"6165:6:30","nodeType":"YulTypedName","src":"6165:6:30","type":""},{"name":"value2","nativeSrc":"6173:6:30","nodeType":"YulTypedName","src":"6173:6:30","type":""}],"src":"6080:619:30"},{"body":{"nativeSrc":"6771:263:30","nodeType":"YulBlock","src":"6771:263:30","statements":[{"body":{"nativeSrc":"6817:83:30","nodeType":"YulBlock","src":"6817:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6819:77:30","nodeType":"YulIdentifier","src":"6819:77:30"},"nativeSrc":"6819:79:30","nodeType":"YulFunctionCall","src":"6819:79:30"},"nativeSrc":"6819:79:30","nodeType":"YulExpressionStatement","src":"6819:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6792:7:30","nodeType":"YulIdentifier","src":"6792:7:30"},{"name":"headStart","nativeSrc":"6801:9:30","nodeType":"YulIdentifier","src":"6801:9:30"}],"functionName":{"name":"sub","nativeSrc":"6788:3:30","nodeType":"YulIdentifier","src":"6788:3:30"},"nativeSrc":"6788:23:30","nodeType":"YulFunctionCall","src":"6788:23:30"},{"kind":"number","nativeSrc":"6813:2:30","nodeType":"YulLiteral","src":"6813:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6784:3:30","nodeType":"YulIdentifier","src":"6784:3:30"},"nativeSrc":"6784:32:30","nodeType":"YulFunctionCall","src":"6784:32:30"},"nativeSrc":"6781:119:30","nodeType":"YulIf","src":"6781:119:30"},{"nativeSrc":"6910:117:30","nodeType":"YulBlock","src":"6910:117:30","statements":[{"nativeSrc":"6925:15:30","nodeType":"YulVariableDeclaration","src":"6925:15:30","value":{"kind":"number","nativeSrc":"6939:1:30","nodeType":"YulLiteral","src":"6939:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6929:6:30","nodeType":"YulTypedName","src":"6929:6:30","type":""}]},{"nativeSrc":"6954:63:30","nodeType":"YulAssignment","src":"6954:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6989:9:30","nodeType":"YulIdentifier","src":"6989:9:30"},{"name":"offset","nativeSrc":"7000:6:30","nodeType":"YulIdentifier","src":"7000:6:30"}],"functionName":{"name":"add","nativeSrc":"6985:3:30","nodeType":"YulIdentifier","src":"6985:3:30"},"nativeSrc":"6985:22:30","nodeType":"YulFunctionCall","src":"6985:22:30"},{"name":"dataEnd","nativeSrc":"7009:7:30","nodeType":"YulIdentifier","src":"7009:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6964:20:30","nodeType":"YulIdentifier","src":"6964:20:30"},"nativeSrc":"6964:53:30","nodeType":"YulFunctionCall","src":"6964:53:30"},"variableNames":[{"name":"value0","nativeSrc":"6954:6:30","nodeType":"YulIdentifier","src":"6954:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"6705:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6741:9:30","nodeType":"YulTypedName","src":"6741:9:30","type":""},{"name":"dataEnd","nativeSrc":"6752:7:30","nodeType":"YulTypedName","src":"6752:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6764:6:30","nodeType":"YulTypedName","src":"6764:6:30","type":""}],"src":"6705:329:30"},{"body":{"nativeSrc":"7106:263:30","nodeType":"YulBlock","src":"7106:263:30","statements":[{"body":{"nativeSrc":"7152:83:30","nodeType":"YulBlock","src":"7152:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7154:77:30","nodeType":"YulIdentifier","src":"7154:77:30"},"nativeSrc":"7154:79:30","nodeType":"YulFunctionCall","src":"7154:79:30"},"nativeSrc":"7154:79:30","nodeType":"YulExpressionStatement","src":"7154:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7127:7:30","nodeType":"YulIdentifier","src":"7127:7:30"},{"name":"headStart","nativeSrc":"7136:9:30","nodeType":"YulIdentifier","src":"7136:9:30"}],"functionName":{"name":"sub","nativeSrc":"7123:3:30","nodeType":"YulIdentifier","src":"7123:3:30"},"nativeSrc":"7123:23:30","nodeType":"YulFunctionCall","src":"7123:23:30"},{"kind":"number","nativeSrc":"7148:2:30","nodeType":"YulLiteral","src":"7148:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7119:3:30","nodeType":"YulIdentifier","src":"7119:3:30"},"nativeSrc":"7119:32:30","nodeType":"YulFunctionCall","src":"7119:32:30"},"nativeSrc":"7116:119:30","nodeType":"YulIf","src":"7116:119:30"},{"nativeSrc":"7245:117:30","nodeType":"YulBlock","src":"7245:117:30","statements":[{"nativeSrc":"7260:15:30","nodeType":"YulVariableDeclaration","src":"7260:15:30","value":{"kind":"number","nativeSrc":"7274:1:30","nodeType":"YulLiteral","src":"7274:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7264:6:30","nodeType":"YulTypedName","src":"7264:6:30","type":""}]},{"nativeSrc":"7289:63:30","nodeType":"YulAssignment","src":"7289:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7324:9:30","nodeType":"YulIdentifier","src":"7324:9:30"},{"name":"offset","nativeSrc":"7335:6:30","nodeType":"YulIdentifier","src":"7335:6:30"}],"functionName":{"name":"add","nativeSrc":"7320:3:30","nodeType":"YulIdentifier","src":"7320:3:30"},"nativeSrc":"7320:22:30","nodeType":"YulFunctionCall","src":"7320:22:30"},{"name":"dataEnd","nativeSrc":"7344:7:30","nodeType":"YulIdentifier","src":"7344:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7299:20:30","nodeType":"YulIdentifier","src":"7299:20:30"},"nativeSrc":"7299:53:30","nodeType":"YulFunctionCall","src":"7299:53:30"},"variableNames":[{"name":"value0","nativeSrc":"7289:6:30","nodeType":"YulIdentifier","src":"7289:6:30"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"7040:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7076:9:30","nodeType":"YulTypedName","src":"7076:9:30","type":""},{"name":"dataEnd","nativeSrc":"7087:7:30","nodeType":"YulTypedName","src":"7087:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7099:6:30","nodeType":"YulTypedName","src":"7099:6:30","type":""}],"src":"7040:329:30"},{"body":{"nativeSrc":"7458:391:30","nodeType":"YulBlock","src":"7458:391:30","statements":[{"body":{"nativeSrc":"7504:83:30","nodeType":"YulBlock","src":"7504:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7506:77:30","nodeType":"YulIdentifier","src":"7506:77:30"},"nativeSrc":"7506:79:30","nodeType":"YulFunctionCall","src":"7506:79:30"},"nativeSrc":"7506:79:30","nodeType":"YulExpressionStatement","src":"7506:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7479:7:30","nodeType":"YulIdentifier","src":"7479:7:30"},{"name":"headStart","nativeSrc":"7488:9:30","nodeType":"YulIdentifier","src":"7488:9:30"}],"functionName":{"name":"sub","nativeSrc":"7475:3:30","nodeType":"YulIdentifier","src":"7475:3:30"},"nativeSrc":"7475:23:30","nodeType":"YulFunctionCall","src":"7475:23:30"},{"kind":"number","nativeSrc":"7500:2:30","nodeType":"YulLiteral","src":"7500:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7471:3:30","nodeType":"YulIdentifier","src":"7471:3:30"},"nativeSrc":"7471:32:30","nodeType":"YulFunctionCall","src":"7471:32:30"},"nativeSrc":"7468:119:30","nodeType":"YulIf","src":"7468:119:30"},{"nativeSrc":"7597:117:30","nodeType":"YulBlock","src":"7597:117:30","statements":[{"nativeSrc":"7612:15:30","nodeType":"YulVariableDeclaration","src":"7612:15:30","value":{"kind":"number","nativeSrc":"7626:1:30","nodeType":"YulLiteral","src":"7626:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7616:6:30","nodeType":"YulTypedName","src":"7616:6:30","type":""}]},{"nativeSrc":"7641:63:30","nodeType":"YulAssignment","src":"7641:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7676:9:30","nodeType":"YulIdentifier","src":"7676:9:30"},{"name":"offset","nativeSrc":"7687:6:30","nodeType":"YulIdentifier","src":"7687:6:30"}],"functionName":{"name":"add","nativeSrc":"7672:3:30","nodeType":"YulIdentifier","src":"7672:3:30"},"nativeSrc":"7672:22:30","nodeType":"YulFunctionCall","src":"7672:22:30"},{"name":"dataEnd","nativeSrc":"7696:7:30","nodeType":"YulIdentifier","src":"7696:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"7651:20:30","nodeType":"YulIdentifier","src":"7651:20:30"},"nativeSrc":"7651:53:30","nodeType":"YulFunctionCall","src":"7651:53:30"},"variableNames":[{"name":"value0","nativeSrc":"7641:6:30","nodeType":"YulIdentifier","src":"7641:6:30"}]}]},{"nativeSrc":"7724:118:30","nodeType":"YulBlock","src":"7724:118:30","statements":[{"nativeSrc":"7739:16:30","nodeType":"YulVariableDeclaration","src":"7739:16:30","value":{"kind":"number","nativeSrc":"7753:2:30","nodeType":"YulLiteral","src":"7753:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7743:6:30","nodeType":"YulTypedName","src":"7743:6:30","type":""}]},{"nativeSrc":"7769:63:30","nodeType":"YulAssignment","src":"7769:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7804:9:30","nodeType":"YulIdentifier","src":"7804:9:30"},{"name":"offset","nativeSrc":"7815:6:30","nodeType":"YulIdentifier","src":"7815:6:30"}],"functionName":{"name":"add","nativeSrc":"7800:3:30","nodeType":"YulIdentifier","src":"7800:3:30"},"nativeSrc":"7800:22:30","nodeType":"YulFunctionCall","src":"7800:22:30"},{"name":"dataEnd","nativeSrc":"7824:7:30","nodeType":"YulIdentifier","src":"7824:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7779:20:30","nodeType":"YulIdentifier","src":"7779:20:30"},"nativeSrc":"7779:53:30","nodeType":"YulFunctionCall","src":"7779:53:30"},"variableNames":[{"name":"value1","nativeSrc":"7769:6:30","nodeType":"YulIdentifier","src":"7769:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"7375:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7420:9:30","nodeType":"YulTypedName","src":"7420:9:30","type":""},{"name":"dataEnd","nativeSrc":"7431:7:30","nodeType":"YulTypedName","src":"7431:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7443:6:30","nodeType":"YulTypedName","src":"7443:6:30","type":""},{"name":"value1","nativeSrc":"7451:6:30","nodeType":"YulTypedName","src":"7451:6:30","type":""}],"src":"7375:474:30"},{"body":{"nativeSrc":"7944:28:30","nodeType":"YulBlock","src":"7944:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7961:1:30","nodeType":"YulLiteral","src":"7961:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7964:1:30","nodeType":"YulLiteral","src":"7964:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7954:6:30","nodeType":"YulIdentifier","src":"7954:6:30"},"nativeSrc":"7954:12:30","nodeType":"YulFunctionCall","src":"7954:12:30"},"nativeSrc":"7954:12:30","nodeType":"YulExpressionStatement","src":"7954:12:30"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7855:117:30","nodeType":"YulFunctionDefinition","src":"7855:117:30"},{"body":{"nativeSrc":"8067:28:30","nodeType":"YulBlock","src":"8067:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8084:1:30","nodeType":"YulLiteral","src":"8084:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"8087:1:30","nodeType":"YulLiteral","src":"8087:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8077:6:30","nodeType":"YulIdentifier","src":"8077:6:30"},"nativeSrc":"8077:12:30","nodeType":"YulFunctionCall","src":"8077:12:30"},"nativeSrc":"8077:12:30","nodeType":"YulExpressionStatement","src":"8077:12:30"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7978:117:30","nodeType":"YulFunctionDefinition","src":"7978:117:30"},{"body":{"nativeSrc":"8129:152:30","nodeType":"YulBlock","src":"8129:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8146:1:30","nodeType":"YulLiteral","src":"8146:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"8149:77:30","nodeType":"YulLiteral","src":"8149:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8139:6:30","nodeType":"YulIdentifier","src":"8139:6:30"},"nativeSrc":"8139:88:30","nodeType":"YulFunctionCall","src":"8139:88:30"},"nativeSrc":"8139:88:30","nodeType":"YulExpressionStatement","src":"8139:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8243:1:30","nodeType":"YulLiteral","src":"8243:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"8246:4:30","nodeType":"YulLiteral","src":"8246:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"8236:6:30","nodeType":"YulIdentifier","src":"8236:6:30"},"nativeSrc":"8236:15:30","nodeType":"YulFunctionCall","src":"8236:15:30"},"nativeSrc":"8236:15:30","nodeType":"YulExpressionStatement","src":"8236:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8267:1:30","nodeType":"YulLiteral","src":"8267:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"8270:4:30","nodeType":"YulLiteral","src":"8270:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8260:6:30","nodeType":"YulIdentifier","src":"8260:6:30"},"nativeSrc":"8260:15:30","nodeType":"YulFunctionCall","src":"8260:15:30"},"nativeSrc":"8260:15:30","nodeType":"YulExpressionStatement","src":"8260:15:30"}]},"name":"panic_error_0x41","nativeSrc":"8101:180:30","nodeType":"YulFunctionDefinition","src":"8101:180:30"},{"body":{"nativeSrc":"8330:238:30","nodeType":"YulBlock","src":"8330:238:30","statements":[{"nativeSrc":"8340:58:30","nodeType":"YulVariableDeclaration","src":"8340:58:30","value":{"arguments":[{"name":"memPtr","nativeSrc":"8362:6:30","nodeType":"YulIdentifier","src":"8362:6:30"},{"arguments":[{"name":"size","nativeSrc":"8392:4:30","nodeType":"YulIdentifier","src":"8392:4:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8370:21:30","nodeType":"YulIdentifier","src":"8370:21:30"},"nativeSrc":"8370:27:30","nodeType":"YulFunctionCall","src":"8370:27:30"}],"functionName":{"name":"add","nativeSrc":"8358:3:30","nodeType":"YulIdentifier","src":"8358:3:30"},"nativeSrc":"8358:40:30","nodeType":"YulFunctionCall","src":"8358:40:30"},"variables":[{"name":"newFreePtr","nativeSrc":"8344:10:30","nodeType":"YulTypedName","src":"8344:10:30","type":""}]},{"body":{"nativeSrc":"8509:22:30","nodeType":"YulBlock","src":"8509:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8511:16:30","nodeType":"YulIdentifier","src":"8511:16:30"},"nativeSrc":"8511:18:30","nodeType":"YulFunctionCall","src":"8511:18:30"},"nativeSrc":"8511:18:30","nodeType":"YulExpressionStatement","src":"8511:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"8452:10:30","nodeType":"YulIdentifier","src":"8452:10:30"},{"kind":"number","nativeSrc":"8464:18:30","nodeType":"YulLiteral","src":"8464:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8449:2:30","nodeType":"YulIdentifier","src":"8449:2:30"},"nativeSrc":"8449:34:30","nodeType":"YulFunctionCall","src":"8449:34:30"},{"arguments":[{"name":"newFreePtr","nativeSrc":"8488:10:30","nodeType":"YulIdentifier","src":"8488:10:30"},{"name":"memPtr","nativeSrc":"8500:6:30","nodeType":"YulIdentifier","src":"8500:6:30"}],"functionName":{"name":"lt","nativeSrc":"8485:2:30","nodeType":"YulIdentifier","src":"8485:2:30"},"nativeSrc":"8485:22:30","nodeType":"YulFunctionCall","src":"8485:22:30"}],"functionName":{"name":"or","nativeSrc":"8446:2:30","nodeType":"YulIdentifier","src":"8446:2:30"},"nativeSrc":"8446:62:30","nodeType":"YulFunctionCall","src":"8446:62:30"},"nativeSrc":"8443:88:30","nodeType":"YulIf","src":"8443:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8547:2:30","nodeType":"YulLiteral","src":"8547:2:30","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"8551:10:30","nodeType":"YulIdentifier","src":"8551:10:30"}],"functionName":{"name":"mstore","nativeSrc":"8540:6:30","nodeType":"YulIdentifier","src":"8540:6:30"},"nativeSrc":"8540:22:30","nodeType":"YulFunctionCall","src":"8540:22:30"},"nativeSrc":"8540:22:30","nodeType":"YulExpressionStatement","src":"8540:22:30"}]},"name":"finalize_allocation","nativeSrc":"8287:281:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8316:6:30","nodeType":"YulTypedName","src":"8316:6:30","type":""},{"name":"size","nativeSrc":"8324:4:30","nodeType":"YulTypedName","src":"8324:4:30","type":""}],"src":"8287:281:30"},{"body":{"nativeSrc":"8615:88:30","nodeType":"YulBlock","src":"8615:88:30","statements":[{"nativeSrc":"8625:30:30","nodeType":"YulAssignment","src":"8625:30:30","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"8635:18:30","nodeType":"YulIdentifier","src":"8635:18:30"},"nativeSrc":"8635:20:30","nodeType":"YulFunctionCall","src":"8635:20:30"},"variableNames":[{"name":"memPtr","nativeSrc":"8625:6:30","nodeType":"YulIdentifier","src":"8625:6:30"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"8684:6:30","nodeType":"YulIdentifier","src":"8684:6:30"},{"name":"size","nativeSrc":"8692:4:30","nodeType":"YulIdentifier","src":"8692:4:30"}],"functionName":{"name":"finalize_allocation","nativeSrc":"8664:19:30","nodeType":"YulIdentifier","src":"8664:19:30"},"nativeSrc":"8664:33:30","nodeType":"YulFunctionCall","src":"8664:33:30"},"nativeSrc":"8664:33:30","nodeType":"YulExpressionStatement","src":"8664:33:30"}]},"name":"allocate_memory","nativeSrc":"8574:129:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"8599:4:30","nodeType":"YulTypedName","src":"8599:4:30","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"8608:6:30","nodeType":"YulTypedName","src":"8608:6:30","type":""}],"src":"8574:129:30"},{"body":{"nativeSrc":"8775:241:30","nodeType":"YulBlock","src":"8775:241:30","statements":[{"body":{"nativeSrc":"8880:22:30","nodeType":"YulBlock","src":"8880:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8882:16:30","nodeType":"YulIdentifier","src":"8882:16:30"},"nativeSrc":"8882:18:30","nodeType":"YulFunctionCall","src":"8882:18:30"},"nativeSrc":"8882:18:30","nodeType":"YulExpressionStatement","src":"8882:18:30"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"8852:6:30","nodeType":"YulIdentifier","src":"8852:6:30"},{"kind":"number","nativeSrc":"8860:18:30","nodeType":"YulLiteral","src":"8860:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8849:2:30","nodeType":"YulIdentifier","src":"8849:2:30"},"nativeSrc":"8849:30:30","nodeType":"YulFunctionCall","src":"8849:30:30"},"nativeSrc":"8846:56:30","nodeType":"YulIf","src":"8846:56:30"},{"nativeSrc":"8912:37:30","nodeType":"YulAssignment","src":"8912:37:30","value":{"arguments":[{"name":"length","nativeSrc":"8942:6:30","nodeType":"YulIdentifier","src":"8942:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8920:21:30","nodeType":"YulIdentifier","src":"8920:21:30"},"nativeSrc":"8920:29:30","nodeType":"YulFunctionCall","src":"8920:29:30"},"variableNames":[{"name":"size","nativeSrc":"8912:4:30","nodeType":"YulIdentifier","src":"8912:4:30"}]},{"nativeSrc":"8986:23:30","nodeType":"YulAssignment","src":"8986:23:30","value":{"arguments":[{"name":"size","nativeSrc":"8998:4:30","nodeType":"YulIdentifier","src":"8998:4:30"},{"kind":"number","nativeSrc":"9004:4:30","nodeType":"YulLiteral","src":"9004:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8994:3:30","nodeType":"YulIdentifier","src":"8994:3:30"},"nativeSrc":"8994:15:30","nodeType":"YulFunctionCall","src":"8994:15:30"},"variableNames":[{"name":"size","nativeSrc":"8986:4:30","nodeType":"YulIdentifier","src":"8986:4:30"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"8709:307:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"8759:6:30","nodeType":"YulTypedName","src":"8759:6:30","type":""}],"returnVariables":[{"name":"size","nativeSrc":"8770:4:30","nodeType":"YulTypedName","src":"8770:4:30","type":""}],"src":"8709:307:30"},{"body":{"nativeSrc":"9086:84:30","nodeType":"YulBlock","src":"9086:84:30","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"9110:3:30","nodeType":"YulIdentifier","src":"9110:3:30"},{"name":"src","nativeSrc":"9115:3:30","nodeType":"YulIdentifier","src":"9115:3:30"},{"name":"length","nativeSrc":"9120:6:30","nodeType":"YulIdentifier","src":"9120:6:30"}],"functionName":{"name":"calldatacopy","nativeSrc":"9097:12:30","nodeType":"YulIdentifier","src":"9097:12:30"},"nativeSrc":"9097:30:30","nodeType":"YulFunctionCall","src":"9097:30:30"},"nativeSrc":"9097:30:30","nodeType":"YulExpressionStatement","src":"9097:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9147:3:30","nodeType":"YulIdentifier","src":"9147:3:30"},{"name":"length","nativeSrc":"9152:6:30","nodeType":"YulIdentifier","src":"9152:6:30"}],"functionName":{"name":"add","nativeSrc":"9143:3:30","nodeType":"YulIdentifier","src":"9143:3:30"},"nativeSrc":"9143:16:30","nodeType":"YulFunctionCall","src":"9143:16:30"},{"kind":"number","nativeSrc":"9161:1:30","nodeType":"YulLiteral","src":"9161:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9136:6:30","nodeType":"YulIdentifier","src":"9136:6:30"},"nativeSrc":"9136:27:30","nodeType":"YulFunctionCall","src":"9136:27:30"},"nativeSrc":"9136:27:30","nodeType":"YulExpressionStatement","src":"9136:27:30"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"9022:148:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9068:3:30","nodeType":"YulTypedName","src":"9068:3:30","type":""},{"name":"dst","nativeSrc":"9073:3:30","nodeType":"YulTypedName","src":"9073:3:30","type":""},{"name":"length","nativeSrc":"9078:6:30","nodeType":"YulTypedName","src":"9078:6:30","type":""}],"src":"9022:148:30"},{"body":{"nativeSrc":"9259:340:30","nodeType":"YulBlock","src":"9259:340:30","statements":[{"nativeSrc":"9269:74:30","nodeType":"YulAssignment","src":"9269:74:30","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"9335:6:30","nodeType":"YulIdentifier","src":"9335:6:30"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"9294:40:30","nodeType":"YulIdentifier","src":"9294:40:30"},"nativeSrc":"9294:48:30","nodeType":"YulFunctionCall","src":"9294:48:30"}],"functionName":{"name":"allocate_memory","nativeSrc":"9278:15:30","nodeType":"YulIdentifier","src":"9278:15:30"},"nativeSrc":"9278:65:30","nodeType":"YulFunctionCall","src":"9278:65:30"},"variableNames":[{"name":"array","nativeSrc":"9269:5:30","nodeType":"YulIdentifier","src":"9269:5:30"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"9359:5:30","nodeType":"YulIdentifier","src":"9359:5:30"},{"name":"length","nativeSrc":"9366:6:30","nodeType":"YulIdentifier","src":"9366:6:30"}],"functionName":{"name":"mstore","nativeSrc":"9352:6:30","nodeType":"YulIdentifier","src":"9352:6:30"},"nativeSrc":"9352:21:30","nodeType":"YulFunctionCall","src":"9352:21:30"},"nativeSrc":"9352:21:30","nodeType":"YulExpressionStatement","src":"9352:21:30"},{"nativeSrc":"9382:27:30","nodeType":"YulVariableDeclaration","src":"9382:27:30","value":{"arguments":[{"name":"array","nativeSrc":"9397:5:30","nodeType":"YulIdentifier","src":"9397:5:30"},{"kind":"number","nativeSrc":"9404:4:30","nodeType":"YulLiteral","src":"9404:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9393:3:30","nodeType":"YulIdentifier","src":"9393:3:30"},"nativeSrc":"9393:16:30","nodeType":"YulFunctionCall","src":"9393:16:30"},"variables":[{"name":"dst","nativeSrc":"9386:3:30","nodeType":"YulTypedName","src":"9386:3:30","type":""}]},{"body":{"nativeSrc":"9447:83:30","nodeType":"YulBlock","src":"9447:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"9449:77:30","nodeType":"YulIdentifier","src":"9449:77:30"},"nativeSrc":"9449:79:30","nodeType":"YulFunctionCall","src":"9449:79:30"},"nativeSrc":"9449:79:30","nodeType":"YulExpressionStatement","src":"9449:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9428:3:30","nodeType":"YulIdentifier","src":"9428:3:30"},{"name":"length","nativeSrc":"9433:6:30","nodeType":"YulIdentifier","src":"9433:6:30"}],"functionName":{"name":"add","nativeSrc":"9424:3:30","nodeType":"YulIdentifier","src":"9424:3:30"},"nativeSrc":"9424:16:30","nodeType":"YulFunctionCall","src":"9424:16:30"},{"name":"end","nativeSrc":"9442:3:30","nodeType":"YulIdentifier","src":"9442:3:30"}],"functionName":{"name":"gt","nativeSrc":"9421:2:30","nodeType":"YulIdentifier","src":"9421:2:30"},"nativeSrc":"9421:25:30","nodeType":"YulFunctionCall","src":"9421:25:30"},"nativeSrc":"9418:112:30","nodeType":"YulIf","src":"9418:112:30"},{"expression":{"arguments":[{"name":"src","nativeSrc":"9576:3:30","nodeType":"YulIdentifier","src":"9576:3:30"},{"name":"dst","nativeSrc":"9581:3:30","nodeType":"YulIdentifier","src":"9581:3:30"},{"name":"length","nativeSrc":"9586:6:30","nodeType":"YulIdentifier","src":"9586:6:30"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"9539:36:30","nodeType":"YulIdentifier","src":"9539:36:30"},"nativeSrc":"9539:54:30","nodeType":"YulFunctionCall","src":"9539:54:30"},"nativeSrc":"9539:54:30","nodeType":"YulExpressionStatement","src":"9539:54:30"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"9176:423:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9232:3:30","nodeType":"YulTypedName","src":"9232:3:30","type":""},{"name":"length","nativeSrc":"9237:6:30","nodeType":"YulTypedName","src":"9237:6:30","type":""},{"name":"end","nativeSrc":"9245:3:30","nodeType":"YulTypedName","src":"9245:3:30","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9253:5:30","nodeType":"YulTypedName","src":"9253:5:30","type":""}],"src":"9176:423:30"},{"body":{"nativeSrc":"9679:277:30","nodeType":"YulBlock","src":"9679:277:30","statements":[{"body":{"nativeSrc":"9728:83:30","nodeType":"YulBlock","src":"9728:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"9730:77:30","nodeType":"YulIdentifier","src":"9730:77:30"},"nativeSrc":"9730:79:30","nodeType":"YulFunctionCall","src":"9730:79:30"},"nativeSrc":"9730:79:30","nodeType":"YulExpressionStatement","src":"9730:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9707:6:30","nodeType":"YulIdentifier","src":"9707:6:30"},{"kind":"number","nativeSrc":"9715:4:30","nodeType":"YulLiteral","src":"9715:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"9703:3:30","nodeType":"YulIdentifier","src":"9703:3:30"},"nativeSrc":"9703:17:30","nodeType":"YulFunctionCall","src":"9703:17:30"},{"name":"end","nativeSrc":"9722:3:30","nodeType":"YulIdentifier","src":"9722:3:30"}],"functionName":{"name":"slt","nativeSrc":"9699:3:30","nodeType":"YulIdentifier","src":"9699:3:30"},"nativeSrc":"9699:27:30","nodeType":"YulFunctionCall","src":"9699:27:30"}],"functionName":{"name":"iszero","nativeSrc":"9692:6:30","nodeType":"YulIdentifier","src":"9692:6:30"},"nativeSrc":"9692:35:30","nodeType":"YulFunctionCall","src":"9692:35:30"},"nativeSrc":"9689:122:30","nodeType":"YulIf","src":"9689:122:30"},{"nativeSrc":"9820:34:30","nodeType":"YulVariableDeclaration","src":"9820:34:30","value":{"arguments":[{"name":"offset","nativeSrc":"9847:6:30","nodeType":"YulIdentifier","src":"9847:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"9834:12:30","nodeType":"YulIdentifier","src":"9834:12:30"},"nativeSrc":"9834:20:30","nodeType":"YulFunctionCall","src":"9834:20:30"},"variables":[{"name":"length","nativeSrc":"9824:6:30","nodeType":"YulTypedName","src":"9824:6:30","type":""}]},{"nativeSrc":"9863:87:30","nodeType":"YulAssignment","src":"9863:87:30","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9923:6:30","nodeType":"YulIdentifier","src":"9923:6:30"},{"kind":"number","nativeSrc":"9931:4:30","nodeType":"YulLiteral","src":"9931:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9919:3:30","nodeType":"YulIdentifier","src":"9919:3:30"},"nativeSrc":"9919:17:30","nodeType":"YulFunctionCall","src":"9919:17:30"},{"name":"length","nativeSrc":"9938:6:30","nodeType":"YulIdentifier","src":"9938:6:30"},{"name":"end","nativeSrc":"9946:3:30","nodeType":"YulIdentifier","src":"9946:3:30"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"9872:46:30","nodeType":"YulIdentifier","src":"9872:46:30"},"nativeSrc":"9872:78:30","nodeType":"YulFunctionCall","src":"9872:78:30"},"variableNames":[{"name":"array","nativeSrc":"9863:5:30","nodeType":"YulIdentifier","src":"9863:5:30"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9618:338:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9657:6:30","nodeType":"YulTypedName","src":"9657:6:30","type":""},{"name":"end","nativeSrc":"9665:3:30","nodeType":"YulTypedName","src":"9665:3:30","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9673:5:30","nodeType":"YulTypedName","src":"9673:5:30","type":""}],"src":"9618:338:30"},{"body":{"nativeSrc":"10054:560:30","nodeType":"YulBlock","src":"10054:560:30","statements":[{"body":{"nativeSrc":"10100:83:30","nodeType":"YulBlock","src":"10100:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10102:77:30","nodeType":"YulIdentifier","src":"10102:77:30"},"nativeSrc":"10102:79:30","nodeType":"YulFunctionCall","src":"10102:79:30"},"nativeSrc":"10102:79:30","nodeType":"YulExpressionStatement","src":"10102:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10075:7:30","nodeType":"YulIdentifier","src":"10075:7:30"},{"name":"headStart","nativeSrc":"10084:9:30","nodeType":"YulIdentifier","src":"10084:9:30"}],"functionName":{"name":"sub","nativeSrc":"10071:3:30","nodeType":"YulIdentifier","src":"10071:3:30"},"nativeSrc":"10071:23:30","nodeType":"YulFunctionCall","src":"10071:23:30"},{"kind":"number","nativeSrc":"10096:2:30","nodeType":"YulLiteral","src":"10096:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10067:3:30","nodeType":"YulIdentifier","src":"10067:3:30"},"nativeSrc":"10067:32:30","nodeType":"YulFunctionCall","src":"10067:32:30"},"nativeSrc":"10064:119:30","nodeType":"YulIf","src":"10064:119:30"},{"nativeSrc":"10193:117:30","nodeType":"YulBlock","src":"10193:117:30","statements":[{"nativeSrc":"10208:15:30","nodeType":"YulVariableDeclaration","src":"10208:15:30","value":{"kind":"number","nativeSrc":"10222:1:30","nodeType":"YulLiteral","src":"10222:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10212:6:30","nodeType":"YulTypedName","src":"10212:6:30","type":""}]},{"nativeSrc":"10237:63:30","nodeType":"YulAssignment","src":"10237:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10272:9:30","nodeType":"YulIdentifier","src":"10272:9:30"},{"name":"offset","nativeSrc":"10283:6:30","nodeType":"YulIdentifier","src":"10283:6:30"}],"functionName":{"name":"add","nativeSrc":"10268:3:30","nodeType":"YulIdentifier","src":"10268:3:30"},"nativeSrc":"10268:22:30","nodeType":"YulFunctionCall","src":"10268:22:30"},{"name":"dataEnd","nativeSrc":"10292:7:30","nodeType":"YulIdentifier","src":"10292:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10247:20:30","nodeType":"YulIdentifier","src":"10247:20:30"},"nativeSrc":"10247:53:30","nodeType":"YulFunctionCall","src":"10247:53:30"},"variableNames":[{"name":"value0","nativeSrc":"10237:6:30","nodeType":"YulIdentifier","src":"10237:6:30"}]}]},{"nativeSrc":"10320:287:30","nodeType":"YulBlock","src":"10320:287:30","statements":[{"nativeSrc":"10335:46:30","nodeType":"YulVariableDeclaration","src":"10335:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10366:9:30","nodeType":"YulIdentifier","src":"10366:9:30"},{"kind":"number","nativeSrc":"10377:2:30","nodeType":"YulLiteral","src":"10377:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10362:3:30","nodeType":"YulIdentifier","src":"10362:3:30"},"nativeSrc":"10362:18:30","nodeType":"YulFunctionCall","src":"10362:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"10349:12:30","nodeType":"YulIdentifier","src":"10349:12:30"},"nativeSrc":"10349:32:30","nodeType":"YulFunctionCall","src":"10349:32:30"},"variables":[{"name":"offset","nativeSrc":"10339:6:30","nodeType":"YulTypedName","src":"10339:6:30","type":""}]},{"body":{"nativeSrc":"10428:83:30","nodeType":"YulBlock","src":"10428:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10430:77:30","nodeType":"YulIdentifier","src":"10430:77:30"},"nativeSrc":"10430:79:30","nodeType":"YulFunctionCall","src":"10430:79:30"},"nativeSrc":"10430:79:30","nodeType":"YulExpressionStatement","src":"10430:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10400:6:30","nodeType":"YulIdentifier","src":"10400:6:30"},{"kind":"number","nativeSrc":"10408:18:30","nodeType":"YulLiteral","src":"10408:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10397:2:30","nodeType":"YulIdentifier","src":"10397:2:30"},"nativeSrc":"10397:30:30","nodeType":"YulFunctionCall","src":"10397:30:30"},"nativeSrc":"10394:117:30","nodeType":"YulIf","src":"10394:117:30"},{"nativeSrc":"10525:72:30","nodeType":"YulAssignment","src":"10525:72:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10569:9:30","nodeType":"YulIdentifier","src":"10569:9:30"},{"name":"offset","nativeSrc":"10580:6:30","nodeType":"YulIdentifier","src":"10580:6:30"}],"functionName":{"name":"add","nativeSrc":"10565:3:30","nodeType":"YulIdentifier","src":"10565:3:30"},"nativeSrc":"10565:22:30","nodeType":"YulFunctionCall","src":"10565:22:30"},{"name":"dataEnd","nativeSrc":"10589:7:30","nodeType":"YulIdentifier","src":"10589:7:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"10535:29:30","nodeType":"YulIdentifier","src":"10535:29:30"},"nativeSrc":"10535:62:30","nodeType":"YulFunctionCall","src":"10535:62:30"},"variableNames":[{"name":"value1","nativeSrc":"10525:6:30","nodeType":"YulIdentifier","src":"10525:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"9962:652:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10016:9:30","nodeType":"YulTypedName","src":"10016:9:30","type":""},{"name":"dataEnd","nativeSrc":"10027:7:30","nodeType":"YulTypedName","src":"10027:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10039:6:30","nodeType":"YulTypedName","src":"10039:6:30","type":""},{"name":"value1","nativeSrc":"10047:6:30","nodeType":"YulTypedName","src":"10047:6:30","type":""}],"src":"9962:652:30"},{"body":{"nativeSrc":"10687:241:30","nodeType":"YulBlock","src":"10687:241:30","statements":[{"body":{"nativeSrc":"10792:22:30","nodeType":"YulBlock","src":"10792:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10794:16:30","nodeType":"YulIdentifier","src":"10794:16:30"},"nativeSrc":"10794:18:30","nodeType":"YulFunctionCall","src":"10794:18:30"},"nativeSrc":"10794:18:30","nodeType":"YulExpressionStatement","src":"10794:18:30"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10764:6:30","nodeType":"YulIdentifier","src":"10764:6:30"},{"kind":"number","nativeSrc":"10772:18:30","nodeType":"YulLiteral","src":"10772:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10761:2:30","nodeType":"YulIdentifier","src":"10761:2:30"},"nativeSrc":"10761:30:30","nodeType":"YulFunctionCall","src":"10761:30:30"},"nativeSrc":"10758:56:30","nodeType":"YulIf","src":"10758:56:30"},{"nativeSrc":"10824:37:30","nodeType":"YulAssignment","src":"10824:37:30","value":{"arguments":[{"name":"length","nativeSrc":"10854:6:30","nodeType":"YulIdentifier","src":"10854:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10832:21:30","nodeType":"YulIdentifier","src":"10832:21:30"},"nativeSrc":"10832:29:30","nodeType":"YulFunctionCall","src":"10832:29:30"},"variableNames":[{"name":"size","nativeSrc":"10824:4:30","nodeType":"YulIdentifier","src":"10824:4:30"}]},{"nativeSrc":"10898:23:30","nodeType":"YulAssignment","src":"10898:23:30","value":{"arguments":[{"name":"size","nativeSrc":"10910:4:30","nodeType":"YulIdentifier","src":"10910:4:30"},{"kind":"number","nativeSrc":"10916:4:30","nodeType":"YulLiteral","src":"10916:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10906:3:30","nodeType":"YulIdentifier","src":"10906:3:30"},"nativeSrc":"10906:15:30","nodeType":"YulFunctionCall","src":"10906:15:30"},"variableNames":[{"name":"size","nativeSrc":"10898:4:30","nodeType":"YulIdentifier","src":"10898:4:30"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"10620:308:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"10671:6:30","nodeType":"YulTypedName","src":"10671:6:30","type":""}],"returnVariables":[{"name":"size","nativeSrc":"10682:4:30","nodeType":"YulTypedName","src":"10682:4:30","type":""}],"src":"10620:308:30"},{"body":{"nativeSrc":"11018:341:30","nodeType":"YulBlock","src":"11018:341:30","statements":[{"nativeSrc":"11028:75:30","nodeType":"YulAssignment","src":"11028:75:30","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"11095:6:30","nodeType":"YulIdentifier","src":"11095:6:30"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"11053:41:30","nodeType":"YulIdentifier","src":"11053:41:30"},"nativeSrc":"11053:49:30","nodeType":"YulFunctionCall","src":"11053:49:30"}],"functionName":{"name":"allocate_memory","nativeSrc":"11037:15:30","nodeType":"YulIdentifier","src":"11037:15:30"},"nativeSrc":"11037:66:30","nodeType":"YulFunctionCall","src":"11037:66:30"},"variableNames":[{"name":"array","nativeSrc":"11028:5:30","nodeType":"YulIdentifier","src":"11028:5:30"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"11119:5:30","nodeType":"YulIdentifier","src":"11119:5:30"},{"name":"length","nativeSrc":"11126:6:30","nodeType":"YulIdentifier","src":"11126:6:30"}],"functionName":{"name":"mstore","nativeSrc":"11112:6:30","nodeType":"YulIdentifier","src":"11112:6:30"},"nativeSrc":"11112:21:30","nodeType":"YulFunctionCall","src":"11112:21:30"},"nativeSrc":"11112:21:30","nodeType":"YulExpressionStatement","src":"11112:21:30"},{"nativeSrc":"11142:27:30","nodeType":"YulVariableDeclaration","src":"11142:27:30","value":{"arguments":[{"name":"array","nativeSrc":"11157:5:30","nodeType":"YulIdentifier","src":"11157:5:30"},{"kind":"number","nativeSrc":"11164:4:30","nodeType":"YulLiteral","src":"11164:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11153:3:30","nodeType":"YulIdentifier","src":"11153:3:30"},"nativeSrc":"11153:16:30","nodeType":"YulFunctionCall","src":"11153:16:30"},"variables":[{"name":"dst","nativeSrc":"11146:3:30","nodeType":"YulTypedName","src":"11146:3:30","type":""}]},{"body":{"nativeSrc":"11207:83:30","nodeType":"YulBlock","src":"11207:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"11209:77:30","nodeType":"YulIdentifier","src":"11209:77:30"},"nativeSrc":"11209:79:30","nodeType":"YulFunctionCall","src":"11209:79:30"},"nativeSrc":"11209:79:30","nodeType":"YulExpressionStatement","src":"11209:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11188:3:30","nodeType":"YulIdentifier","src":"11188:3:30"},{"name":"length","nativeSrc":"11193:6:30","nodeType":"YulIdentifier","src":"11193:6:30"}],"functionName":{"name":"add","nativeSrc":"11184:3:30","nodeType":"YulIdentifier","src":"11184:3:30"},"nativeSrc":"11184:16:30","nodeType":"YulFunctionCall","src":"11184:16:30"},{"name":"end","nativeSrc":"11202:3:30","nodeType":"YulIdentifier","src":"11202:3:30"}],"functionName":{"name":"gt","nativeSrc":"11181:2:30","nodeType":"YulIdentifier","src":"11181:2:30"},"nativeSrc":"11181:25:30","nodeType":"YulFunctionCall","src":"11181:25:30"},"nativeSrc":"11178:112:30","nodeType":"YulIf","src":"11178:112:30"},{"expression":{"arguments":[{"name":"src","nativeSrc":"11336:3:30","nodeType":"YulIdentifier","src":"11336:3:30"},{"name":"dst","nativeSrc":"11341:3:30","nodeType":"YulIdentifier","src":"11341:3:30"},{"name":"length","nativeSrc":"11346:6:30","nodeType":"YulIdentifier","src":"11346:6:30"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"11299:36:30","nodeType":"YulIdentifier","src":"11299:36:30"},"nativeSrc":"11299:54:30","nodeType":"YulFunctionCall","src":"11299:54:30"},"nativeSrc":"11299:54:30","nodeType":"YulExpressionStatement","src":"11299:54:30"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"10934:425:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10991:3:30","nodeType":"YulTypedName","src":"10991:3:30","type":""},{"name":"length","nativeSrc":"10996:6:30","nodeType":"YulTypedName","src":"10996:6:30","type":""},{"name":"end","nativeSrc":"11004:3:30","nodeType":"YulTypedName","src":"11004:3:30","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11012:5:30","nodeType":"YulTypedName","src":"11012:5:30","type":""}],"src":"10934:425:30"},{"body":{"nativeSrc":"11441:278:30","nodeType":"YulBlock","src":"11441:278:30","statements":[{"body":{"nativeSrc":"11490:83:30","nodeType":"YulBlock","src":"11490:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"11492:77:30","nodeType":"YulIdentifier","src":"11492:77:30"},"nativeSrc":"11492:79:30","nodeType":"YulFunctionCall","src":"11492:79:30"},"nativeSrc":"11492:79:30","nodeType":"YulExpressionStatement","src":"11492:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11469:6:30","nodeType":"YulIdentifier","src":"11469:6:30"},{"kind":"number","nativeSrc":"11477:4:30","nodeType":"YulLiteral","src":"11477:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"11465:3:30","nodeType":"YulIdentifier","src":"11465:3:30"},"nativeSrc":"11465:17:30","nodeType":"YulFunctionCall","src":"11465:17:30"},{"name":"end","nativeSrc":"11484:3:30","nodeType":"YulIdentifier","src":"11484:3:30"}],"functionName":{"name":"slt","nativeSrc":"11461:3:30","nodeType":"YulIdentifier","src":"11461:3:30"},"nativeSrc":"11461:27:30","nodeType":"YulFunctionCall","src":"11461:27:30"}],"functionName":{"name":"iszero","nativeSrc":"11454:6:30","nodeType":"YulIdentifier","src":"11454:6:30"},"nativeSrc":"11454:35:30","nodeType":"YulFunctionCall","src":"11454:35:30"},"nativeSrc":"11451:122:30","nodeType":"YulIf","src":"11451:122:30"},{"nativeSrc":"11582:34:30","nodeType":"YulVariableDeclaration","src":"11582:34:30","value":{"arguments":[{"name":"offset","nativeSrc":"11609:6:30","nodeType":"YulIdentifier","src":"11609:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"11596:12:30","nodeType":"YulIdentifier","src":"11596:12:30"},"nativeSrc":"11596:20:30","nodeType":"YulFunctionCall","src":"11596:20:30"},"variables":[{"name":"length","nativeSrc":"11586:6:30","nodeType":"YulTypedName","src":"11586:6:30","type":""}]},{"nativeSrc":"11625:88:30","nodeType":"YulAssignment","src":"11625:88:30","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11686:6:30","nodeType":"YulIdentifier","src":"11686:6:30"},{"kind":"number","nativeSrc":"11694:4:30","nodeType":"YulLiteral","src":"11694:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11682:3:30","nodeType":"YulIdentifier","src":"11682:3:30"},"nativeSrc":"11682:17:30","nodeType":"YulFunctionCall","src":"11682:17:30"},{"name":"length","nativeSrc":"11701:6:30","nodeType":"YulIdentifier","src":"11701:6:30"},{"name":"end","nativeSrc":"11709:3:30","nodeType":"YulIdentifier","src":"11709:3:30"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"11634:47:30","nodeType":"YulIdentifier","src":"11634:47:30"},"nativeSrc":"11634:79:30","nodeType":"YulFunctionCall","src":"11634:79:30"},"variableNames":[{"name":"array","nativeSrc":"11625:5:30","nodeType":"YulIdentifier","src":"11625:5:30"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"11379:340:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11419:6:30","nodeType":"YulTypedName","src":"11419:6:30","type":""},{"name":"end","nativeSrc":"11427:3:30","nodeType":"YulTypedName","src":"11427:3:30","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11435:5:30","nodeType":"YulTypedName","src":"11435:5:30","type":""}],"src":"11379:340:30"},{"body":{"nativeSrc":"11861:987:30","nodeType":"YulBlock","src":"11861:987:30","statements":[{"body":{"nativeSrc":"11908:83:30","nodeType":"YulBlock","src":"11908:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11910:77:30","nodeType":"YulIdentifier","src":"11910:77:30"},"nativeSrc":"11910:79:30","nodeType":"YulFunctionCall","src":"11910:79:30"},"nativeSrc":"11910:79:30","nodeType":"YulExpressionStatement","src":"11910:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11882:7:30","nodeType":"YulIdentifier","src":"11882:7:30"},{"name":"headStart","nativeSrc":"11891:9:30","nodeType":"YulIdentifier","src":"11891:9:30"}],"functionName":{"name":"sub","nativeSrc":"11878:3:30","nodeType":"YulIdentifier","src":"11878:3:30"},"nativeSrc":"11878:23:30","nodeType":"YulFunctionCall","src":"11878:23:30"},{"kind":"number","nativeSrc":"11903:3:30","nodeType":"YulLiteral","src":"11903:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"11874:3:30","nodeType":"YulIdentifier","src":"11874:3:30"},"nativeSrc":"11874:33:30","nodeType":"YulFunctionCall","src":"11874:33:30"},"nativeSrc":"11871:120:30","nodeType":"YulIf","src":"11871:120:30"},{"nativeSrc":"12001:117:30","nodeType":"YulBlock","src":"12001:117:30","statements":[{"nativeSrc":"12016:15:30","nodeType":"YulVariableDeclaration","src":"12016:15:30","value":{"kind":"number","nativeSrc":"12030:1:30","nodeType":"YulLiteral","src":"12030:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12020:6:30","nodeType":"YulTypedName","src":"12020:6:30","type":""}]},{"nativeSrc":"12045:63:30","nodeType":"YulAssignment","src":"12045:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12080:9:30","nodeType":"YulIdentifier","src":"12080:9:30"},{"name":"offset","nativeSrc":"12091:6:30","nodeType":"YulIdentifier","src":"12091:6:30"}],"functionName":{"name":"add","nativeSrc":"12076:3:30","nodeType":"YulIdentifier","src":"12076:3:30"},"nativeSrc":"12076:22:30","nodeType":"YulFunctionCall","src":"12076:22:30"},{"name":"dataEnd","nativeSrc":"12100:7:30","nodeType":"YulIdentifier","src":"12100:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12055:20:30","nodeType":"YulIdentifier","src":"12055:20:30"},"nativeSrc":"12055:53:30","nodeType":"YulFunctionCall","src":"12055:53:30"},"variableNames":[{"name":"value0","nativeSrc":"12045:6:30","nodeType":"YulIdentifier","src":"12045:6:30"}]}]},{"nativeSrc":"12128:288:30","nodeType":"YulBlock","src":"12128:288:30","statements":[{"nativeSrc":"12143:46:30","nodeType":"YulVariableDeclaration","src":"12143:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12174:9:30","nodeType":"YulIdentifier","src":"12174:9:30"},{"kind":"number","nativeSrc":"12185:2:30","nodeType":"YulLiteral","src":"12185:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12170:3:30","nodeType":"YulIdentifier","src":"12170:3:30"},"nativeSrc":"12170:18:30","nodeType":"YulFunctionCall","src":"12170:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"12157:12:30","nodeType":"YulIdentifier","src":"12157:12:30"},"nativeSrc":"12157:32:30","nodeType":"YulFunctionCall","src":"12157:32:30"},"variables":[{"name":"offset","nativeSrc":"12147:6:30","nodeType":"YulTypedName","src":"12147:6:30","type":""}]},{"body":{"nativeSrc":"12236:83:30","nodeType":"YulBlock","src":"12236:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12238:77:30","nodeType":"YulIdentifier","src":"12238:77:30"},"nativeSrc":"12238:79:30","nodeType":"YulFunctionCall","src":"12238:79:30"},"nativeSrc":"12238:79:30","nodeType":"YulExpressionStatement","src":"12238:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12208:6:30","nodeType":"YulIdentifier","src":"12208:6:30"},{"kind":"number","nativeSrc":"12216:18:30","nodeType":"YulLiteral","src":"12216:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12205:2:30","nodeType":"YulIdentifier","src":"12205:2:30"},"nativeSrc":"12205:30:30","nodeType":"YulFunctionCall","src":"12205:30:30"},"nativeSrc":"12202:117:30","nodeType":"YulIf","src":"12202:117:30"},{"nativeSrc":"12333:73:30","nodeType":"YulAssignment","src":"12333:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12378:9:30","nodeType":"YulIdentifier","src":"12378:9:30"},{"name":"offset","nativeSrc":"12389:6:30","nodeType":"YulIdentifier","src":"12389:6:30"}],"functionName":{"name":"add","nativeSrc":"12374:3:30","nodeType":"YulIdentifier","src":"12374:3:30"},"nativeSrc":"12374:22:30","nodeType":"YulFunctionCall","src":"12374:22:30"},{"name":"dataEnd","nativeSrc":"12398:7:30","nodeType":"YulIdentifier","src":"12398:7:30"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"12343:30:30","nodeType":"YulIdentifier","src":"12343:30:30"},"nativeSrc":"12343:63:30","nodeType":"YulFunctionCall","src":"12343:63:30"},"variableNames":[{"name":"value1","nativeSrc":"12333:6:30","nodeType":"YulIdentifier","src":"12333:6:30"}]}]},{"nativeSrc":"12426:118:30","nodeType":"YulBlock","src":"12426:118:30","statements":[{"nativeSrc":"12441:16:30","nodeType":"YulVariableDeclaration","src":"12441:16:30","value":{"kind":"number","nativeSrc":"12455:2:30","nodeType":"YulLiteral","src":"12455:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"12445:6:30","nodeType":"YulTypedName","src":"12445:6:30","type":""}]},{"nativeSrc":"12471:63:30","nodeType":"YulAssignment","src":"12471:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12506:9:30","nodeType":"YulIdentifier","src":"12506:9:30"},{"name":"offset","nativeSrc":"12517:6:30","nodeType":"YulIdentifier","src":"12517:6:30"}],"functionName":{"name":"add","nativeSrc":"12502:3:30","nodeType":"YulIdentifier","src":"12502:3:30"},"nativeSrc":"12502:22:30","nodeType":"YulFunctionCall","src":"12502:22:30"},{"name":"dataEnd","nativeSrc":"12526:7:30","nodeType":"YulIdentifier","src":"12526:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"12481:20:30","nodeType":"YulIdentifier","src":"12481:20:30"},"nativeSrc":"12481:53:30","nodeType":"YulFunctionCall","src":"12481:53:30"},"variableNames":[{"name":"value2","nativeSrc":"12471:6:30","nodeType":"YulIdentifier","src":"12471:6:30"}]}]},{"nativeSrc":"12554:287:30","nodeType":"YulBlock","src":"12554:287:30","statements":[{"nativeSrc":"12569:46:30","nodeType":"YulVariableDeclaration","src":"12569:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12600:9:30","nodeType":"YulIdentifier","src":"12600:9:30"},{"kind":"number","nativeSrc":"12611:2:30","nodeType":"YulLiteral","src":"12611:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12596:3:30","nodeType":"YulIdentifier","src":"12596:3:30"},"nativeSrc":"12596:18:30","nodeType":"YulFunctionCall","src":"12596:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"12583:12:30","nodeType":"YulIdentifier","src":"12583:12:30"},"nativeSrc":"12583:32:30","nodeType":"YulFunctionCall","src":"12583:32:30"},"variables":[{"name":"offset","nativeSrc":"12573:6:30","nodeType":"YulTypedName","src":"12573:6:30","type":""}]},{"body":{"nativeSrc":"12662:83:30","nodeType":"YulBlock","src":"12662:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12664:77:30","nodeType":"YulIdentifier","src":"12664:77:30"},"nativeSrc":"12664:79:30","nodeType":"YulFunctionCall","src":"12664:79:30"},"nativeSrc":"12664:79:30","nodeType":"YulExpressionStatement","src":"12664:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12634:6:30","nodeType":"YulIdentifier","src":"12634:6:30"},{"kind":"number","nativeSrc":"12642:18:30","nodeType":"YulLiteral","src":"12642:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12631:2:30","nodeType":"YulIdentifier","src":"12631:2:30"},"nativeSrc":"12631:30:30","nodeType":"YulFunctionCall","src":"12631:30:30"},"nativeSrc":"12628:117:30","nodeType":"YulIf","src":"12628:117:30"},{"nativeSrc":"12759:72:30","nodeType":"YulAssignment","src":"12759:72:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12803:9:30","nodeType":"YulIdentifier","src":"12803:9:30"},{"name":"offset","nativeSrc":"12814:6:30","nodeType":"YulIdentifier","src":"12814:6:30"}],"functionName":{"name":"add","nativeSrc":"12799:3:30","nodeType":"YulIdentifier","src":"12799:3:30"},"nativeSrc":"12799:22:30","nodeType":"YulFunctionCall","src":"12799:22:30"},{"name":"dataEnd","nativeSrc":"12823:7:30","nodeType":"YulIdentifier","src":"12823:7:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"12769:29:30","nodeType":"YulIdentifier","src":"12769:29:30"},"nativeSrc":"12769:62:30","nodeType":"YulFunctionCall","src":"12769:62:30"},"variableNames":[{"name":"value3","nativeSrc":"12759:6:30","nodeType":"YulIdentifier","src":"12759:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_bytes32t_bytes_memory_ptr","nativeSrc":"11725:1123:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11807:9:30","nodeType":"YulTypedName","src":"11807:9:30","type":""},{"name":"dataEnd","nativeSrc":"11818:7:30","nodeType":"YulTypedName","src":"11818:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11830:6:30","nodeType":"YulTypedName","src":"11830:6:30","type":""},{"name":"value1","nativeSrc":"11838:6:30","nodeType":"YulTypedName","src":"11838:6:30","type":""},{"name":"value2","nativeSrc":"11846:6:30","nodeType":"YulTypedName","src":"11846:6:30","type":""},{"name":"value3","nativeSrc":"11854:6:30","nodeType":"YulTypedName","src":"11854:6:30","type":""}],"src":"11725:1123:30"},{"body":{"nativeSrc":"12919:53:30","nodeType":"YulBlock","src":"12919:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12936:3:30","nodeType":"YulIdentifier","src":"12936:3:30"},{"arguments":[{"name":"value","nativeSrc":"12959:5:30","nodeType":"YulIdentifier","src":"12959:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12941:17:30","nodeType":"YulIdentifier","src":"12941:17:30"},"nativeSrc":"12941:24:30","nodeType":"YulFunctionCall","src":"12941:24:30"}],"functionName":{"name":"mstore","nativeSrc":"12929:6:30","nodeType":"YulIdentifier","src":"12929:6:30"},"nativeSrc":"12929:37:30","nodeType":"YulFunctionCall","src":"12929:37:30"},"nativeSrc":"12929:37:30","nodeType":"YulExpressionStatement","src":"12929:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12854:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12907:5:30","nodeType":"YulTypedName","src":"12907:5:30","type":""},{"name":"pos","nativeSrc":"12914:3:30","nodeType":"YulTypedName","src":"12914:3:30","type":""}],"src":"12854:118:30"},{"body":{"nativeSrc":"13076:124:30","nodeType":"YulBlock","src":"13076:124:30","statements":[{"nativeSrc":"13086:26:30","nodeType":"YulAssignment","src":"13086:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"13098:9:30","nodeType":"YulIdentifier","src":"13098:9:30"},{"kind":"number","nativeSrc":"13109:2:30","nodeType":"YulLiteral","src":"13109:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13094:3:30","nodeType":"YulIdentifier","src":"13094:3:30"},"nativeSrc":"13094:18:30","nodeType":"YulFunctionCall","src":"13094:18:30"},"variableNames":[{"name":"tail","nativeSrc":"13086:4:30","nodeType":"YulIdentifier","src":"13086:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13166:6:30","nodeType":"YulIdentifier","src":"13166:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"13179:9:30","nodeType":"YulIdentifier","src":"13179:9:30"},{"kind":"number","nativeSrc":"13190:1:30","nodeType":"YulLiteral","src":"13190:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13175:3:30","nodeType":"YulIdentifier","src":"13175:3:30"},"nativeSrc":"13175:17:30","nodeType":"YulFunctionCall","src":"13175:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13122:43:30","nodeType":"YulIdentifier","src":"13122:43:30"},"nativeSrc":"13122:71:30","nodeType":"YulFunctionCall","src":"13122:71:30"},"nativeSrc":"13122:71:30","nodeType":"YulExpressionStatement","src":"13122:71:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"12978:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13048:9:30","nodeType":"YulTypedName","src":"13048:9:30","type":""},{"name":"value0","nativeSrc":"13060:6:30","nodeType":"YulTypedName","src":"13060:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13071:4:30","nodeType":"YulTypedName","src":"13071:4:30","type":""}],"src":"12978:222:30"},{"body":{"nativeSrc":"13299:561:30","nodeType":"YulBlock","src":"13299:561:30","statements":[{"body":{"nativeSrc":"13345:83:30","nodeType":"YulBlock","src":"13345:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13347:77:30","nodeType":"YulIdentifier","src":"13347:77:30"},"nativeSrc":"13347:79:30","nodeType":"YulFunctionCall","src":"13347:79:30"},"nativeSrc":"13347:79:30","nodeType":"YulExpressionStatement","src":"13347:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13320:7:30","nodeType":"YulIdentifier","src":"13320:7:30"},{"name":"headStart","nativeSrc":"13329:9:30","nodeType":"YulIdentifier","src":"13329:9:30"}],"functionName":{"name":"sub","nativeSrc":"13316:3:30","nodeType":"YulIdentifier","src":"13316:3:30"},"nativeSrc":"13316:23:30","nodeType":"YulFunctionCall","src":"13316:23:30"},{"kind":"number","nativeSrc":"13341:2:30","nodeType":"YulLiteral","src":"13341:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"13312:3:30","nodeType":"YulIdentifier","src":"13312:3:30"},"nativeSrc":"13312:32:30","nodeType":"YulFunctionCall","src":"13312:32:30"},"nativeSrc":"13309:119:30","nodeType":"YulIf","src":"13309:119:30"},{"nativeSrc":"13438:117:30","nodeType":"YulBlock","src":"13438:117:30","statements":[{"nativeSrc":"13453:15:30","nodeType":"YulVariableDeclaration","src":"13453:15:30","value":{"kind":"number","nativeSrc":"13467:1:30","nodeType":"YulLiteral","src":"13467:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13457:6:30","nodeType":"YulTypedName","src":"13457:6:30","type":""}]},{"nativeSrc":"13482:63:30","nodeType":"YulAssignment","src":"13482:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13517:9:30","nodeType":"YulIdentifier","src":"13517:9:30"},{"name":"offset","nativeSrc":"13528:6:30","nodeType":"YulIdentifier","src":"13528:6:30"}],"functionName":{"name":"add","nativeSrc":"13513:3:30","nodeType":"YulIdentifier","src":"13513:3:30"},"nativeSrc":"13513:22:30","nodeType":"YulFunctionCall","src":"13513:22:30"},{"name":"dataEnd","nativeSrc":"13537:7:30","nodeType":"YulIdentifier","src":"13537:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13492:20:30","nodeType":"YulIdentifier","src":"13492:20:30"},"nativeSrc":"13492:53:30","nodeType":"YulFunctionCall","src":"13492:53:30"},"variableNames":[{"name":"value0","nativeSrc":"13482:6:30","nodeType":"YulIdentifier","src":"13482:6:30"}]}]},{"nativeSrc":"13565:288:30","nodeType":"YulBlock","src":"13565:288:30","statements":[{"nativeSrc":"13580:46:30","nodeType":"YulVariableDeclaration","src":"13580:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13611:9:30","nodeType":"YulIdentifier","src":"13611:9:30"},{"kind":"number","nativeSrc":"13622:2:30","nodeType":"YulLiteral","src":"13622:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13607:3:30","nodeType":"YulIdentifier","src":"13607:3:30"},"nativeSrc":"13607:18:30","nodeType":"YulFunctionCall","src":"13607:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"13594:12:30","nodeType":"YulIdentifier","src":"13594:12:30"},"nativeSrc":"13594:32:30","nodeType":"YulFunctionCall","src":"13594:32:30"},"variables":[{"name":"offset","nativeSrc":"13584:6:30","nodeType":"YulTypedName","src":"13584:6:30","type":""}]},{"body":{"nativeSrc":"13673:83:30","nodeType":"YulBlock","src":"13673:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"13675:77:30","nodeType":"YulIdentifier","src":"13675:77:30"},"nativeSrc":"13675:79:30","nodeType":"YulFunctionCall","src":"13675:79:30"},"nativeSrc":"13675:79:30","nodeType":"YulExpressionStatement","src":"13675:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"13645:6:30","nodeType":"YulIdentifier","src":"13645:6:30"},{"kind":"number","nativeSrc":"13653:18:30","nodeType":"YulLiteral","src":"13653:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13642:2:30","nodeType":"YulIdentifier","src":"13642:2:30"},"nativeSrc":"13642:30:30","nodeType":"YulFunctionCall","src":"13642:30:30"},"nativeSrc":"13639:117:30","nodeType":"YulIf","src":"13639:117:30"},{"nativeSrc":"13770:73:30","nodeType":"YulAssignment","src":"13770:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13815:9:30","nodeType":"YulIdentifier","src":"13815:9:30"},{"name":"offset","nativeSrc":"13826:6:30","nodeType":"YulIdentifier","src":"13826:6:30"}],"functionName":{"name":"add","nativeSrc":"13811:3:30","nodeType":"YulIdentifier","src":"13811:3:30"},"nativeSrc":"13811:22:30","nodeType":"YulFunctionCall","src":"13811:22:30"},{"name":"dataEnd","nativeSrc":"13835:7:30","nodeType":"YulIdentifier","src":"13835:7:30"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"13780:30:30","nodeType":"YulIdentifier","src":"13780:30:30"},"nativeSrc":"13780:63:30","nodeType":"YulFunctionCall","src":"13780:63:30"},"variableNames":[{"name":"value1","nativeSrc":"13770:6:30","nodeType":"YulIdentifier","src":"13770:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nativeSrc":"13206:654:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13261:9:30","nodeType":"YulTypedName","src":"13261:9:30","type":""},{"name":"dataEnd","nativeSrc":"13272:7:30","nodeType":"YulTypedName","src":"13272:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13284:6:30","nodeType":"YulTypedName","src":"13284:6:30","type":""},{"name":"value1","nativeSrc":"13292:6:30","nodeType":"YulTypedName","src":"13292:6:30","type":""}],"src":"13206:654:30"},{"body":{"nativeSrc":"13959:561:30","nodeType":"YulBlock","src":"13959:561:30","statements":[{"body":{"nativeSrc":"14005:83:30","nodeType":"YulBlock","src":"14005:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14007:77:30","nodeType":"YulIdentifier","src":"14007:77:30"},"nativeSrc":"14007:79:30","nodeType":"YulFunctionCall","src":"14007:79:30"},"nativeSrc":"14007:79:30","nodeType":"YulExpressionStatement","src":"14007:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13980:7:30","nodeType":"YulIdentifier","src":"13980:7:30"},{"name":"headStart","nativeSrc":"13989:9:30","nodeType":"YulIdentifier","src":"13989:9:30"}],"functionName":{"name":"sub","nativeSrc":"13976:3:30","nodeType":"YulIdentifier","src":"13976:3:30"},"nativeSrc":"13976:23:30","nodeType":"YulFunctionCall","src":"13976:23:30"},{"kind":"number","nativeSrc":"14001:2:30","nodeType":"YulLiteral","src":"14001:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"13972:3:30","nodeType":"YulIdentifier","src":"13972:3:30"},"nativeSrc":"13972:32:30","nodeType":"YulFunctionCall","src":"13972:32:30"},"nativeSrc":"13969:119:30","nodeType":"YulIf","src":"13969:119:30"},{"nativeSrc":"14098:117:30","nodeType":"YulBlock","src":"14098:117:30","statements":[{"nativeSrc":"14113:15:30","nodeType":"YulVariableDeclaration","src":"14113:15:30","value":{"kind":"number","nativeSrc":"14127:1:30","nodeType":"YulLiteral","src":"14127:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14117:6:30","nodeType":"YulTypedName","src":"14117:6:30","type":""}]},{"nativeSrc":"14142:63:30","nodeType":"YulAssignment","src":"14142:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14177:9:30","nodeType":"YulIdentifier","src":"14177:9:30"},{"name":"offset","nativeSrc":"14188:6:30","nodeType":"YulIdentifier","src":"14188:6:30"}],"functionName":{"name":"add","nativeSrc":"14173:3:30","nodeType":"YulIdentifier","src":"14173:3:30"},"nativeSrc":"14173:22:30","nodeType":"YulFunctionCall","src":"14173:22:30"},{"name":"dataEnd","nativeSrc":"14197:7:30","nodeType":"YulIdentifier","src":"14197:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"14152:20:30","nodeType":"YulIdentifier","src":"14152:20:30"},"nativeSrc":"14152:53:30","nodeType":"YulFunctionCall","src":"14152:53:30"},"variableNames":[{"name":"value0","nativeSrc":"14142:6:30","nodeType":"YulIdentifier","src":"14142:6:30"}]}]},{"nativeSrc":"14225:288:30","nodeType":"YulBlock","src":"14225:288:30","statements":[{"nativeSrc":"14240:46:30","nodeType":"YulVariableDeclaration","src":"14240:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14271:9:30","nodeType":"YulIdentifier","src":"14271:9:30"},{"kind":"number","nativeSrc":"14282:2:30","nodeType":"YulLiteral","src":"14282:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14267:3:30","nodeType":"YulIdentifier","src":"14267:3:30"},"nativeSrc":"14267:18:30","nodeType":"YulFunctionCall","src":"14267:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"14254:12:30","nodeType":"YulIdentifier","src":"14254:12:30"},"nativeSrc":"14254:32:30","nodeType":"YulFunctionCall","src":"14254:32:30"},"variables":[{"name":"offset","nativeSrc":"14244:6:30","nodeType":"YulTypedName","src":"14244:6:30","type":""}]},{"body":{"nativeSrc":"14333:83:30","nodeType":"YulBlock","src":"14333:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"14335:77:30","nodeType":"YulIdentifier","src":"14335:77:30"},"nativeSrc":"14335:79:30","nodeType":"YulFunctionCall","src":"14335:79:30"},"nativeSrc":"14335:79:30","nodeType":"YulExpressionStatement","src":"14335:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"14305:6:30","nodeType":"YulIdentifier","src":"14305:6:30"},{"kind":"number","nativeSrc":"14313:18:30","nodeType":"YulLiteral","src":"14313:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14302:2:30","nodeType":"YulIdentifier","src":"14302:2:30"},"nativeSrc":"14302:30:30","nodeType":"YulFunctionCall","src":"14302:30:30"},"nativeSrc":"14299:117:30","nodeType":"YulIf","src":"14299:117:30"},{"nativeSrc":"14430:73:30","nodeType":"YulAssignment","src":"14430:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14475:9:30","nodeType":"YulIdentifier","src":"14475:9:30"},{"name":"offset","nativeSrc":"14486:6:30","nodeType":"YulIdentifier","src":"14486:6:30"}],"functionName":{"name":"add","nativeSrc":"14471:3:30","nodeType":"YulIdentifier","src":"14471:3:30"},"nativeSrc":"14471:22:30","nodeType":"YulFunctionCall","src":"14471:22:30"},{"name":"dataEnd","nativeSrc":"14495:7:30","nodeType":"YulIdentifier","src":"14495:7:30"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"14440:30:30","nodeType":"YulIdentifier","src":"14440:30:30"},"nativeSrc":"14440:63:30","nodeType":"YulFunctionCall","src":"14440:63:30"},"variableNames":[{"name":"value1","nativeSrc":"14430:6:30","nodeType":"YulIdentifier","src":"14430:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nativeSrc":"13866:654:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13921:9:30","nodeType":"YulTypedName","src":"13921:9:30","type":""},{"name":"dataEnd","nativeSrc":"13932:7:30","nodeType":"YulTypedName","src":"13932:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13944:6:30","nodeType":"YulTypedName","src":"13944:6:30","type":""},{"name":"value1","nativeSrc":"13952:6:30","nodeType":"YulTypedName","src":"13952:6:30","type":""}],"src":"13866:654:30"},{"body":{"nativeSrc":"14635:688:30","nodeType":"YulBlock","src":"14635:688:30","statements":[{"body":{"nativeSrc":"14681:83:30","nodeType":"YulBlock","src":"14681:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14683:77:30","nodeType":"YulIdentifier","src":"14683:77:30"},"nativeSrc":"14683:79:30","nodeType":"YulFunctionCall","src":"14683:79:30"},"nativeSrc":"14683:79:30","nodeType":"YulExpressionStatement","src":"14683:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14656:7:30","nodeType":"YulIdentifier","src":"14656:7:30"},{"name":"headStart","nativeSrc":"14665:9:30","nodeType":"YulIdentifier","src":"14665:9:30"}],"functionName":{"name":"sub","nativeSrc":"14652:3:30","nodeType":"YulIdentifier","src":"14652:3:30"},"nativeSrc":"14652:23:30","nodeType":"YulFunctionCall","src":"14652:23:30"},{"kind":"number","nativeSrc":"14677:2:30","nodeType":"YulLiteral","src":"14677:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"14648:3:30","nodeType":"YulIdentifier","src":"14648:3:30"},"nativeSrc":"14648:32:30","nodeType":"YulFunctionCall","src":"14648:32:30"},"nativeSrc":"14645:119:30","nodeType":"YulIf","src":"14645:119:30"},{"nativeSrc":"14774:117:30","nodeType":"YulBlock","src":"14774:117:30","statements":[{"nativeSrc":"14789:15:30","nodeType":"YulVariableDeclaration","src":"14789:15:30","value":{"kind":"number","nativeSrc":"14803:1:30","nodeType":"YulLiteral","src":"14803:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14793:6:30","nodeType":"YulTypedName","src":"14793:6:30","type":""}]},{"nativeSrc":"14818:63:30","nodeType":"YulAssignment","src":"14818:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14853:9:30","nodeType":"YulIdentifier","src":"14853:9:30"},{"name":"offset","nativeSrc":"14864:6:30","nodeType":"YulIdentifier","src":"14864:6:30"}],"functionName":{"name":"add","nativeSrc":"14849:3:30","nodeType":"YulIdentifier","src":"14849:3:30"},"nativeSrc":"14849:22:30","nodeType":"YulFunctionCall","src":"14849:22:30"},{"name":"dataEnd","nativeSrc":"14873:7:30","nodeType":"YulIdentifier","src":"14873:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"14828:20:30","nodeType":"YulIdentifier","src":"14828:20:30"},"nativeSrc":"14828:53:30","nodeType":"YulFunctionCall","src":"14828:53:30"},"variableNames":[{"name":"value0","nativeSrc":"14818:6:30","nodeType":"YulIdentifier","src":"14818:6:30"}]}]},{"nativeSrc":"14901:118:30","nodeType":"YulBlock","src":"14901:118:30","statements":[{"nativeSrc":"14916:16:30","nodeType":"YulVariableDeclaration","src":"14916:16:30","value":{"kind":"number","nativeSrc":"14930:2:30","nodeType":"YulLiteral","src":"14930:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"14920:6:30","nodeType":"YulTypedName","src":"14920:6:30","type":""}]},{"nativeSrc":"14946:63:30","nodeType":"YulAssignment","src":"14946:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14981:9:30","nodeType":"YulIdentifier","src":"14981:9:30"},{"name":"offset","nativeSrc":"14992:6:30","nodeType":"YulIdentifier","src":"14992:6:30"}],"functionName":{"name":"add","nativeSrc":"14977:3:30","nodeType":"YulIdentifier","src":"14977:3:30"},"nativeSrc":"14977:22:30","nodeType":"YulFunctionCall","src":"14977:22:30"},{"name":"dataEnd","nativeSrc":"15001:7:30","nodeType":"YulIdentifier","src":"15001:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14956:20:30","nodeType":"YulIdentifier","src":"14956:20:30"},"nativeSrc":"14956:53:30","nodeType":"YulFunctionCall","src":"14956:53:30"},"variableNames":[{"name":"value1","nativeSrc":"14946:6:30","nodeType":"YulIdentifier","src":"14946:6:30"}]}]},{"nativeSrc":"15029:287:30","nodeType":"YulBlock","src":"15029:287:30","statements":[{"nativeSrc":"15044:46:30","nodeType":"YulVariableDeclaration","src":"15044:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15075:9:30","nodeType":"YulIdentifier","src":"15075:9:30"},{"kind":"number","nativeSrc":"15086:2:30","nodeType":"YulLiteral","src":"15086:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15071:3:30","nodeType":"YulIdentifier","src":"15071:3:30"},"nativeSrc":"15071:18:30","nodeType":"YulFunctionCall","src":"15071:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"15058:12:30","nodeType":"YulIdentifier","src":"15058:12:30"},"nativeSrc":"15058:32:30","nodeType":"YulFunctionCall","src":"15058:32:30"},"variables":[{"name":"offset","nativeSrc":"15048:6:30","nodeType":"YulTypedName","src":"15048:6:30","type":""}]},{"body":{"nativeSrc":"15137:83:30","nodeType":"YulBlock","src":"15137:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"15139:77:30","nodeType":"YulIdentifier","src":"15139:77:30"},"nativeSrc":"15139:79:30","nodeType":"YulFunctionCall","src":"15139:79:30"},"nativeSrc":"15139:79:30","nodeType":"YulExpressionStatement","src":"15139:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"15109:6:30","nodeType":"YulIdentifier","src":"15109:6:30"},{"kind":"number","nativeSrc":"15117:18:30","nodeType":"YulLiteral","src":"15117:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15106:2:30","nodeType":"YulIdentifier","src":"15106:2:30"},"nativeSrc":"15106:30:30","nodeType":"YulFunctionCall","src":"15106:30:30"},"nativeSrc":"15103:117:30","nodeType":"YulIf","src":"15103:117:30"},{"nativeSrc":"15234:72:30","nodeType":"YulAssignment","src":"15234:72:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15278:9:30","nodeType":"YulIdentifier","src":"15278:9:30"},{"name":"offset","nativeSrc":"15289:6:30","nodeType":"YulIdentifier","src":"15289:6:30"}],"functionName":{"name":"add","nativeSrc":"15274:3:30","nodeType":"YulIdentifier","src":"15274:3:30"},"nativeSrc":"15274:22:30","nodeType":"YulFunctionCall","src":"15274:22:30"},{"name":"dataEnd","nativeSrc":"15298:7:30","nodeType":"YulIdentifier","src":"15298:7:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"15244:29:30","nodeType":"YulIdentifier","src":"15244:29:30"},"nativeSrc":"15244:62:30","nodeType":"YulFunctionCall","src":"15244:62:30"},"variableNames":[{"name":"value2","nativeSrc":"15234:6:30","nodeType":"YulIdentifier","src":"15234:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_bytes_memory_ptr","nativeSrc":"14526:797:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14589:9:30","nodeType":"YulTypedName","src":"14589:9:30","type":""},{"name":"dataEnd","nativeSrc":"14600:7:30","nodeType":"YulTypedName","src":"14600:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14612:6:30","nodeType":"YulTypedName","src":"14612:6:30","type":""},{"name":"value1","nativeSrc":"14620:6:30","nodeType":"YulTypedName","src":"14620:6:30","type":""},{"name":"value2","nativeSrc":"14628:6:30","nodeType":"YulTypedName","src":"14628:6:30","type":""}],"src":"14526:797:30"},{"body":{"nativeSrc":"15369:76:30","nodeType":"YulBlock","src":"15369:76:30","statements":[{"body":{"nativeSrc":"15423:16:30","nodeType":"YulBlock","src":"15423:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15432:1:30","nodeType":"YulLiteral","src":"15432:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"15435:1:30","nodeType":"YulLiteral","src":"15435:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15425:6:30","nodeType":"YulIdentifier","src":"15425:6:30"},"nativeSrc":"15425:12:30","nodeType":"YulFunctionCall","src":"15425:12:30"},"nativeSrc":"15425:12:30","nodeType":"YulExpressionStatement","src":"15425:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15392:5:30","nodeType":"YulIdentifier","src":"15392:5:30"},{"arguments":[{"name":"value","nativeSrc":"15414:5:30","nodeType":"YulIdentifier","src":"15414:5:30"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"15399:14:30","nodeType":"YulIdentifier","src":"15399:14:30"},"nativeSrc":"15399:21:30","nodeType":"YulFunctionCall","src":"15399:21:30"}],"functionName":{"name":"eq","nativeSrc":"15389:2:30","nodeType":"YulIdentifier","src":"15389:2:30"},"nativeSrc":"15389:32:30","nodeType":"YulFunctionCall","src":"15389:32:30"}],"functionName":{"name":"iszero","nativeSrc":"15382:6:30","nodeType":"YulIdentifier","src":"15382:6:30"},"nativeSrc":"15382:40:30","nodeType":"YulFunctionCall","src":"15382:40:30"},"nativeSrc":"15379:60:30","nodeType":"YulIf","src":"15379:60:30"}]},"name":"validator_revert_t_bool","nativeSrc":"15329:116:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15362:5:30","nodeType":"YulTypedName","src":"15362:5:30","type":""}],"src":"15329:116:30"},{"body":{"nativeSrc":"15500:84:30","nodeType":"YulBlock","src":"15500:84:30","statements":[{"nativeSrc":"15510:29:30","nodeType":"YulAssignment","src":"15510:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"15532:6:30","nodeType":"YulIdentifier","src":"15532:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"15519:12:30","nodeType":"YulIdentifier","src":"15519:12:30"},"nativeSrc":"15519:20:30","nodeType":"YulFunctionCall","src":"15519:20:30"},"variableNames":[{"name":"value","nativeSrc":"15510:5:30","nodeType":"YulIdentifier","src":"15510:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15572:5:30","nodeType":"YulIdentifier","src":"15572:5:30"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"15548:23:30","nodeType":"YulIdentifier","src":"15548:23:30"},"nativeSrc":"15548:30:30","nodeType":"YulFunctionCall","src":"15548:30:30"},"nativeSrc":"15548:30:30","nodeType":"YulExpressionStatement","src":"15548:30:30"}]},"name":"abi_decode_t_bool","nativeSrc":"15451:133:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15478:6:30","nodeType":"YulTypedName","src":"15478:6:30","type":""},{"name":"end","nativeSrc":"15486:3:30","nodeType":"YulTypedName","src":"15486:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15494:5:30","nodeType":"YulTypedName","src":"15494:5:30","type":""}],"src":"15451:133:30"},{"body":{"nativeSrc":"15670:388:30","nodeType":"YulBlock","src":"15670:388:30","statements":[{"body":{"nativeSrc":"15716:83:30","nodeType":"YulBlock","src":"15716:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15718:77:30","nodeType":"YulIdentifier","src":"15718:77:30"},"nativeSrc":"15718:79:30","nodeType":"YulFunctionCall","src":"15718:79:30"},"nativeSrc":"15718:79:30","nodeType":"YulExpressionStatement","src":"15718:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15691:7:30","nodeType":"YulIdentifier","src":"15691:7:30"},{"name":"headStart","nativeSrc":"15700:9:30","nodeType":"YulIdentifier","src":"15700:9:30"}],"functionName":{"name":"sub","nativeSrc":"15687:3:30","nodeType":"YulIdentifier","src":"15687:3:30"},"nativeSrc":"15687:23:30","nodeType":"YulFunctionCall","src":"15687:23:30"},{"kind":"number","nativeSrc":"15712:2:30","nodeType":"YulLiteral","src":"15712:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"15683:3:30","nodeType":"YulIdentifier","src":"15683:3:30"},"nativeSrc":"15683:32:30","nodeType":"YulFunctionCall","src":"15683:32:30"},"nativeSrc":"15680:119:30","nodeType":"YulIf","src":"15680:119:30"},{"nativeSrc":"15809:117:30","nodeType":"YulBlock","src":"15809:117:30","statements":[{"nativeSrc":"15824:15:30","nodeType":"YulVariableDeclaration","src":"15824:15:30","value":{"kind":"number","nativeSrc":"15838:1:30","nodeType":"YulLiteral","src":"15838:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15828:6:30","nodeType":"YulTypedName","src":"15828:6:30","type":""}]},{"nativeSrc":"15853:63:30","nodeType":"YulAssignment","src":"15853:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15888:9:30","nodeType":"YulIdentifier","src":"15888:9:30"},{"name":"offset","nativeSrc":"15899:6:30","nodeType":"YulIdentifier","src":"15899:6:30"}],"functionName":{"name":"add","nativeSrc":"15884:3:30","nodeType":"YulIdentifier","src":"15884:3:30"},"nativeSrc":"15884:22:30","nodeType":"YulFunctionCall","src":"15884:22:30"},{"name":"dataEnd","nativeSrc":"15908:7:30","nodeType":"YulIdentifier","src":"15908:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15863:20:30","nodeType":"YulIdentifier","src":"15863:20:30"},"nativeSrc":"15863:53:30","nodeType":"YulFunctionCall","src":"15863:53:30"},"variableNames":[{"name":"value0","nativeSrc":"15853:6:30","nodeType":"YulIdentifier","src":"15853:6:30"}]}]},{"nativeSrc":"15936:115:30","nodeType":"YulBlock","src":"15936:115:30","statements":[{"nativeSrc":"15951:16:30","nodeType":"YulVariableDeclaration","src":"15951:16:30","value":{"kind":"number","nativeSrc":"15965:2:30","nodeType":"YulLiteral","src":"15965:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15955:6:30","nodeType":"YulTypedName","src":"15955:6:30","type":""}]},{"nativeSrc":"15981:60:30","nodeType":"YulAssignment","src":"15981:60:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16013:9:30","nodeType":"YulIdentifier","src":"16013:9:30"},{"name":"offset","nativeSrc":"16024:6:30","nodeType":"YulIdentifier","src":"16024:6:30"}],"functionName":{"name":"add","nativeSrc":"16009:3:30","nodeType":"YulIdentifier","src":"16009:3:30"},"nativeSrc":"16009:22:30","nodeType":"YulFunctionCall","src":"16009:22:30"},{"name":"dataEnd","nativeSrc":"16033:7:30","nodeType":"YulIdentifier","src":"16033:7:30"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"15991:17:30","nodeType":"YulIdentifier","src":"15991:17:30"},"nativeSrc":"15991:50:30","nodeType":"YulFunctionCall","src":"15991:50:30"},"variableNames":[{"name":"value1","nativeSrc":"15981:6:30","nodeType":"YulIdentifier","src":"15981:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"15590:468:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15632:9:30","nodeType":"YulTypedName","src":"15632:9:30","type":""},{"name":"dataEnd","nativeSrc":"15643:7:30","nodeType":"YulTypedName","src":"15643:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15655:6:30","nodeType":"YulTypedName","src":"15655:6:30","type":""},{"name":"value1","nativeSrc":"15663:6:30","nodeType":"YulTypedName","src":"15663:6:30","type":""}],"src":"15590:468:30"},{"body":{"nativeSrc":"16190:817:30","nodeType":"YulBlock","src":"16190:817:30","statements":[{"body":{"nativeSrc":"16237:83:30","nodeType":"YulBlock","src":"16237:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16239:77:30","nodeType":"YulIdentifier","src":"16239:77:30"},"nativeSrc":"16239:79:30","nodeType":"YulFunctionCall","src":"16239:79:30"},"nativeSrc":"16239:79:30","nodeType":"YulExpressionStatement","src":"16239:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16211:7:30","nodeType":"YulIdentifier","src":"16211:7:30"},{"name":"headStart","nativeSrc":"16220:9:30","nodeType":"YulIdentifier","src":"16220:9:30"}],"functionName":{"name":"sub","nativeSrc":"16207:3:30","nodeType":"YulIdentifier","src":"16207:3:30"},"nativeSrc":"16207:23:30","nodeType":"YulFunctionCall","src":"16207:23:30"},{"kind":"number","nativeSrc":"16232:3:30","nodeType":"YulLiteral","src":"16232:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"16203:3:30","nodeType":"YulIdentifier","src":"16203:3:30"},"nativeSrc":"16203:33:30","nodeType":"YulFunctionCall","src":"16203:33:30"},"nativeSrc":"16200:120:30","nodeType":"YulIf","src":"16200:120:30"},{"nativeSrc":"16330:117:30","nodeType":"YulBlock","src":"16330:117:30","statements":[{"nativeSrc":"16345:15:30","nodeType":"YulVariableDeclaration","src":"16345:15:30","value":{"kind":"number","nativeSrc":"16359:1:30","nodeType":"YulLiteral","src":"16359:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16349:6:30","nodeType":"YulTypedName","src":"16349:6:30","type":""}]},{"nativeSrc":"16374:63:30","nodeType":"YulAssignment","src":"16374:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16409:9:30","nodeType":"YulIdentifier","src":"16409:9:30"},{"name":"offset","nativeSrc":"16420:6:30","nodeType":"YulIdentifier","src":"16420:6:30"}],"functionName":{"name":"add","nativeSrc":"16405:3:30","nodeType":"YulIdentifier","src":"16405:3:30"},"nativeSrc":"16405:22:30","nodeType":"YulFunctionCall","src":"16405:22:30"},{"name":"dataEnd","nativeSrc":"16429:7:30","nodeType":"YulIdentifier","src":"16429:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16384:20:30","nodeType":"YulIdentifier","src":"16384:20:30"},"nativeSrc":"16384:53:30","nodeType":"YulFunctionCall","src":"16384:53:30"},"variableNames":[{"name":"value0","nativeSrc":"16374:6:30","nodeType":"YulIdentifier","src":"16374:6:30"}]}]},{"nativeSrc":"16457:118:30","nodeType":"YulBlock","src":"16457:118:30","statements":[{"nativeSrc":"16472:16:30","nodeType":"YulVariableDeclaration","src":"16472:16:30","value":{"kind":"number","nativeSrc":"16486:2:30","nodeType":"YulLiteral","src":"16486:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"16476:6:30","nodeType":"YulTypedName","src":"16476:6:30","type":""}]},{"nativeSrc":"16502:63:30","nodeType":"YulAssignment","src":"16502:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16537:9:30","nodeType":"YulIdentifier","src":"16537:9:30"},{"name":"offset","nativeSrc":"16548:6:30","nodeType":"YulIdentifier","src":"16548:6:30"}],"functionName":{"name":"add","nativeSrc":"16533:3:30","nodeType":"YulIdentifier","src":"16533:3:30"},"nativeSrc":"16533:22:30","nodeType":"YulFunctionCall","src":"16533:22:30"},{"name":"dataEnd","nativeSrc":"16557:7:30","nodeType":"YulIdentifier","src":"16557:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16512:20:30","nodeType":"YulIdentifier","src":"16512:20:30"},"nativeSrc":"16512:53:30","nodeType":"YulFunctionCall","src":"16512:53:30"},"variableNames":[{"name":"value1","nativeSrc":"16502:6:30","nodeType":"YulIdentifier","src":"16502:6:30"}]}]},{"nativeSrc":"16585:118:30","nodeType":"YulBlock","src":"16585:118:30","statements":[{"nativeSrc":"16600:16:30","nodeType":"YulVariableDeclaration","src":"16600:16:30","value":{"kind":"number","nativeSrc":"16614:2:30","nodeType":"YulLiteral","src":"16614:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"16604:6:30","nodeType":"YulTypedName","src":"16604:6:30","type":""}]},{"nativeSrc":"16630:63:30","nodeType":"YulAssignment","src":"16630:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16665:9:30","nodeType":"YulIdentifier","src":"16665:9:30"},{"name":"offset","nativeSrc":"16676:6:30","nodeType":"YulIdentifier","src":"16676:6:30"}],"functionName":{"name":"add","nativeSrc":"16661:3:30","nodeType":"YulIdentifier","src":"16661:3:30"},"nativeSrc":"16661:22:30","nodeType":"YulFunctionCall","src":"16661:22:30"},{"name":"dataEnd","nativeSrc":"16685:7:30","nodeType":"YulIdentifier","src":"16685:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"16640:20:30","nodeType":"YulIdentifier","src":"16640:20:30"},"nativeSrc":"16640:53:30","nodeType":"YulFunctionCall","src":"16640:53:30"},"variableNames":[{"name":"value2","nativeSrc":"16630:6:30","nodeType":"YulIdentifier","src":"16630:6:30"}]}]},{"nativeSrc":"16713:287:30","nodeType":"YulBlock","src":"16713:287:30","statements":[{"nativeSrc":"16728:46:30","nodeType":"YulVariableDeclaration","src":"16728:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16759:9:30","nodeType":"YulIdentifier","src":"16759:9:30"},{"kind":"number","nativeSrc":"16770:2:30","nodeType":"YulLiteral","src":"16770:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16755:3:30","nodeType":"YulIdentifier","src":"16755:3:30"},"nativeSrc":"16755:18:30","nodeType":"YulFunctionCall","src":"16755:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"16742:12:30","nodeType":"YulIdentifier","src":"16742:12:30"},"nativeSrc":"16742:32:30","nodeType":"YulFunctionCall","src":"16742:32:30"},"variables":[{"name":"offset","nativeSrc":"16732:6:30","nodeType":"YulTypedName","src":"16732:6:30","type":""}]},{"body":{"nativeSrc":"16821:83:30","nodeType":"YulBlock","src":"16821:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"16823:77:30","nodeType":"YulIdentifier","src":"16823:77:30"},"nativeSrc":"16823:79:30","nodeType":"YulFunctionCall","src":"16823:79:30"},"nativeSrc":"16823:79:30","nodeType":"YulExpressionStatement","src":"16823:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"16793:6:30","nodeType":"YulIdentifier","src":"16793:6:30"},{"kind":"number","nativeSrc":"16801:18:30","nodeType":"YulLiteral","src":"16801:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"16790:2:30","nodeType":"YulIdentifier","src":"16790:2:30"},"nativeSrc":"16790:30:30","nodeType":"YulFunctionCall","src":"16790:30:30"},"nativeSrc":"16787:117:30","nodeType":"YulIf","src":"16787:117:30"},{"nativeSrc":"16918:72:30","nodeType":"YulAssignment","src":"16918:72:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16962:9:30","nodeType":"YulIdentifier","src":"16962:9:30"},{"name":"offset","nativeSrc":"16973:6:30","nodeType":"YulIdentifier","src":"16973:6:30"}],"functionName":{"name":"add","nativeSrc":"16958:3:30","nodeType":"YulIdentifier","src":"16958:3:30"},"nativeSrc":"16958:22:30","nodeType":"YulFunctionCall","src":"16958:22:30"},{"name":"dataEnd","nativeSrc":"16982:7:30","nodeType":"YulIdentifier","src":"16982:7:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"16928:29:30","nodeType":"YulIdentifier","src":"16928:29:30"},"nativeSrc":"16928:62:30","nodeType":"YulFunctionCall","src":"16928:62:30"},"variableNames":[{"name":"value3","nativeSrc":"16918:6:30","nodeType":"YulIdentifier","src":"16918:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"16064:943:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16136:9:30","nodeType":"YulTypedName","src":"16136:9:30","type":""},{"name":"dataEnd","nativeSrc":"16147:7:30","nodeType":"YulTypedName","src":"16147:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16159:6:30","nodeType":"YulTypedName","src":"16159:6:30","type":""},{"name":"value1","nativeSrc":"16167:6:30","nodeType":"YulTypedName","src":"16167:6:30","type":""},{"name":"value2","nativeSrc":"16175:6:30","nodeType":"YulTypedName","src":"16175:6:30","type":""},{"name":"value3","nativeSrc":"16183:6:30","nodeType":"YulTypedName","src":"16183:6:30","type":""}],"src":"16064:943:30"},{"body":{"nativeSrc":"17041:152:30","nodeType":"YulBlock","src":"17041:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17058:1:30","nodeType":"YulLiteral","src":"17058:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"17061:77:30","nodeType":"YulLiteral","src":"17061:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17051:6:30","nodeType":"YulIdentifier","src":"17051:6:30"},"nativeSrc":"17051:88:30","nodeType":"YulFunctionCall","src":"17051:88:30"},"nativeSrc":"17051:88:30","nodeType":"YulExpressionStatement","src":"17051:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17155:1:30","nodeType":"YulLiteral","src":"17155:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"17158:4:30","nodeType":"YulLiteral","src":"17158:4:30","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"17148:6:30","nodeType":"YulIdentifier","src":"17148:6:30"},"nativeSrc":"17148:15:30","nodeType":"YulFunctionCall","src":"17148:15:30"},"nativeSrc":"17148:15:30","nodeType":"YulExpressionStatement","src":"17148:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17179:1:30","nodeType":"YulLiteral","src":"17179:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"17182:4:30","nodeType":"YulLiteral","src":"17182:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17172:6:30","nodeType":"YulIdentifier","src":"17172:6:30"},"nativeSrc":"17172:15:30","nodeType":"YulFunctionCall","src":"17172:15:30"},"nativeSrc":"17172:15:30","nodeType":"YulExpressionStatement","src":"17172:15:30"}]},"name":"panic_error_0x21","nativeSrc":"17013:180:30","nodeType":"YulFunctionDefinition","src":"17013:180:30"},{"body":{"nativeSrc":"17263:62:30","nodeType":"YulBlock","src":"17263:62:30","statements":[{"body":{"nativeSrc":"17297:22:30","nodeType":"YulBlock","src":"17297:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nativeSrc":"17299:16:30","nodeType":"YulIdentifier","src":"17299:16:30"},"nativeSrc":"17299:18:30","nodeType":"YulFunctionCall","src":"17299:18:30"},"nativeSrc":"17299:18:30","nodeType":"YulExpressionStatement","src":"17299:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17286:5:30","nodeType":"YulIdentifier","src":"17286:5:30"},{"kind":"number","nativeSrc":"17293:1:30","nodeType":"YulLiteral","src":"17293:1:30","type":"","value":"2"}],"functionName":{"name":"lt","nativeSrc":"17283:2:30","nodeType":"YulIdentifier","src":"17283:2:30"},"nativeSrc":"17283:12:30","nodeType":"YulFunctionCall","src":"17283:12:30"}],"functionName":{"name":"iszero","nativeSrc":"17276:6:30","nodeType":"YulIdentifier","src":"17276:6:30"},"nativeSrc":"17276:20:30","nodeType":"YulFunctionCall","src":"17276:20:30"},"nativeSrc":"17273:46:30","nodeType":"YulIf","src":"17273:46:30"}]},"name":"validator_assert_t_enum$_CredentialStatus_$7802","nativeSrc":"17199:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17256:5:30","nodeType":"YulTypedName","src":"17256:5:30","type":""}],"src":"17199:126:30"},{"body":{"nativeSrc":"17397:87:30","nodeType":"YulBlock","src":"17397:87:30","statements":[{"nativeSrc":"17407:16:30","nodeType":"YulAssignment","src":"17407:16:30","value":{"name":"value","nativeSrc":"17418:5:30","nodeType":"YulIdentifier","src":"17418:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"17407:7:30","nodeType":"YulIdentifier","src":"17407:7:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17472:5:30","nodeType":"YulIdentifier","src":"17472:5:30"}],"functionName":{"name":"validator_assert_t_enum$_CredentialStatus_$7802","nativeSrc":"17424:47:30","nodeType":"YulIdentifier","src":"17424:47:30"},"nativeSrc":"17424:54:30","nodeType":"YulFunctionCall","src":"17424:54:30"},"nativeSrc":"17424:54:30","nodeType":"YulExpressionStatement","src":"17424:54:30"}]},"name":"cleanup_t_enum$_CredentialStatus_$7802","nativeSrc":"17331:153:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17379:5:30","nodeType":"YulTypedName","src":"17379:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"17389:7:30","nodeType":"YulTypedName","src":"17389:7:30","type":""}],"src":"17331:153:30"},{"body":{"nativeSrc":"17569:74:30","nodeType":"YulBlock","src":"17569:74:30","statements":[{"nativeSrc":"17579:58:30","nodeType":"YulAssignment","src":"17579:58:30","value":{"arguments":[{"name":"value","nativeSrc":"17631:5:30","nodeType":"YulIdentifier","src":"17631:5:30"}],"functionName":{"name":"cleanup_t_enum$_CredentialStatus_$7802","nativeSrc":"17592:38:30","nodeType":"YulIdentifier","src":"17592:38:30"},"nativeSrc":"17592:45:30","nodeType":"YulFunctionCall","src":"17592:45:30"},"variableNames":[{"name":"converted","nativeSrc":"17579:9:30","nodeType":"YulIdentifier","src":"17579:9:30"}]}]},"name":"convert_t_enum$_CredentialStatus_$7802_to_t_uint8","nativeSrc":"17490:153:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17549:5:30","nodeType":"YulTypedName","src":"17549:5:30","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"17559:9:30","nodeType":"YulTypedName","src":"17559:9:30","type":""}],"src":"17490:153:30"},{"body":{"nativeSrc":"17733:85:30","nodeType":"YulBlock","src":"17733:85:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"17750:3:30","nodeType":"YulIdentifier","src":"17750:3:30"},{"arguments":[{"name":"value","nativeSrc":"17805:5:30","nodeType":"YulIdentifier","src":"17805:5:30"}],"functionName":{"name":"convert_t_enum$_CredentialStatus_$7802_to_t_uint8","nativeSrc":"17755:49:30","nodeType":"YulIdentifier","src":"17755:49:30"},"nativeSrc":"17755:56:30","nodeType":"YulFunctionCall","src":"17755:56:30"}],"functionName":{"name":"mstore","nativeSrc":"17743:6:30","nodeType":"YulIdentifier","src":"17743:6:30"},"nativeSrc":"17743:69:30","nodeType":"YulFunctionCall","src":"17743:69:30"},"nativeSrc":"17743:69:30","nodeType":"YulExpressionStatement","src":"17743:69:30"}]},"name":"abi_encode_t_enum$_CredentialStatus_$7802_to_t_uint8_fromStack","nativeSrc":"17649:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17721:5:30","nodeType":"YulTypedName","src":"17721:5:30","type":""},{"name":"pos","nativeSrc":"17728:3:30","nodeType":"YulTypedName","src":"17728:3:30","type":""}],"src":"17649:169:30"},{"body":{"nativeSrc":"17882:40:30","nodeType":"YulBlock","src":"17882:40:30","statements":[{"nativeSrc":"17893:22:30","nodeType":"YulAssignment","src":"17893:22:30","value":{"arguments":[{"name":"value","nativeSrc":"17909:5:30","nodeType":"YulIdentifier","src":"17909:5:30"}],"functionName":{"name":"mload","nativeSrc":"17903:5:30","nodeType":"YulIdentifier","src":"17903:5:30"},"nativeSrc":"17903:12:30","nodeType":"YulFunctionCall","src":"17903:12:30"},"variableNames":[{"name":"length","nativeSrc":"17893:6:30","nodeType":"YulIdentifier","src":"17893:6:30"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"17824:98:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17865:5:30","nodeType":"YulTypedName","src":"17865:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"17875:6:30","nodeType":"YulTypedName","src":"17875:6:30","type":""}],"src":"17824:98:30"},{"body":{"nativeSrc":"18023:73:30","nodeType":"YulBlock","src":"18023:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"18040:3:30","nodeType":"YulIdentifier","src":"18040:3:30"},{"name":"length","nativeSrc":"18045:6:30","nodeType":"YulIdentifier","src":"18045:6:30"}],"functionName":{"name":"mstore","nativeSrc":"18033:6:30","nodeType":"YulIdentifier","src":"18033:6:30"},"nativeSrc":"18033:19:30","nodeType":"YulFunctionCall","src":"18033:19:30"},"nativeSrc":"18033:19:30","nodeType":"YulExpressionStatement","src":"18033:19:30"},{"nativeSrc":"18061:29:30","nodeType":"YulAssignment","src":"18061:29:30","value":{"arguments":[{"name":"pos","nativeSrc":"18080:3:30","nodeType":"YulIdentifier","src":"18080:3:30"},{"kind":"number","nativeSrc":"18085:4:30","nodeType":"YulLiteral","src":"18085:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18076:3:30","nodeType":"YulIdentifier","src":"18076:3:30"},"nativeSrc":"18076:14:30","nodeType":"YulFunctionCall","src":"18076:14:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"18061:11:30","nodeType":"YulIdentifier","src":"18061:11:30"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"17928:168:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17995:3:30","nodeType":"YulTypedName","src":"17995:3:30","type":""},{"name":"length","nativeSrc":"18000:6:30","nodeType":"YulTypedName","src":"18000:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"18011:11:30","nodeType":"YulTypedName","src":"18011:11:30","type":""}],"src":"17928:168:30"},{"body":{"nativeSrc":"18192:283:30","nodeType":"YulBlock","src":"18192:283:30","statements":[{"nativeSrc":"18202:52:30","nodeType":"YulVariableDeclaration","src":"18202:52:30","value":{"arguments":[{"name":"value","nativeSrc":"18248:5:30","nodeType":"YulIdentifier","src":"18248:5:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"18216:31:30","nodeType":"YulIdentifier","src":"18216:31:30"},"nativeSrc":"18216:38:30","nodeType":"YulFunctionCall","src":"18216:38:30"},"variables":[{"name":"length","nativeSrc":"18206:6:30","nodeType":"YulTypedName","src":"18206:6:30","type":""}]},{"nativeSrc":"18263:77:30","nodeType":"YulAssignment","src":"18263:77:30","value":{"arguments":[{"name":"pos","nativeSrc":"18328:3:30","nodeType":"YulIdentifier","src":"18328:3:30"},{"name":"length","nativeSrc":"18333:6:30","nodeType":"YulIdentifier","src":"18333:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"18270:57:30","nodeType":"YulIdentifier","src":"18270:57:30"},"nativeSrc":"18270:70:30","nodeType":"YulFunctionCall","src":"18270:70:30"},"variableNames":[{"name":"pos","nativeSrc":"18263:3:30","nodeType":"YulIdentifier","src":"18263:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18388:5:30","nodeType":"YulIdentifier","src":"18388:5:30"},{"kind":"number","nativeSrc":"18395:4:30","nodeType":"YulLiteral","src":"18395:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18384:3:30","nodeType":"YulIdentifier","src":"18384:3:30"},"nativeSrc":"18384:16:30","nodeType":"YulFunctionCall","src":"18384:16:30"},{"name":"pos","nativeSrc":"18402:3:30","nodeType":"YulIdentifier","src":"18402:3:30"},{"name":"length","nativeSrc":"18407:6:30","nodeType":"YulIdentifier","src":"18407:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"18349:34:30","nodeType":"YulIdentifier","src":"18349:34:30"},"nativeSrc":"18349:65:30","nodeType":"YulFunctionCall","src":"18349:65:30"},"nativeSrc":"18349:65:30","nodeType":"YulExpressionStatement","src":"18349:65:30"},{"nativeSrc":"18423:46:30","nodeType":"YulAssignment","src":"18423:46:30","value":{"arguments":[{"name":"pos","nativeSrc":"18434:3:30","nodeType":"YulIdentifier","src":"18434:3:30"},{"arguments":[{"name":"length","nativeSrc":"18461:6:30","nodeType":"YulIdentifier","src":"18461:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"18439:21:30","nodeType":"YulIdentifier","src":"18439:21:30"},"nativeSrc":"18439:29:30","nodeType":"YulFunctionCall","src":"18439:29:30"}],"functionName":{"name":"add","nativeSrc":"18430:3:30","nodeType":"YulIdentifier","src":"18430:3:30"},"nativeSrc":"18430:39:30","nodeType":"YulFunctionCall","src":"18430:39:30"},"variableNames":[{"name":"end","nativeSrc":"18423:3:30","nodeType":"YulIdentifier","src":"18423:3:30"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"18102:373:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18173:5:30","nodeType":"YulTypedName","src":"18173:5:30","type":""},{"name":"pos","nativeSrc":"18180:3:30","nodeType":"YulTypedName","src":"18180:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18188:3:30","nodeType":"YulTypedName","src":"18188:3:30","type":""}],"src":"18102:373:30"},{"body":{"nativeSrc":"18748:613:30","nodeType":"YulBlock","src":"18748:613:30","statements":[{"nativeSrc":"18758:27:30","nodeType":"YulAssignment","src":"18758:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"18770:9:30","nodeType":"YulIdentifier","src":"18770:9:30"},{"kind":"number","nativeSrc":"18781:3:30","nodeType":"YulLiteral","src":"18781:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"18766:3:30","nodeType":"YulIdentifier","src":"18766:3:30"},"nativeSrc":"18766:19:30","nodeType":"YulFunctionCall","src":"18766:19:30"},"variableNames":[{"name":"tail","nativeSrc":"18758:4:30","nodeType":"YulIdentifier","src":"18758:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18839:6:30","nodeType":"YulIdentifier","src":"18839:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"18852:9:30","nodeType":"YulIdentifier","src":"18852:9:30"},{"kind":"number","nativeSrc":"18863:1:30","nodeType":"YulLiteral","src":"18863:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18848:3:30","nodeType":"YulIdentifier","src":"18848:3:30"},"nativeSrc":"18848:17:30","nodeType":"YulFunctionCall","src":"18848:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18795:43:30","nodeType":"YulIdentifier","src":"18795:43:30"},"nativeSrc":"18795:71:30","nodeType":"YulFunctionCall","src":"18795:71:30"},"nativeSrc":"18795:71:30","nodeType":"YulExpressionStatement","src":"18795:71:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18887:9:30","nodeType":"YulIdentifier","src":"18887:9:30"},{"kind":"number","nativeSrc":"18898:2:30","nodeType":"YulLiteral","src":"18898:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18883:3:30","nodeType":"YulIdentifier","src":"18883:3:30"},"nativeSrc":"18883:18:30","nodeType":"YulFunctionCall","src":"18883:18:30"},{"arguments":[{"name":"tail","nativeSrc":"18907:4:30","nodeType":"YulIdentifier","src":"18907:4:30"},{"name":"headStart","nativeSrc":"18913:9:30","nodeType":"YulIdentifier","src":"18913:9:30"}],"functionName":{"name":"sub","nativeSrc":"18903:3:30","nodeType":"YulIdentifier","src":"18903:3:30"},"nativeSrc":"18903:20:30","nodeType":"YulFunctionCall","src":"18903:20:30"}],"functionName":{"name":"mstore","nativeSrc":"18876:6:30","nodeType":"YulIdentifier","src":"18876:6:30"},"nativeSrc":"18876:48:30","nodeType":"YulFunctionCall","src":"18876:48:30"},"nativeSrc":"18876:48:30","nodeType":"YulExpressionStatement","src":"18876:48:30"},{"nativeSrc":"18933:86:30","nodeType":"YulAssignment","src":"18933:86:30","value":{"arguments":[{"name":"value1","nativeSrc":"19005:6:30","nodeType":"YulIdentifier","src":"19005:6:30"},{"name":"tail","nativeSrc":"19014:4:30","nodeType":"YulIdentifier","src":"19014:4:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"18941:63:30","nodeType":"YulIdentifier","src":"18941:63:30"},"nativeSrc":"18941:78:30","nodeType":"YulFunctionCall","src":"18941:78:30"},"variableNames":[{"name":"tail","nativeSrc":"18933:4:30","nodeType":"YulIdentifier","src":"18933:4:30"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"19092:6:30","nodeType":"YulIdentifier","src":"19092:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"19105:9:30","nodeType":"YulIdentifier","src":"19105:9:30"},{"kind":"number","nativeSrc":"19116:2:30","nodeType":"YulLiteral","src":"19116:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19101:3:30","nodeType":"YulIdentifier","src":"19101:3:30"},"nativeSrc":"19101:18:30","nodeType":"YulFunctionCall","src":"19101:18:30"}],"functionName":{"name":"abi_encode_t_enum$_CredentialStatus_$7802_to_t_uint8_fromStack","nativeSrc":"19029:62:30","nodeType":"YulIdentifier","src":"19029:62:30"},"nativeSrc":"19029:91:30","nodeType":"YulFunctionCall","src":"19029:91:30"},"nativeSrc":"19029:91:30","nodeType":"YulExpressionStatement","src":"19029:91:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19141:9:30","nodeType":"YulIdentifier","src":"19141:9:30"},{"kind":"number","nativeSrc":"19152:2:30","nodeType":"YulLiteral","src":"19152:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19137:3:30","nodeType":"YulIdentifier","src":"19137:3:30"},"nativeSrc":"19137:18:30","nodeType":"YulFunctionCall","src":"19137:18:30"},{"arguments":[{"name":"tail","nativeSrc":"19161:4:30","nodeType":"YulIdentifier","src":"19161:4:30"},{"name":"headStart","nativeSrc":"19167:9:30","nodeType":"YulIdentifier","src":"19167:9:30"}],"functionName":{"name":"sub","nativeSrc":"19157:3:30","nodeType":"YulIdentifier","src":"19157:3:30"},"nativeSrc":"19157:20:30","nodeType":"YulFunctionCall","src":"19157:20:30"}],"functionName":{"name":"mstore","nativeSrc":"19130:6:30","nodeType":"YulIdentifier","src":"19130:6:30"},"nativeSrc":"19130:48:30","nodeType":"YulFunctionCall","src":"19130:48:30"},"nativeSrc":"19130:48:30","nodeType":"YulExpressionStatement","src":"19130:48:30"},{"nativeSrc":"19187:84:30","nodeType":"YulAssignment","src":"19187:84:30","value":{"arguments":[{"name":"value3","nativeSrc":"19257:6:30","nodeType":"YulIdentifier","src":"19257:6:30"},{"name":"tail","nativeSrc":"19266:4:30","nodeType":"YulIdentifier","src":"19266:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"19195:61:30","nodeType":"YulIdentifier","src":"19195:61:30"},"nativeSrc":"19195:76:30","nodeType":"YulFunctionCall","src":"19195:76:30"},"variableNames":[{"name":"tail","nativeSrc":"19187:4:30","nodeType":"YulIdentifier","src":"19187:4:30"}]},{"expression":{"arguments":[{"name":"value4","nativeSrc":"19325:6:30","nodeType":"YulIdentifier","src":"19325:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"19338:9:30","nodeType":"YulIdentifier","src":"19338:9:30"},{"kind":"number","nativeSrc":"19349:3:30","nodeType":"YulLiteral","src":"19349:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19334:3:30","nodeType":"YulIdentifier","src":"19334:3:30"},"nativeSrc":"19334:19:30","nodeType":"YulFunctionCall","src":"19334:19:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19281:43:30","nodeType":"YulIdentifier","src":"19281:43:30"},"nativeSrc":"19281:73:30","nodeType":"YulFunctionCall","src":"19281:73:30"},"nativeSrc":"19281:73:30","nodeType":"YulExpressionStatement","src":"19281:73:30"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_enum$_CredentialStatus_$7802_t_bytes_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_uint8_t_bytes_memory_ptr_t_address__fromStack_reversed","nativeSrc":"18481:880:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18688:9:30","nodeType":"YulTypedName","src":"18688:9:30","type":""},{"name":"value4","nativeSrc":"18700:6:30","nodeType":"YulTypedName","src":"18700:6:30","type":""},{"name":"value3","nativeSrc":"18708:6:30","nodeType":"YulTypedName","src":"18708:6:30","type":""},{"name":"value2","nativeSrc":"18716:6:30","nodeType":"YulTypedName","src":"18716:6:30","type":""},{"name":"value1","nativeSrc":"18724:6:30","nodeType":"YulTypedName","src":"18724:6:30","type":""},{"name":"value0","nativeSrc":"18732:6:30","nodeType":"YulTypedName","src":"18732:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18743:4:30","nodeType":"YulTypedName","src":"18743:4:30","type":""}],"src":"18481:880:30"},{"body":{"nativeSrc":"19450:391:30","nodeType":"YulBlock","src":"19450:391:30","statements":[{"body":{"nativeSrc":"19496:83:30","nodeType":"YulBlock","src":"19496:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19498:77:30","nodeType":"YulIdentifier","src":"19498:77:30"},"nativeSrc":"19498:79:30","nodeType":"YulFunctionCall","src":"19498:79:30"},"nativeSrc":"19498:79:30","nodeType":"YulExpressionStatement","src":"19498:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19471:7:30","nodeType":"YulIdentifier","src":"19471:7:30"},{"name":"headStart","nativeSrc":"19480:9:30","nodeType":"YulIdentifier","src":"19480:9:30"}],"functionName":{"name":"sub","nativeSrc":"19467:3:30","nodeType":"YulIdentifier","src":"19467:3:30"},"nativeSrc":"19467:23:30","nodeType":"YulFunctionCall","src":"19467:23:30"},{"kind":"number","nativeSrc":"19492:2:30","nodeType":"YulLiteral","src":"19492:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"19463:3:30","nodeType":"YulIdentifier","src":"19463:3:30"},"nativeSrc":"19463:32:30","nodeType":"YulFunctionCall","src":"19463:32:30"},"nativeSrc":"19460:119:30","nodeType":"YulIf","src":"19460:119:30"},{"nativeSrc":"19589:117:30","nodeType":"YulBlock","src":"19589:117:30","statements":[{"nativeSrc":"19604:15:30","nodeType":"YulVariableDeclaration","src":"19604:15:30","value":{"kind":"number","nativeSrc":"19618:1:30","nodeType":"YulLiteral","src":"19618:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19608:6:30","nodeType":"YulTypedName","src":"19608:6:30","type":""}]},{"nativeSrc":"19633:63:30","nodeType":"YulAssignment","src":"19633:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19668:9:30","nodeType":"YulIdentifier","src":"19668:9:30"},{"name":"offset","nativeSrc":"19679:6:30","nodeType":"YulIdentifier","src":"19679:6:30"}],"functionName":{"name":"add","nativeSrc":"19664:3:30","nodeType":"YulIdentifier","src":"19664:3:30"},"nativeSrc":"19664:22:30","nodeType":"YulFunctionCall","src":"19664:22:30"},{"name":"dataEnd","nativeSrc":"19688:7:30","nodeType":"YulIdentifier","src":"19688:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"19643:20:30","nodeType":"YulIdentifier","src":"19643:20:30"},"nativeSrc":"19643:53:30","nodeType":"YulFunctionCall","src":"19643:53:30"},"variableNames":[{"name":"value0","nativeSrc":"19633:6:30","nodeType":"YulIdentifier","src":"19633:6:30"}]}]},{"nativeSrc":"19716:118:30","nodeType":"YulBlock","src":"19716:118:30","statements":[{"nativeSrc":"19731:16:30","nodeType":"YulVariableDeclaration","src":"19731:16:30","value":{"kind":"number","nativeSrc":"19745:2:30","nodeType":"YulLiteral","src":"19745:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"19735:6:30","nodeType":"YulTypedName","src":"19735:6:30","type":""}]},{"nativeSrc":"19761:63:30","nodeType":"YulAssignment","src":"19761:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19796:9:30","nodeType":"YulIdentifier","src":"19796:9:30"},{"name":"offset","nativeSrc":"19807:6:30","nodeType":"YulIdentifier","src":"19807:6:30"}],"functionName":{"name":"add","nativeSrc":"19792:3:30","nodeType":"YulIdentifier","src":"19792:3:30"},"nativeSrc":"19792:22:30","nodeType":"YulFunctionCall","src":"19792:22:30"},{"name":"dataEnd","nativeSrc":"19816:7:30","nodeType":"YulIdentifier","src":"19816:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"19771:20:30","nodeType":"YulIdentifier","src":"19771:20:30"},"nativeSrc":"19771:53:30","nodeType":"YulFunctionCall","src":"19771:53:30"},"variableNames":[{"name":"value1","nativeSrc":"19761:6:30","nodeType":"YulIdentifier","src":"19761:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"19367:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19412:9:30","nodeType":"YulTypedName","src":"19412:9:30","type":""},{"name":"dataEnd","nativeSrc":"19423:7:30","nodeType":"YulTypedName","src":"19423:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19435:6:30","nodeType":"YulTypedName","src":"19435:6:30","type":""},{"name":"value1","nativeSrc":"19443:6:30","nodeType":"YulTypedName","src":"19443:6:30","type":""}],"src":"19367:474:30"},{"body":{"nativeSrc":"19875:152:30","nodeType":"YulBlock","src":"19875:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:1:30","nodeType":"YulLiteral","src":"19892:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"19895:77:30","nodeType":"YulLiteral","src":"19895:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:30","nodeType":"YulIdentifier","src":"19885:6:30"},"nativeSrc":"19885:88:30","nodeType":"YulFunctionCall","src":"19885:88:30"},"nativeSrc":"19885:88:30","nodeType":"YulExpressionStatement","src":"19885:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19989:1:30","nodeType":"YulLiteral","src":"19989:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"19992:4:30","nodeType":"YulLiteral","src":"19992:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"19982:6:30","nodeType":"YulIdentifier","src":"19982:6:30"},"nativeSrc":"19982:15:30","nodeType":"YulFunctionCall","src":"19982:15:30"},"nativeSrc":"19982:15:30","nodeType":"YulExpressionStatement","src":"19982:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20013:1:30","nodeType":"YulLiteral","src":"20013:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"20016:4:30","nodeType":"YulLiteral","src":"20016:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20006:6:30","nodeType":"YulIdentifier","src":"20006:6:30"},"nativeSrc":"20006:15:30","nodeType":"YulFunctionCall","src":"20006:15:30"},"nativeSrc":"20006:15:30","nodeType":"YulExpressionStatement","src":"20006:15:30"}]},"name":"panic_error_0x22","nativeSrc":"19847:180:30","nodeType":"YulFunctionDefinition","src":"19847:180:30"},{"body":{"nativeSrc":"20084:269:30","nodeType":"YulBlock","src":"20084:269:30","statements":[{"nativeSrc":"20094:22:30","nodeType":"YulAssignment","src":"20094:22:30","value":{"arguments":[{"name":"data","nativeSrc":"20108:4:30","nodeType":"YulIdentifier","src":"20108:4:30"},{"kind":"number","nativeSrc":"20114:1:30","nodeType":"YulLiteral","src":"20114:1:30","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"20104:3:30","nodeType":"YulIdentifier","src":"20104:3:30"},"nativeSrc":"20104:12:30","nodeType":"YulFunctionCall","src":"20104:12:30"},"variableNames":[{"name":"length","nativeSrc":"20094:6:30","nodeType":"YulIdentifier","src":"20094:6:30"}]},{"nativeSrc":"20125:38:30","nodeType":"YulVariableDeclaration","src":"20125:38:30","value":{"arguments":[{"name":"data","nativeSrc":"20155:4:30","nodeType":"YulIdentifier","src":"20155:4:30"},{"kind":"number","nativeSrc":"20161:1:30","nodeType":"YulLiteral","src":"20161:1:30","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"20151:3:30","nodeType":"YulIdentifier","src":"20151:3:30"},"nativeSrc":"20151:12:30","nodeType":"YulFunctionCall","src":"20151:12:30"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"20129:18:30","nodeType":"YulTypedName","src":"20129:18:30","type":""}]},{"body":{"nativeSrc":"20202:51:30","nodeType":"YulBlock","src":"20202:51:30","statements":[{"nativeSrc":"20216:27:30","nodeType":"YulAssignment","src":"20216:27:30","value":{"arguments":[{"name":"length","nativeSrc":"20230:6:30","nodeType":"YulIdentifier","src":"20230:6:30"},{"kind":"number","nativeSrc":"20238:4:30","nodeType":"YulLiteral","src":"20238:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"20226:3:30","nodeType":"YulIdentifier","src":"20226:3:30"},"nativeSrc":"20226:17:30","nodeType":"YulFunctionCall","src":"20226:17:30"},"variableNames":[{"name":"length","nativeSrc":"20216:6:30","nodeType":"YulIdentifier","src":"20216:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"20182:18:30","nodeType":"YulIdentifier","src":"20182:18:30"}],"functionName":{"name":"iszero","nativeSrc":"20175:6:30","nodeType":"YulIdentifier","src":"20175:6:30"},"nativeSrc":"20175:26:30","nodeType":"YulFunctionCall","src":"20175:26:30"},"nativeSrc":"20172:81:30","nodeType":"YulIf","src":"20172:81:30"},{"body":{"nativeSrc":"20305:42:30","nodeType":"YulBlock","src":"20305:42:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"20319:16:30","nodeType":"YulIdentifier","src":"20319:16:30"},"nativeSrc":"20319:18:30","nodeType":"YulFunctionCall","src":"20319:18:30"},"nativeSrc":"20319:18:30","nodeType":"YulExpressionStatement","src":"20319:18:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"20269:18:30","nodeType":"YulIdentifier","src":"20269:18:30"},{"arguments":[{"name":"length","nativeSrc":"20292:6:30","nodeType":"YulIdentifier","src":"20292:6:30"},{"kind":"number","nativeSrc":"20300:2:30","nodeType":"YulLiteral","src":"20300:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"20289:2:30","nodeType":"YulIdentifier","src":"20289:2:30"},"nativeSrc":"20289:14:30","nodeType":"YulFunctionCall","src":"20289:14:30"}],"functionName":{"name":"eq","nativeSrc":"20266:2:30","nodeType":"YulIdentifier","src":"20266:2:30"},"nativeSrc":"20266:38:30","nodeType":"YulFunctionCall","src":"20266:38:30"},"nativeSrc":"20263:84:30","nodeType":"YulIf","src":"20263:84:30"}]},"name":"extract_byte_array_length","nativeSrc":"20033:320:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20068:4:30","nodeType":"YulTypedName","src":"20068:4:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"20077:6:30","nodeType":"YulTypedName","src":"20077:6:30","type":""}],"src":"20033:320:30"},{"body":{"nativeSrc":"20465:64:30","nodeType":"YulBlock","src":"20465:64:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20487:6:30","nodeType":"YulIdentifier","src":"20487:6:30"},{"kind":"number","nativeSrc":"20495:1:30","nodeType":"YulLiteral","src":"20495:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20483:3:30","nodeType":"YulIdentifier","src":"20483:3:30"},"nativeSrc":"20483:14:30","nodeType":"YulFunctionCall","src":"20483:14:30"},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","kind":"string","nativeSrc":"20499:22:30","nodeType":"YulLiteral","src":"20499:22:30","type":"","value":"Token does not exist"}],"functionName":{"name":"mstore","nativeSrc":"20476:6:30","nodeType":"YulIdentifier","src":"20476:6:30"},"nativeSrc":"20476:46:30","nodeType":"YulFunctionCall","src":"20476:46:30"},"nativeSrc":"20476:46:30","nodeType":"YulExpressionStatement","src":"20476:46:30"}]},"name":"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","nativeSrc":"20359:170:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20457:6:30","nodeType":"YulTypedName","src":"20457:6:30","type":""}],"src":"20359:170:30"},{"body":{"nativeSrc":"20681:220:30","nodeType":"YulBlock","src":"20681:220:30","statements":[{"nativeSrc":"20691:74:30","nodeType":"YulAssignment","src":"20691:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"20757:3:30","nodeType":"YulIdentifier","src":"20757:3:30"},{"kind":"number","nativeSrc":"20762:2:30","nodeType":"YulLiteral","src":"20762:2:30","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20698:58:30","nodeType":"YulIdentifier","src":"20698:58:30"},"nativeSrc":"20698:67:30","nodeType":"YulFunctionCall","src":"20698:67:30"},"variableNames":[{"name":"pos","nativeSrc":"20691:3:30","nodeType":"YulIdentifier","src":"20691:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20863:3:30","nodeType":"YulIdentifier","src":"20863:3:30"}],"functionName":{"name":"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","nativeSrc":"20774:88:30","nodeType":"YulIdentifier","src":"20774:88:30"},"nativeSrc":"20774:93:30","nodeType":"YulFunctionCall","src":"20774:93:30"},"nativeSrc":"20774:93:30","nodeType":"YulExpressionStatement","src":"20774:93:30"},{"nativeSrc":"20876:19:30","nodeType":"YulAssignment","src":"20876:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"20887:3:30","nodeType":"YulIdentifier","src":"20887:3:30"},{"kind":"number","nativeSrc":"20892:2:30","nodeType":"YulLiteral","src":"20892:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20883:3:30","nodeType":"YulIdentifier","src":"20883:3:30"},"nativeSrc":"20883:12:30","nodeType":"YulFunctionCall","src":"20883:12:30"},"variableNames":[{"name":"end","nativeSrc":"20876:3:30","nodeType":"YulIdentifier","src":"20876:3:30"}]}]},"name":"abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack","nativeSrc":"20535:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20669:3:30","nodeType":"YulTypedName","src":"20669:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20677:3:30","nodeType":"YulTypedName","src":"20677:3:30","type":""}],"src":"20535:366:30"},{"body":{"nativeSrc":"21078:248:30","nodeType":"YulBlock","src":"21078:248:30","statements":[{"nativeSrc":"21088:26:30","nodeType":"YulAssignment","src":"21088:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"21100:9:30","nodeType":"YulIdentifier","src":"21100:9:30"},{"kind":"number","nativeSrc":"21111:2:30","nodeType":"YulLiteral","src":"21111:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21096:3:30","nodeType":"YulIdentifier","src":"21096:3:30"},"nativeSrc":"21096:18:30","nodeType":"YulFunctionCall","src":"21096:18:30"},"variableNames":[{"name":"tail","nativeSrc":"21088:4:30","nodeType":"YulIdentifier","src":"21088:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21135:9:30","nodeType":"YulIdentifier","src":"21135:9:30"},{"kind":"number","nativeSrc":"21146:1:30","nodeType":"YulLiteral","src":"21146:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21131:3:30","nodeType":"YulIdentifier","src":"21131:3:30"},"nativeSrc":"21131:17:30","nodeType":"YulFunctionCall","src":"21131:17:30"},{"arguments":[{"name":"tail","nativeSrc":"21154:4:30","nodeType":"YulIdentifier","src":"21154:4:30"},{"name":"headStart","nativeSrc":"21160:9:30","nodeType":"YulIdentifier","src":"21160:9:30"}],"functionName":{"name":"sub","nativeSrc":"21150:3:30","nodeType":"YulIdentifier","src":"21150:3:30"},"nativeSrc":"21150:20:30","nodeType":"YulFunctionCall","src":"21150:20:30"}],"functionName":{"name":"mstore","nativeSrc":"21124:6:30","nodeType":"YulIdentifier","src":"21124:6:30"},"nativeSrc":"21124:47:30","nodeType":"YulFunctionCall","src":"21124:47:30"},"nativeSrc":"21124:47:30","nodeType":"YulExpressionStatement","src":"21124:47:30"},{"nativeSrc":"21180:139:30","nodeType":"YulAssignment","src":"21180:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"21314:4:30","nodeType":"YulIdentifier","src":"21314:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack","nativeSrc":"21188:124:30","nodeType":"YulIdentifier","src":"21188:124:30"},"nativeSrc":"21188:131:30","nodeType":"YulFunctionCall","src":"21188:131:30"},"variableNames":[{"name":"tail","nativeSrc":"21180:4:30","nodeType":"YulIdentifier","src":"21180:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20907:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21058:9:30","nodeType":"YulTypedName","src":"21058:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21073:4:30","nodeType":"YulTypedName","src":"21073:4:30","type":""}],"src":"20907:419:30"},{"body":{"nativeSrc":"21486:288:30","nodeType":"YulBlock","src":"21486:288:30","statements":[{"nativeSrc":"21496:26:30","nodeType":"YulAssignment","src":"21496:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"21508:9:30","nodeType":"YulIdentifier","src":"21508:9:30"},{"kind":"number","nativeSrc":"21519:2:30","nodeType":"YulLiteral","src":"21519:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21504:3:30","nodeType":"YulIdentifier","src":"21504:3:30"},"nativeSrc":"21504:18:30","nodeType":"YulFunctionCall","src":"21504:18:30"},"variableNames":[{"name":"tail","nativeSrc":"21496:4:30","nodeType":"YulIdentifier","src":"21496:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21576:6:30","nodeType":"YulIdentifier","src":"21576:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"21589:9:30","nodeType":"YulIdentifier","src":"21589:9:30"},{"kind":"number","nativeSrc":"21600:1:30","nodeType":"YulLiteral","src":"21600:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21585:3:30","nodeType":"YulIdentifier","src":"21585:3:30"},"nativeSrc":"21585:17:30","nodeType":"YulFunctionCall","src":"21585:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21532:43:30","nodeType":"YulIdentifier","src":"21532:43:30"},"nativeSrc":"21532:71:30","nodeType":"YulFunctionCall","src":"21532:71:30"},"nativeSrc":"21532:71:30","nodeType":"YulExpressionStatement","src":"21532:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21657:6:30","nodeType":"YulIdentifier","src":"21657:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"21670:9:30","nodeType":"YulIdentifier","src":"21670:9:30"},{"kind":"number","nativeSrc":"21681:2:30","nodeType":"YulLiteral","src":"21681:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21666:3:30","nodeType":"YulIdentifier","src":"21666:3:30"},"nativeSrc":"21666:18:30","nodeType":"YulFunctionCall","src":"21666:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21613:43:30","nodeType":"YulIdentifier","src":"21613:43:30"},"nativeSrc":"21613:72:30","nodeType":"YulFunctionCall","src":"21613:72:30"},"nativeSrc":"21613:72:30","nodeType":"YulExpressionStatement","src":"21613:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21739:6:30","nodeType":"YulIdentifier","src":"21739:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"21752:9:30","nodeType":"YulIdentifier","src":"21752:9:30"},{"kind":"number","nativeSrc":"21763:2:30","nodeType":"YulLiteral","src":"21763:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21748:3:30","nodeType":"YulIdentifier","src":"21748:3:30"},"nativeSrc":"21748:18:30","nodeType":"YulFunctionCall","src":"21748:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21695:43:30","nodeType":"YulIdentifier","src":"21695:43:30"},"nativeSrc":"21695:72:30","nodeType":"YulFunctionCall","src":"21695:72:30"},"nativeSrc":"21695:72:30","nodeType":"YulExpressionStatement","src":"21695:72:30"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"21332:442:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21442:9:30","nodeType":"YulTypedName","src":"21442:9:30","type":""},{"name":"value2","nativeSrc":"21454:6:30","nodeType":"YulTypedName","src":"21454:6:30","type":""},{"name":"value1","nativeSrc":"21462:6:30","nodeType":"YulTypedName","src":"21462:6:30","type":""},{"name":"value0","nativeSrc":"21470:6:30","nodeType":"YulTypedName","src":"21470:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21481:4:30","nodeType":"YulTypedName","src":"21481:4:30","type":""}],"src":"21332:442:30"},{"body":{"nativeSrc":"21886:72:30","nodeType":"YulBlock","src":"21886:72:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"21908:6:30","nodeType":"YulIdentifier","src":"21908:6:30"},{"kind":"number","nativeSrc":"21916:1:30","nodeType":"YulLiteral","src":"21916:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21904:3:30","nodeType":"YulIdentifier","src":"21904:3:30"},"nativeSrc":"21904:14:30","nodeType":"YulFunctionCall","src":"21904:14:30"},{"hexValue":"4164647265737320697320616c72656164792061206d616e61676572","kind":"string","nativeSrc":"21920:30:30","nodeType":"YulLiteral","src":"21920:30:30","type":"","value":"Address is already a manager"}],"functionName":{"name":"mstore","nativeSrc":"21897:6:30","nodeType":"YulIdentifier","src":"21897:6:30"},"nativeSrc":"21897:54:30","nodeType":"YulFunctionCall","src":"21897:54:30"},"nativeSrc":"21897:54:30","nodeType":"YulExpressionStatement","src":"21897:54:30"}]},"name":"store_literal_in_memory_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049","nativeSrc":"21780:178:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"21878:6:30","nodeType":"YulTypedName","src":"21878:6:30","type":""}],"src":"21780:178:30"},{"body":{"nativeSrc":"22110:220:30","nodeType":"YulBlock","src":"22110:220:30","statements":[{"nativeSrc":"22120:74:30","nodeType":"YulAssignment","src":"22120:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"22186:3:30","nodeType":"YulIdentifier","src":"22186:3:30"},{"kind":"number","nativeSrc":"22191:2:30","nodeType":"YulLiteral","src":"22191:2:30","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22127:58:30","nodeType":"YulIdentifier","src":"22127:58:30"},"nativeSrc":"22127:67:30","nodeType":"YulFunctionCall","src":"22127:67:30"},"variableNames":[{"name":"pos","nativeSrc":"22120:3:30","nodeType":"YulIdentifier","src":"22120:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22292:3:30","nodeType":"YulIdentifier","src":"22292:3:30"}],"functionName":{"name":"store_literal_in_memory_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049","nativeSrc":"22203:88:30","nodeType":"YulIdentifier","src":"22203:88:30"},"nativeSrc":"22203:93:30","nodeType":"YulFunctionCall","src":"22203:93:30"},"nativeSrc":"22203:93:30","nodeType":"YulExpressionStatement","src":"22203:93:30"},{"nativeSrc":"22305:19:30","nodeType":"YulAssignment","src":"22305:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"22316:3:30","nodeType":"YulIdentifier","src":"22316:3:30"},{"kind":"number","nativeSrc":"22321:2:30","nodeType":"YulLiteral","src":"22321:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22312:3:30","nodeType":"YulIdentifier","src":"22312:3:30"},"nativeSrc":"22312:12:30","nodeType":"YulFunctionCall","src":"22312:12:30"},"variableNames":[{"name":"end","nativeSrc":"22305:3:30","nodeType":"YulIdentifier","src":"22305:3:30"}]}]},"name":"abi_encode_t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049_to_t_string_memory_ptr_fromStack","nativeSrc":"21964:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22098:3:30","nodeType":"YulTypedName","src":"22098:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22106:3:30","nodeType":"YulTypedName","src":"22106:3:30","type":""}],"src":"21964:366:30"},{"body":{"nativeSrc":"22507:248:30","nodeType":"YulBlock","src":"22507:248:30","statements":[{"nativeSrc":"22517:26:30","nodeType":"YulAssignment","src":"22517:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"22529:9:30","nodeType":"YulIdentifier","src":"22529:9:30"},{"kind":"number","nativeSrc":"22540:2:30","nodeType":"YulLiteral","src":"22540:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22525:3:30","nodeType":"YulIdentifier","src":"22525:3:30"},"nativeSrc":"22525:18:30","nodeType":"YulFunctionCall","src":"22525:18:30"},"variableNames":[{"name":"tail","nativeSrc":"22517:4:30","nodeType":"YulIdentifier","src":"22517:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22564:9:30","nodeType":"YulIdentifier","src":"22564:9:30"},{"kind":"number","nativeSrc":"22575:1:30","nodeType":"YulLiteral","src":"22575:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22560:3:30","nodeType":"YulIdentifier","src":"22560:3:30"},"nativeSrc":"22560:17:30","nodeType":"YulFunctionCall","src":"22560:17:30"},{"arguments":[{"name":"tail","nativeSrc":"22583:4:30","nodeType":"YulIdentifier","src":"22583:4:30"},{"name":"headStart","nativeSrc":"22589:9:30","nodeType":"YulIdentifier","src":"22589:9:30"}],"functionName":{"name":"sub","nativeSrc":"22579:3:30","nodeType":"YulIdentifier","src":"22579:3:30"},"nativeSrc":"22579:20:30","nodeType":"YulFunctionCall","src":"22579:20:30"}],"functionName":{"name":"mstore","nativeSrc":"22553:6:30","nodeType":"YulIdentifier","src":"22553:6:30"},"nativeSrc":"22553:47:30","nodeType":"YulFunctionCall","src":"22553:47:30"},"nativeSrc":"22553:47:30","nodeType":"YulExpressionStatement","src":"22553:47:30"},{"nativeSrc":"22609:139:30","nodeType":"YulAssignment","src":"22609:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"22743:4:30","nodeType":"YulIdentifier","src":"22743:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049_to_t_string_memory_ptr_fromStack","nativeSrc":"22617:124:30","nodeType":"YulIdentifier","src":"22617:124:30"},"nativeSrc":"22617:131:30","nodeType":"YulFunctionCall","src":"22617:131:30"},"variableNames":[{"name":"tail","nativeSrc":"22609:4:30","nodeType":"YulIdentifier","src":"22609:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22336:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22487:9:30","nodeType":"YulTypedName","src":"22487:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22502:4:30","nodeType":"YulTypedName","src":"22502:4:30","type":""}],"src":"22336:419:30"},{"body":{"nativeSrc":"22867:114:30","nodeType":"YulBlock","src":"22867:114:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22889:6:30","nodeType":"YulIdentifier","src":"22889:6:30"},{"kind":"number","nativeSrc":"22897:1:30","nodeType":"YulLiteral","src":"22897:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22885:3:30","nodeType":"YulIdentifier","src":"22885:3:30"},"nativeSrc":"22885:14:30","nodeType":"YulFunctionCall","src":"22885:14:30"},{"hexValue":"4164647265737320697320616c726561647920616e20696e737469747574696f","kind":"string","nativeSrc":"22901:34:30","nodeType":"YulLiteral","src":"22901:34:30","type":"","value":"Address is already an institutio"}],"functionName":{"name":"mstore","nativeSrc":"22878:6:30","nodeType":"YulIdentifier","src":"22878:6:30"},"nativeSrc":"22878:58:30","nodeType":"YulFunctionCall","src":"22878:58:30"},"nativeSrc":"22878:58:30","nodeType":"YulExpressionStatement","src":"22878:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22957:6:30","nodeType":"YulIdentifier","src":"22957:6:30"},{"kind":"number","nativeSrc":"22965:2:30","nodeType":"YulLiteral","src":"22965:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22953:3:30","nodeType":"YulIdentifier","src":"22953:3:30"},"nativeSrc":"22953:15:30","nodeType":"YulFunctionCall","src":"22953:15:30"},{"hexValue":"6e","kind":"string","nativeSrc":"22970:3:30","nodeType":"YulLiteral","src":"22970:3:30","type":"","value":"n"}],"functionName":{"name":"mstore","nativeSrc":"22946:6:30","nodeType":"YulIdentifier","src":"22946:6:30"},"nativeSrc":"22946:28:30","nodeType":"YulFunctionCall","src":"22946:28:30"},"nativeSrc":"22946:28:30","nodeType":"YulExpressionStatement","src":"22946:28:30"}]},"name":"store_literal_in_memory_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1","nativeSrc":"22761:220:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22859:6:30","nodeType":"YulTypedName","src":"22859:6:30","type":""}],"src":"22761:220:30"},{"body":{"nativeSrc":"23133:220:30","nodeType":"YulBlock","src":"23133:220:30","statements":[{"nativeSrc":"23143:74:30","nodeType":"YulAssignment","src":"23143:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"23209:3:30","nodeType":"YulIdentifier","src":"23209:3:30"},{"kind":"number","nativeSrc":"23214:2:30","nodeType":"YulLiteral","src":"23214:2:30","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23150:58:30","nodeType":"YulIdentifier","src":"23150:58:30"},"nativeSrc":"23150:67:30","nodeType":"YulFunctionCall","src":"23150:67:30"},"variableNames":[{"name":"pos","nativeSrc":"23143:3:30","nodeType":"YulIdentifier","src":"23143:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23315:3:30","nodeType":"YulIdentifier","src":"23315:3:30"}],"functionName":{"name":"store_literal_in_memory_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1","nativeSrc":"23226:88:30","nodeType":"YulIdentifier","src":"23226:88:30"},"nativeSrc":"23226:93:30","nodeType":"YulFunctionCall","src":"23226:93:30"},"nativeSrc":"23226:93:30","nodeType":"YulExpressionStatement","src":"23226:93:30"},{"nativeSrc":"23328:19:30","nodeType":"YulAssignment","src":"23328:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"23339:3:30","nodeType":"YulIdentifier","src":"23339:3:30"},{"kind":"number","nativeSrc":"23344:2:30","nodeType":"YulLiteral","src":"23344:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23335:3:30","nodeType":"YulIdentifier","src":"23335:3:30"},"nativeSrc":"23335:12:30","nodeType":"YulFunctionCall","src":"23335:12:30"},"variableNames":[{"name":"end","nativeSrc":"23328:3:30","nodeType":"YulIdentifier","src":"23328:3:30"}]}]},"name":"abi_encode_t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1_to_t_string_memory_ptr_fromStack","nativeSrc":"22987:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23121:3:30","nodeType":"YulTypedName","src":"23121:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23129:3:30","nodeType":"YulTypedName","src":"23129:3:30","type":""}],"src":"22987:366:30"},{"body":{"nativeSrc":"23530:248:30","nodeType":"YulBlock","src":"23530:248:30","statements":[{"nativeSrc":"23540:26:30","nodeType":"YulAssignment","src":"23540:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"23552:9:30","nodeType":"YulIdentifier","src":"23552:9:30"},{"kind":"number","nativeSrc":"23563:2:30","nodeType":"YulLiteral","src":"23563:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23548:3:30","nodeType":"YulIdentifier","src":"23548:3:30"},"nativeSrc":"23548:18:30","nodeType":"YulFunctionCall","src":"23548:18:30"},"variableNames":[{"name":"tail","nativeSrc":"23540:4:30","nodeType":"YulIdentifier","src":"23540:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23587:9:30","nodeType":"YulIdentifier","src":"23587:9:30"},{"kind":"number","nativeSrc":"23598:1:30","nodeType":"YulLiteral","src":"23598:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23583:3:30","nodeType":"YulIdentifier","src":"23583:3:30"},"nativeSrc":"23583:17:30","nodeType":"YulFunctionCall","src":"23583:17:30"},{"arguments":[{"name":"tail","nativeSrc":"23606:4:30","nodeType":"YulIdentifier","src":"23606:4:30"},{"name":"headStart","nativeSrc":"23612:9:30","nodeType":"YulIdentifier","src":"23612:9:30"}],"functionName":{"name":"sub","nativeSrc":"23602:3:30","nodeType":"YulIdentifier","src":"23602:3:30"},"nativeSrc":"23602:20:30","nodeType":"YulFunctionCall","src":"23602:20:30"}],"functionName":{"name":"mstore","nativeSrc":"23576:6:30","nodeType":"YulIdentifier","src":"23576:6:30"},"nativeSrc":"23576:47:30","nodeType":"YulFunctionCall","src":"23576:47:30"},"nativeSrc":"23576:47:30","nodeType":"YulExpressionStatement","src":"23576:47:30"},{"nativeSrc":"23632:139:30","nodeType":"YulAssignment","src":"23632:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"23766:4:30","nodeType":"YulIdentifier","src":"23766:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1_to_t_string_memory_ptr_fromStack","nativeSrc":"23640:124:30","nodeType":"YulIdentifier","src":"23640:124:30"},"nativeSrc":"23640:131:30","nodeType":"YulFunctionCall","src":"23640:131:30"},"variableNames":[{"name":"tail","nativeSrc":"23632:4:30","nodeType":"YulIdentifier","src":"23632:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23359:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23510:9:30","nodeType":"YulTypedName","src":"23510:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23525:4:30","nodeType":"YulTypedName","src":"23525:4:30","type":""}],"src":"23359:419:30"},{"body":{"nativeSrc":"23890:71:30","nodeType":"YulBlock","src":"23890:71:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23912:6:30","nodeType":"YulIdentifier","src":"23912:6:30"},{"kind":"number","nativeSrc":"23920:1:30","nodeType":"YulLiteral","src":"23920:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23908:3:30","nodeType":"YulIdentifier","src":"23908:3:30"},"nativeSrc":"23908:14:30","nodeType":"YulFunctionCall","src":"23908:14:30"},{"hexValue":"4164647265737320697320616c726561647920616e2061646d696e","kind":"string","nativeSrc":"23924:29:30","nodeType":"YulLiteral","src":"23924:29:30","type":"","value":"Address is already an admin"}],"functionName":{"name":"mstore","nativeSrc":"23901:6:30","nodeType":"YulIdentifier","src":"23901:6:30"},"nativeSrc":"23901:53:30","nodeType":"YulFunctionCall","src":"23901:53:30"},"nativeSrc":"23901:53:30","nodeType":"YulExpressionStatement","src":"23901:53:30"}]},"name":"store_literal_in_memory_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3","nativeSrc":"23784:177:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23882:6:30","nodeType":"YulTypedName","src":"23882:6:30","type":""}],"src":"23784:177:30"},{"body":{"nativeSrc":"24113:220:30","nodeType":"YulBlock","src":"24113:220:30","statements":[{"nativeSrc":"24123:74:30","nodeType":"YulAssignment","src":"24123:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"24189:3:30","nodeType":"YulIdentifier","src":"24189:3:30"},{"kind":"number","nativeSrc":"24194:2:30","nodeType":"YulLiteral","src":"24194:2:30","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"24130:58:30","nodeType":"YulIdentifier","src":"24130:58:30"},"nativeSrc":"24130:67:30","nodeType":"YulFunctionCall","src":"24130:67:30"},"variableNames":[{"name":"pos","nativeSrc":"24123:3:30","nodeType":"YulIdentifier","src":"24123:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24295:3:30","nodeType":"YulIdentifier","src":"24295:3:30"}],"functionName":{"name":"store_literal_in_memory_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3","nativeSrc":"24206:88:30","nodeType":"YulIdentifier","src":"24206:88:30"},"nativeSrc":"24206:93:30","nodeType":"YulFunctionCall","src":"24206:93:30"},"nativeSrc":"24206:93:30","nodeType":"YulExpressionStatement","src":"24206:93:30"},{"nativeSrc":"24308:19:30","nodeType":"YulAssignment","src":"24308:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"24319:3:30","nodeType":"YulIdentifier","src":"24319:3:30"},{"kind":"number","nativeSrc":"24324:2:30","nodeType":"YulLiteral","src":"24324:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24315:3:30","nodeType":"YulIdentifier","src":"24315:3:30"},"nativeSrc":"24315:12:30","nodeType":"YulFunctionCall","src":"24315:12:30"},"variableNames":[{"name":"end","nativeSrc":"24308:3:30","nodeType":"YulIdentifier","src":"24308:3:30"}]}]},"name":"abi_encode_t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3_to_t_string_memory_ptr_fromStack","nativeSrc":"23967:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24101:3:30","nodeType":"YulTypedName","src":"24101:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24109:3:30","nodeType":"YulTypedName","src":"24109:3:30","type":""}],"src":"23967:366:30"},{"body":{"nativeSrc":"24510:248:30","nodeType":"YulBlock","src":"24510:248:30","statements":[{"nativeSrc":"24520:26:30","nodeType":"YulAssignment","src":"24520:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"24532:9:30","nodeType":"YulIdentifier","src":"24532:9:30"},{"kind":"number","nativeSrc":"24543:2:30","nodeType":"YulLiteral","src":"24543:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24528:3:30","nodeType":"YulIdentifier","src":"24528:3:30"},"nativeSrc":"24528:18:30","nodeType":"YulFunctionCall","src":"24528:18:30"},"variableNames":[{"name":"tail","nativeSrc":"24520:4:30","nodeType":"YulIdentifier","src":"24520:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24567:9:30","nodeType":"YulIdentifier","src":"24567:9:30"},{"kind":"number","nativeSrc":"24578:1:30","nodeType":"YulLiteral","src":"24578:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24563:3:30","nodeType":"YulIdentifier","src":"24563:3:30"},"nativeSrc":"24563:17:30","nodeType":"YulFunctionCall","src":"24563:17:30"},{"arguments":[{"name":"tail","nativeSrc":"24586:4:30","nodeType":"YulIdentifier","src":"24586:4:30"},{"name":"headStart","nativeSrc":"24592:9:30","nodeType":"YulIdentifier","src":"24592:9:30"}],"functionName":{"name":"sub","nativeSrc":"24582:3:30","nodeType":"YulIdentifier","src":"24582:3:30"},"nativeSrc":"24582:20:30","nodeType":"YulFunctionCall","src":"24582:20:30"}],"functionName":{"name":"mstore","nativeSrc":"24556:6:30","nodeType":"YulIdentifier","src":"24556:6:30"},"nativeSrc":"24556:47:30","nodeType":"YulFunctionCall","src":"24556:47:30"},"nativeSrc":"24556:47:30","nodeType":"YulExpressionStatement","src":"24556:47:30"},{"nativeSrc":"24612:139:30","nodeType":"YulAssignment","src":"24612:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"24746:4:30","nodeType":"YulIdentifier","src":"24746:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3_to_t_string_memory_ptr_fromStack","nativeSrc":"24620:124:30","nodeType":"YulIdentifier","src":"24620:124:30"},"nativeSrc":"24620:131:30","nodeType":"YulFunctionCall","src":"24620:131:30"},"variableNames":[{"name":"tail","nativeSrc":"24612:4:30","nodeType":"YulIdentifier","src":"24612:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24339:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24490:9:30","nodeType":"YulTypedName","src":"24490:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24505:4:30","nodeType":"YulTypedName","src":"24505:4:30","type":""}],"src":"24339:419:30"},{"body":{"nativeSrc":"24870:67:30","nodeType":"YulBlock","src":"24870:67:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24892:6:30","nodeType":"YulIdentifier","src":"24892:6:30"},{"kind":"number","nativeSrc":"24900:1:30","nodeType":"YulLiteral","src":"24900:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24888:3:30","nodeType":"YulIdentifier","src":"24888:3:30"},"nativeSrc":"24888:14:30","nodeType":"YulFunctionCall","src":"24888:14:30"},{"hexValue":"546f6b656e20494420616c726561647920657869737473","kind":"string","nativeSrc":"24904:25:30","nodeType":"YulLiteral","src":"24904:25:30","type":"","value":"Token ID already exists"}],"functionName":{"name":"mstore","nativeSrc":"24881:6:30","nodeType":"YulIdentifier","src":"24881:6:30"},"nativeSrc":"24881:49:30","nodeType":"YulFunctionCall","src":"24881:49:30"},"nativeSrc":"24881:49:30","nodeType":"YulExpressionStatement","src":"24881:49:30"}]},"name":"store_literal_in_memory_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563","nativeSrc":"24764:173:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"24862:6:30","nodeType":"YulTypedName","src":"24862:6:30","type":""}],"src":"24764:173:30"},{"body":{"nativeSrc":"25089:220:30","nodeType":"YulBlock","src":"25089:220:30","statements":[{"nativeSrc":"25099:74:30","nodeType":"YulAssignment","src":"25099:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"25165:3:30","nodeType":"YulIdentifier","src":"25165:3:30"},{"kind":"number","nativeSrc":"25170:2:30","nodeType":"YulLiteral","src":"25170:2:30","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"25106:58:30","nodeType":"YulIdentifier","src":"25106:58:30"},"nativeSrc":"25106:67:30","nodeType":"YulFunctionCall","src":"25106:67:30"},"variableNames":[{"name":"pos","nativeSrc":"25099:3:30","nodeType":"YulIdentifier","src":"25099:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"25271:3:30","nodeType":"YulIdentifier","src":"25271:3:30"}],"functionName":{"name":"store_literal_in_memory_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563","nativeSrc":"25182:88:30","nodeType":"YulIdentifier","src":"25182:88:30"},"nativeSrc":"25182:93:30","nodeType":"YulFunctionCall","src":"25182:93:30"},"nativeSrc":"25182:93:30","nodeType":"YulExpressionStatement","src":"25182:93:30"},{"nativeSrc":"25284:19:30","nodeType":"YulAssignment","src":"25284:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"25295:3:30","nodeType":"YulIdentifier","src":"25295:3:30"},{"kind":"number","nativeSrc":"25300:2:30","nodeType":"YulLiteral","src":"25300:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25291:3:30","nodeType":"YulIdentifier","src":"25291:3:30"},"nativeSrc":"25291:12:30","nodeType":"YulFunctionCall","src":"25291:12:30"},"variableNames":[{"name":"end","nativeSrc":"25284:3:30","nodeType":"YulIdentifier","src":"25284:3:30"}]}]},"name":"abi_encode_t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563_to_t_string_memory_ptr_fromStack","nativeSrc":"24943:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25077:3:30","nodeType":"YulTypedName","src":"25077:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25085:3:30","nodeType":"YulTypedName","src":"25085:3:30","type":""}],"src":"24943:366:30"},{"body":{"nativeSrc":"25486:248:30","nodeType":"YulBlock","src":"25486:248:30","statements":[{"nativeSrc":"25496:26:30","nodeType":"YulAssignment","src":"25496:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"25508:9:30","nodeType":"YulIdentifier","src":"25508:9:30"},{"kind":"number","nativeSrc":"25519:2:30","nodeType":"YulLiteral","src":"25519:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25504:3:30","nodeType":"YulIdentifier","src":"25504:3:30"},"nativeSrc":"25504:18:30","nodeType":"YulFunctionCall","src":"25504:18:30"},"variableNames":[{"name":"tail","nativeSrc":"25496:4:30","nodeType":"YulIdentifier","src":"25496:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25543:9:30","nodeType":"YulIdentifier","src":"25543:9:30"},{"kind":"number","nativeSrc":"25554:1:30","nodeType":"YulLiteral","src":"25554:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25539:3:30","nodeType":"YulIdentifier","src":"25539:3:30"},"nativeSrc":"25539:17:30","nodeType":"YulFunctionCall","src":"25539:17:30"},{"arguments":[{"name":"tail","nativeSrc":"25562:4:30","nodeType":"YulIdentifier","src":"25562:4:30"},{"name":"headStart","nativeSrc":"25568:9:30","nodeType":"YulIdentifier","src":"25568:9:30"}],"functionName":{"name":"sub","nativeSrc":"25558:3:30","nodeType":"YulIdentifier","src":"25558:3:30"},"nativeSrc":"25558:20:30","nodeType":"YulFunctionCall","src":"25558:20:30"}],"functionName":{"name":"mstore","nativeSrc":"25532:6:30","nodeType":"YulIdentifier","src":"25532:6:30"},"nativeSrc":"25532:47:30","nodeType":"YulFunctionCall","src":"25532:47:30"},"nativeSrc":"25532:47:30","nodeType":"YulExpressionStatement","src":"25532:47:30"},{"nativeSrc":"25588:139:30","nodeType":"YulAssignment","src":"25588:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"25722:4:30","nodeType":"YulIdentifier","src":"25722:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563_to_t_string_memory_ptr_fromStack","nativeSrc":"25596:124:30","nodeType":"YulIdentifier","src":"25596:124:30"},"nativeSrc":"25596:131:30","nodeType":"YulFunctionCall","src":"25596:131:30"},"variableNames":[{"name":"tail","nativeSrc":"25588:4:30","nodeType":"YulIdentifier","src":"25588:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25315:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25466:9:30","nodeType":"YulTypedName","src":"25466:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25481:4:30","nodeType":"YulTypedName","src":"25481:4:30","type":""}],"src":"25315:419:30"},{"body":{"nativeSrc":"25854:34:30","nodeType":"YulBlock","src":"25854:34:30","statements":[{"nativeSrc":"25864:18:30","nodeType":"YulAssignment","src":"25864:18:30","value":{"name":"pos","nativeSrc":"25879:3:30","nodeType":"YulIdentifier","src":"25879:3:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"25864:11:30","nodeType":"YulIdentifier","src":"25864:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25740:148:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25826:3:30","nodeType":"YulTypedName","src":"25826:3:30","type":""},{"name":"length","nativeSrc":"25831:6:30","nodeType":"YulTypedName","src":"25831:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"25842:11:30","nodeType":"YulTypedName","src":"25842:11:30","type":""}],"src":"25740:148:30"},{"body":{"nativeSrc":"26004:280:30","nodeType":"YulBlock","src":"26004:280:30","statements":[{"nativeSrc":"26014:53:30","nodeType":"YulVariableDeclaration","src":"26014:53:30","value":{"arguments":[{"name":"value","nativeSrc":"26061:5:30","nodeType":"YulIdentifier","src":"26061:5:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"26028:32:30","nodeType":"YulIdentifier","src":"26028:32:30"},"nativeSrc":"26028:39:30","nodeType":"YulFunctionCall","src":"26028:39:30"},"variables":[{"name":"length","nativeSrc":"26018:6:30","nodeType":"YulTypedName","src":"26018:6:30","type":""}]},{"nativeSrc":"26076:96:30","nodeType":"YulAssignment","src":"26076:96:30","value":{"arguments":[{"name":"pos","nativeSrc":"26160:3:30","nodeType":"YulIdentifier","src":"26160:3:30"},{"name":"length","nativeSrc":"26165:6:30","nodeType":"YulIdentifier","src":"26165:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"26083:76:30","nodeType":"YulIdentifier","src":"26083:76:30"},"nativeSrc":"26083:89:30","nodeType":"YulFunctionCall","src":"26083:89:30"},"variableNames":[{"name":"pos","nativeSrc":"26076:3:30","nodeType":"YulIdentifier","src":"26076:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26220:5:30","nodeType":"YulIdentifier","src":"26220:5:30"},{"kind":"number","nativeSrc":"26227:4:30","nodeType":"YulLiteral","src":"26227:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26216:3:30","nodeType":"YulIdentifier","src":"26216:3:30"},"nativeSrc":"26216:16:30","nodeType":"YulFunctionCall","src":"26216:16:30"},{"name":"pos","nativeSrc":"26234:3:30","nodeType":"YulIdentifier","src":"26234:3:30"},{"name":"length","nativeSrc":"26239:6:30","nodeType":"YulIdentifier","src":"26239:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"26181:34:30","nodeType":"YulIdentifier","src":"26181:34:30"},"nativeSrc":"26181:65:30","nodeType":"YulFunctionCall","src":"26181:65:30"},"nativeSrc":"26181:65:30","nodeType":"YulExpressionStatement","src":"26181:65:30"},{"nativeSrc":"26255:23:30","nodeType":"YulAssignment","src":"26255:23:30","value":{"arguments":[{"name":"pos","nativeSrc":"26266:3:30","nodeType":"YulIdentifier","src":"26266:3:30"},{"name":"length","nativeSrc":"26271:6:30","nodeType":"YulIdentifier","src":"26271:6:30"}],"functionName":{"name":"add","nativeSrc":"26262:3:30","nodeType":"YulIdentifier","src":"26262:3:30"},"nativeSrc":"26262:16:30","nodeType":"YulFunctionCall","src":"26262:16:30"},"variableNames":[{"name":"end","nativeSrc":"26255:3:30","nodeType":"YulIdentifier","src":"26255:3:30"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25894:390:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25985:5:30","nodeType":"YulTypedName","src":"25985:5:30","type":""},{"name":"pos","nativeSrc":"25992:3:30","nodeType":"YulTypedName","src":"25992:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26000:3:30","nodeType":"YulTypedName","src":"26000:3:30","type":""}],"src":"25894:390:30"},{"body":{"nativeSrc":"26426:139:30","nodeType":"YulBlock","src":"26426:139:30","statements":[{"nativeSrc":"26437:102:30","nodeType":"YulAssignment","src":"26437:102:30","value":{"arguments":[{"name":"value0","nativeSrc":"26526:6:30","nodeType":"YulIdentifier","src":"26526:6:30"},{"name":"pos","nativeSrc":"26535:3:30","nodeType":"YulIdentifier","src":"26535:3:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"26444:81:30","nodeType":"YulIdentifier","src":"26444:81:30"},"nativeSrc":"26444:95:30","nodeType":"YulFunctionCall","src":"26444:95:30"},"variableNames":[{"name":"pos","nativeSrc":"26437:3:30","nodeType":"YulIdentifier","src":"26437:3:30"}]},{"nativeSrc":"26549:10:30","nodeType":"YulAssignment","src":"26549:10:30","value":{"name":"pos","nativeSrc":"26556:3:30","nodeType":"YulIdentifier","src":"26556:3:30"},"variableNames":[{"name":"end","nativeSrc":"26549:3:30","nodeType":"YulIdentifier","src":"26549:3:30"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"26290:275:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26405:3:30","nodeType":"YulTypedName","src":"26405:3:30","type":""},{"name":"value0","nativeSrc":"26411:6:30","nodeType":"YulTypedName","src":"26411:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26422:3:30","nodeType":"YulTypedName","src":"26422:3:30","type":""}],"src":"26290:275:30"},{"body":{"nativeSrc":"26677:128:30","nodeType":"YulBlock","src":"26677:128:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26699:6:30","nodeType":"YulIdentifier","src":"26699:6:30"},{"kind":"number","nativeSrc":"26707:1:30","nodeType":"YulLiteral","src":"26707:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26695:3:30","nodeType":"YulIdentifier","src":"26695:3:30"},"nativeSrc":"26695:14:30","nodeType":"YulFunctionCall","src":"26695:14:30"},{"hexValue":"54686520495046532055524920697320616c7265616479206973737565642066","kind":"string","nativeSrc":"26711:34:30","nodeType":"YulLiteral","src":"26711:34:30","type":"","value":"The IPFS URI is already issued f"}],"functionName":{"name":"mstore","nativeSrc":"26688:6:30","nodeType":"YulIdentifier","src":"26688:6:30"},"nativeSrc":"26688:58:30","nodeType":"YulFunctionCall","src":"26688:58:30"},"nativeSrc":"26688:58:30","nodeType":"YulExpressionStatement","src":"26688:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26767:6:30","nodeType":"YulIdentifier","src":"26767:6:30"},{"kind":"number","nativeSrc":"26775:2:30","nodeType":"YulLiteral","src":"26775:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26763:3:30","nodeType":"YulIdentifier","src":"26763:3:30"},"nativeSrc":"26763:15:30","nodeType":"YulFunctionCall","src":"26763:15:30"},{"hexValue":"6f7220612063726564656e7469616c","kind":"string","nativeSrc":"26780:17:30","nodeType":"YulLiteral","src":"26780:17:30","type":"","value":"or a credential"}],"functionName":{"name":"mstore","nativeSrc":"26756:6:30","nodeType":"YulIdentifier","src":"26756:6:30"},"nativeSrc":"26756:42:30","nodeType":"YulFunctionCall","src":"26756:42:30"},"nativeSrc":"26756:42:30","nodeType":"YulExpressionStatement","src":"26756:42:30"}]},"name":"store_literal_in_memory_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53","nativeSrc":"26571:234:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"26669:6:30","nodeType":"YulTypedName","src":"26669:6:30","type":""}],"src":"26571:234:30"},{"body":{"nativeSrc":"26957:220:30","nodeType":"YulBlock","src":"26957:220:30","statements":[{"nativeSrc":"26967:74:30","nodeType":"YulAssignment","src":"26967:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"27033:3:30","nodeType":"YulIdentifier","src":"27033:3:30"},{"kind":"number","nativeSrc":"27038:2:30","nodeType":"YulLiteral","src":"27038:2:30","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"26974:58:30","nodeType":"YulIdentifier","src":"26974:58:30"},"nativeSrc":"26974:67:30","nodeType":"YulFunctionCall","src":"26974:67:30"},"variableNames":[{"name":"pos","nativeSrc":"26967:3:30","nodeType":"YulIdentifier","src":"26967:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"27139:3:30","nodeType":"YulIdentifier","src":"27139:3:30"}],"functionName":{"name":"store_literal_in_memory_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53","nativeSrc":"27050:88:30","nodeType":"YulIdentifier","src":"27050:88:30"},"nativeSrc":"27050:93:30","nodeType":"YulFunctionCall","src":"27050:93:30"},"nativeSrc":"27050:93:30","nodeType":"YulExpressionStatement","src":"27050:93:30"},{"nativeSrc":"27152:19:30","nodeType":"YulAssignment","src":"27152:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"27163:3:30","nodeType":"YulIdentifier","src":"27163:3:30"},{"kind":"number","nativeSrc":"27168:2:30","nodeType":"YulLiteral","src":"27168:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27159:3:30","nodeType":"YulIdentifier","src":"27159:3:30"},"nativeSrc":"27159:12:30","nodeType":"YulFunctionCall","src":"27159:12:30"},"variableNames":[{"name":"end","nativeSrc":"27152:3:30","nodeType":"YulIdentifier","src":"27152:3:30"}]}]},"name":"abi_encode_t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53_to_t_string_memory_ptr_fromStack","nativeSrc":"26811:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26945:3:30","nodeType":"YulTypedName","src":"26945:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26953:3:30","nodeType":"YulTypedName","src":"26953:3:30","type":""}],"src":"26811:366:30"},{"body":{"nativeSrc":"27354:248:30","nodeType":"YulBlock","src":"27354:248:30","statements":[{"nativeSrc":"27364:26:30","nodeType":"YulAssignment","src":"27364:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"27376:9:30","nodeType":"YulIdentifier","src":"27376:9:30"},{"kind":"number","nativeSrc":"27387:2:30","nodeType":"YulLiteral","src":"27387:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27372:3:30","nodeType":"YulIdentifier","src":"27372:3:30"},"nativeSrc":"27372:18:30","nodeType":"YulFunctionCall","src":"27372:18:30"},"variableNames":[{"name":"tail","nativeSrc":"27364:4:30","nodeType":"YulIdentifier","src":"27364:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27411:9:30","nodeType":"YulIdentifier","src":"27411:9:30"},{"kind":"number","nativeSrc":"27422:1:30","nodeType":"YulLiteral","src":"27422:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27407:3:30","nodeType":"YulIdentifier","src":"27407:3:30"},"nativeSrc":"27407:17:30","nodeType":"YulFunctionCall","src":"27407:17:30"},{"arguments":[{"name":"tail","nativeSrc":"27430:4:30","nodeType":"YulIdentifier","src":"27430:4:30"},{"name":"headStart","nativeSrc":"27436:9:30","nodeType":"YulIdentifier","src":"27436:9:30"}],"functionName":{"name":"sub","nativeSrc":"27426:3:30","nodeType":"YulIdentifier","src":"27426:3:30"},"nativeSrc":"27426:20:30","nodeType":"YulFunctionCall","src":"27426:20:30"}],"functionName":{"name":"mstore","nativeSrc":"27400:6:30","nodeType":"YulIdentifier","src":"27400:6:30"},"nativeSrc":"27400:47:30","nodeType":"YulFunctionCall","src":"27400:47:30"},"nativeSrc":"27400:47:30","nodeType":"YulExpressionStatement","src":"27400:47:30"},{"nativeSrc":"27456:139:30","nodeType":"YulAssignment","src":"27456:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"27590:4:30","nodeType":"YulIdentifier","src":"27590:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53_to_t_string_memory_ptr_fromStack","nativeSrc":"27464:124:30","nodeType":"YulIdentifier","src":"27464:124:30"},"nativeSrc":"27464:131:30","nodeType":"YulFunctionCall","src":"27464:131:30"},"variableNames":[{"name":"tail","nativeSrc":"27456:4:30","nodeType":"YulIdentifier","src":"27456:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27183:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27334:9:30","nodeType":"YulTypedName","src":"27334:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27349:4:30","nodeType":"YulTypedName","src":"27349:4:30","type":""}],"src":"27183:419:30"},{"body":{"nativeSrc":"27714:61:30","nodeType":"YulBlock","src":"27714:61:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"27736:6:30","nodeType":"YulIdentifier","src":"27736:6:30"},{"kind":"number","nativeSrc":"27744:1:30","nodeType":"YulLiteral","src":"27744:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27732:3:30","nodeType":"YulIdentifier","src":"27732:3:30"},"nativeSrc":"27732:14:30","nodeType":"YulFunctionCall","src":"27732:14:30"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nativeSrc":"27748:19:30","nodeType":"YulLiteral","src":"27748:19:30","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nativeSrc":"27725:6:30","nodeType":"YulIdentifier","src":"27725:6:30"},"nativeSrc":"27725:43:30","nodeType":"YulFunctionCall","src":"27725:43:30"},"nativeSrc":"27725:43:30","nodeType":"YulExpressionStatement","src":"27725:43:30"}]},"name":"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","nativeSrc":"27608:167:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"27706:6:30","nodeType":"YulTypedName","src":"27706:6:30","type":""}],"src":"27608:167:30"},{"body":{"nativeSrc":"27927:220:30","nodeType":"YulBlock","src":"27927:220:30","statements":[{"nativeSrc":"27937:74:30","nodeType":"YulAssignment","src":"27937:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"28003:3:30","nodeType":"YulIdentifier","src":"28003:3:30"},{"kind":"number","nativeSrc":"28008:2:30","nodeType":"YulLiteral","src":"28008:2:30","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"27944:58:30","nodeType":"YulIdentifier","src":"27944:58:30"},"nativeSrc":"27944:67:30","nodeType":"YulFunctionCall","src":"27944:67:30"},"variableNames":[{"name":"pos","nativeSrc":"27937:3:30","nodeType":"YulIdentifier","src":"27937:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28109:3:30","nodeType":"YulIdentifier","src":"28109:3:30"}],"functionName":{"name":"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","nativeSrc":"28020:88:30","nodeType":"YulIdentifier","src":"28020:88:30"},"nativeSrc":"28020:93:30","nodeType":"YulFunctionCall","src":"28020:93:30"},"nativeSrc":"28020:93:30","nodeType":"YulExpressionStatement","src":"28020:93:30"},{"nativeSrc":"28122:19:30","nodeType":"YulAssignment","src":"28122:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"28133:3:30","nodeType":"YulIdentifier","src":"28133:3:30"},{"kind":"number","nativeSrc":"28138:2:30","nodeType":"YulLiteral","src":"28138:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28129:3:30","nodeType":"YulIdentifier","src":"28129:3:30"},"nativeSrc":"28129:12:30","nodeType":"YulFunctionCall","src":"28129:12:30"},"variableNames":[{"name":"end","nativeSrc":"28122:3:30","nodeType":"YulIdentifier","src":"28122:3:30"}]}]},"name":"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack","nativeSrc":"27781:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"27915:3:30","nodeType":"YulTypedName","src":"27915:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"27923:3:30","nodeType":"YulTypedName","src":"27923:3:30","type":""}],"src":"27781:366:30"},{"body":{"nativeSrc":"28324:248:30","nodeType":"YulBlock","src":"28324:248:30","statements":[{"nativeSrc":"28334:26:30","nodeType":"YulAssignment","src":"28334:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"28346:9:30","nodeType":"YulIdentifier","src":"28346:9:30"},{"kind":"number","nativeSrc":"28357:2:30","nodeType":"YulLiteral","src":"28357:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28342:3:30","nodeType":"YulIdentifier","src":"28342:3:30"},"nativeSrc":"28342:18:30","nodeType":"YulFunctionCall","src":"28342:18:30"},"variableNames":[{"name":"tail","nativeSrc":"28334:4:30","nodeType":"YulIdentifier","src":"28334:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28381:9:30","nodeType":"YulIdentifier","src":"28381:9:30"},{"kind":"number","nativeSrc":"28392:1:30","nodeType":"YulLiteral","src":"28392:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28377:3:30","nodeType":"YulIdentifier","src":"28377:3:30"},"nativeSrc":"28377:17:30","nodeType":"YulFunctionCall","src":"28377:17:30"},{"arguments":[{"name":"tail","nativeSrc":"28400:4:30","nodeType":"YulIdentifier","src":"28400:4:30"},{"name":"headStart","nativeSrc":"28406:9:30","nodeType":"YulIdentifier","src":"28406:9:30"}],"functionName":{"name":"sub","nativeSrc":"28396:3:30","nodeType":"YulIdentifier","src":"28396:3:30"},"nativeSrc":"28396:20:30","nodeType":"YulFunctionCall","src":"28396:20:30"}],"functionName":{"name":"mstore","nativeSrc":"28370:6:30","nodeType":"YulIdentifier","src":"28370:6:30"},"nativeSrc":"28370:47:30","nodeType":"YulFunctionCall","src":"28370:47:30"},"nativeSrc":"28370:47:30","nodeType":"YulExpressionStatement","src":"28370:47:30"},{"nativeSrc":"28426:139:30","nodeType":"YulAssignment","src":"28426:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"28560:4:30","nodeType":"YulIdentifier","src":"28560:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack","nativeSrc":"28434:124:30","nodeType":"YulIdentifier","src":"28434:124:30"},"nativeSrc":"28434:131:30","nodeType":"YulFunctionCall","src":"28434:131:30"},"variableNames":[{"name":"tail","nativeSrc":"28426:4:30","nodeType":"YulIdentifier","src":"28426:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28153:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28304:9:30","nodeType":"YulTypedName","src":"28304:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28319:4:30","nodeType":"YulTypedName","src":"28319:4:30","type":""}],"src":"28153:419:30"},{"body":{"nativeSrc":"28632:87:30","nodeType":"YulBlock","src":"28632:87:30","statements":[{"nativeSrc":"28642:11:30","nodeType":"YulAssignment","src":"28642:11:30","value":{"name":"ptr","nativeSrc":"28650:3:30","nodeType":"YulIdentifier","src":"28650:3:30"},"variableNames":[{"name":"data","nativeSrc":"28642:4:30","nodeType":"YulIdentifier","src":"28642:4:30"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28670:1:30","nodeType":"YulLiteral","src":"28670:1:30","type":"","value":"0"},{"name":"ptr","nativeSrc":"28673:3:30","nodeType":"YulIdentifier","src":"28673:3:30"}],"functionName":{"name":"mstore","nativeSrc":"28663:6:30","nodeType":"YulIdentifier","src":"28663:6:30"},"nativeSrc":"28663:14:30","nodeType":"YulFunctionCall","src":"28663:14:30"},"nativeSrc":"28663:14:30","nodeType":"YulExpressionStatement","src":"28663:14:30"},{"nativeSrc":"28686:26:30","nodeType":"YulAssignment","src":"28686:26:30","value":{"arguments":[{"kind":"number","nativeSrc":"28704:1:30","nodeType":"YulLiteral","src":"28704:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"28707:4:30","nodeType":"YulLiteral","src":"28707:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"28694:9:30","nodeType":"YulIdentifier","src":"28694:9:30"},"nativeSrc":"28694:18:30","nodeType":"YulFunctionCall","src":"28694:18:30"},"variableNames":[{"name":"data","nativeSrc":"28686:4:30","nodeType":"YulIdentifier","src":"28686:4:30"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"28578:141:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"28619:3:30","nodeType":"YulTypedName","src":"28619:3:30","type":""}],"returnVariables":[{"name":"data","nativeSrc":"28627:4:30","nodeType":"YulTypedName","src":"28627:4:30","type":""}],"src":"28578:141:30"},{"body":{"nativeSrc":"28769:49:30","nodeType":"YulBlock","src":"28769:49:30","statements":[{"nativeSrc":"28779:33:30","nodeType":"YulAssignment","src":"28779:33:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28797:5:30","nodeType":"YulIdentifier","src":"28797:5:30"},{"kind":"number","nativeSrc":"28804:2:30","nodeType":"YulLiteral","src":"28804:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"28793:3:30","nodeType":"YulIdentifier","src":"28793:3:30"},"nativeSrc":"28793:14:30","nodeType":"YulFunctionCall","src":"28793:14:30"},{"kind":"number","nativeSrc":"28809:2:30","nodeType":"YulLiteral","src":"28809:2:30","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"28789:3:30","nodeType":"YulIdentifier","src":"28789:3:30"},"nativeSrc":"28789:23:30","nodeType":"YulFunctionCall","src":"28789:23:30"},"variableNames":[{"name":"result","nativeSrc":"28779:6:30","nodeType":"YulIdentifier","src":"28779:6:30"}]}]},"name":"divide_by_32_ceil","nativeSrc":"28725:93:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28752:5:30","nodeType":"YulTypedName","src":"28752:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"28762:6:30","nodeType":"YulTypedName","src":"28762:6:30","type":""}],"src":"28725:93:30"},{"body":{"nativeSrc":"28877:54:30","nodeType":"YulBlock","src":"28877:54:30","statements":[{"nativeSrc":"28887:37:30","nodeType":"YulAssignment","src":"28887:37:30","value":{"arguments":[{"name":"bits","nativeSrc":"28912:4:30","nodeType":"YulIdentifier","src":"28912:4:30"},{"name":"value","nativeSrc":"28918:5:30","nodeType":"YulIdentifier","src":"28918:5:30"}],"functionName":{"name":"shl","nativeSrc":"28908:3:30","nodeType":"YulIdentifier","src":"28908:3:30"},"nativeSrc":"28908:16:30","nodeType":"YulFunctionCall","src":"28908:16:30"},"variableNames":[{"name":"newValue","nativeSrc":"28887:8:30","nodeType":"YulIdentifier","src":"28887:8:30"}]}]},"name":"shift_left_dynamic","nativeSrc":"28824:107:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"28852:4:30","nodeType":"YulTypedName","src":"28852:4:30","type":""},{"name":"value","nativeSrc":"28858:5:30","nodeType":"YulTypedName","src":"28858:5:30","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"28868:8:30","nodeType":"YulTypedName","src":"28868:8:30","type":""}],"src":"28824:107:30"},{"body":{"nativeSrc":"29013:317:30","nodeType":"YulBlock","src":"29013:317:30","statements":[{"nativeSrc":"29023:35:30","nodeType":"YulVariableDeclaration","src":"29023:35:30","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"29044:10:30","nodeType":"YulIdentifier","src":"29044:10:30"},{"kind":"number","nativeSrc":"29056:1:30","nodeType":"YulLiteral","src":"29056:1:30","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"29040:3:30","nodeType":"YulIdentifier","src":"29040:3:30"},"nativeSrc":"29040:18:30","nodeType":"YulFunctionCall","src":"29040:18:30"},"variables":[{"name":"shiftBits","nativeSrc":"29027:9:30","nodeType":"YulTypedName","src":"29027:9:30","type":""}]},{"nativeSrc":"29067:109:30","nodeType":"YulVariableDeclaration","src":"29067:109:30","value":{"arguments":[{"name":"shiftBits","nativeSrc":"29098:9:30","nodeType":"YulIdentifier","src":"29098:9:30"},{"kind":"number","nativeSrc":"29109:66:30","nodeType":"YulLiteral","src":"29109:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"29079:18:30","nodeType":"YulIdentifier","src":"29079:18:30"},"nativeSrc":"29079:97:30","nodeType":"YulFunctionCall","src":"29079:97:30"},"variables":[{"name":"mask","nativeSrc":"29071:4:30","nodeType":"YulTypedName","src":"29071:4:30","type":""}]},{"nativeSrc":"29185:51:30","nodeType":"YulAssignment","src":"29185:51:30","value":{"arguments":[{"name":"shiftBits","nativeSrc":"29216:9:30","nodeType":"YulIdentifier","src":"29216:9:30"},{"name":"toInsert","nativeSrc":"29227:8:30","nodeType":"YulIdentifier","src":"29227:8:30"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"29197:18:30","nodeType":"YulIdentifier","src":"29197:18:30"},"nativeSrc":"29197:39:30","nodeType":"YulFunctionCall","src":"29197:39:30"},"variableNames":[{"name":"toInsert","nativeSrc":"29185:8:30","nodeType":"YulIdentifier","src":"29185:8:30"}]},{"nativeSrc":"29245:30:30","nodeType":"YulAssignment","src":"29245:30:30","value":{"arguments":[{"name":"value","nativeSrc":"29258:5:30","nodeType":"YulIdentifier","src":"29258:5:30"},{"arguments":[{"name":"mask","nativeSrc":"29269:4:30","nodeType":"YulIdentifier","src":"29269:4:30"}],"functionName":{"name":"not","nativeSrc":"29265:3:30","nodeType":"YulIdentifier","src":"29265:3:30"},"nativeSrc":"29265:9:30","nodeType":"YulFunctionCall","src":"29265:9:30"}],"functionName":{"name":"and","nativeSrc":"29254:3:30","nodeType":"YulIdentifier","src":"29254:3:30"},"nativeSrc":"29254:21:30","nodeType":"YulFunctionCall","src":"29254:21:30"},"variableNames":[{"name":"value","nativeSrc":"29245:5:30","nodeType":"YulIdentifier","src":"29245:5:30"}]},{"nativeSrc":"29284:40:30","nodeType":"YulAssignment","src":"29284:40:30","value":{"arguments":[{"name":"value","nativeSrc":"29297:5:30","nodeType":"YulIdentifier","src":"29297:5:30"},{"arguments":[{"name":"toInsert","nativeSrc":"29308:8:30","nodeType":"YulIdentifier","src":"29308:8:30"},{"name":"mask","nativeSrc":"29318:4:30","nodeType":"YulIdentifier","src":"29318:4:30"}],"functionName":{"name":"and","nativeSrc":"29304:3:30","nodeType":"YulIdentifier","src":"29304:3:30"},"nativeSrc":"29304:19:30","nodeType":"YulFunctionCall","src":"29304:19:30"}],"functionName":{"name":"or","nativeSrc":"29294:2:30","nodeType":"YulIdentifier","src":"29294:2:30"},"nativeSrc":"29294:30:30","nodeType":"YulFunctionCall","src":"29294:30:30"},"variableNames":[{"name":"result","nativeSrc":"29284:6:30","nodeType":"YulIdentifier","src":"29284:6:30"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"28937:393:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28974:5:30","nodeType":"YulTypedName","src":"28974:5:30","type":""},{"name":"shiftBytes","nativeSrc":"28981:10:30","nodeType":"YulTypedName","src":"28981:10:30","type":""},{"name":"toInsert","nativeSrc":"28993:8:30","nodeType":"YulTypedName","src":"28993:8:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"29006:6:30","nodeType":"YulTypedName","src":"29006:6:30","type":""}],"src":"28937:393:30"},{"body":{"nativeSrc":"29368:28:30","nodeType":"YulBlock","src":"29368:28:30","statements":[{"nativeSrc":"29378:12:30","nodeType":"YulAssignment","src":"29378:12:30","value":{"name":"value","nativeSrc":"29385:5:30","nodeType":"YulIdentifier","src":"29385:5:30"},"variableNames":[{"name":"ret","nativeSrc":"29378:3:30","nodeType":"YulIdentifier","src":"29378:3:30"}]}]},"name":"identity","nativeSrc":"29336:60:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29354:5:30","nodeType":"YulTypedName","src":"29354:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"29364:3:30","nodeType":"YulTypedName","src":"29364:3:30","type":""}],"src":"29336:60:30"},{"body":{"nativeSrc":"29462:82:30","nodeType":"YulBlock","src":"29462:82:30","statements":[{"nativeSrc":"29472:66:30","nodeType":"YulAssignment","src":"29472:66:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"29530:5:30","nodeType":"YulIdentifier","src":"29530:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"29512:17:30","nodeType":"YulIdentifier","src":"29512:17:30"},"nativeSrc":"29512:24:30","nodeType":"YulFunctionCall","src":"29512:24:30"}],"functionName":{"name":"identity","nativeSrc":"29503:8:30","nodeType":"YulIdentifier","src":"29503:8:30"},"nativeSrc":"29503:34:30","nodeType":"YulFunctionCall","src":"29503:34:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"29485:17:30","nodeType":"YulIdentifier","src":"29485:17:30"},"nativeSrc":"29485:53:30","nodeType":"YulFunctionCall","src":"29485:53:30"},"variableNames":[{"name":"converted","nativeSrc":"29472:9:30","nodeType":"YulIdentifier","src":"29472:9:30"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"29402:142:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29442:5:30","nodeType":"YulTypedName","src":"29442:5:30","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"29452:9:30","nodeType":"YulTypedName","src":"29452:9:30","type":""}],"src":"29402:142:30"},{"body":{"nativeSrc":"29597:28:30","nodeType":"YulBlock","src":"29597:28:30","statements":[{"nativeSrc":"29607:12:30","nodeType":"YulAssignment","src":"29607:12:30","value":{"name":"value","nativeSrc":"29614:5:30","nodeType":"YulIdentifier","src":"29614:5:30"},"variableNames":[{"name":"ret","nativeSrc":"29607:3:30","nodeType":"YulIdentifier","src":"29607:3:30"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"29550:75:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29583:5:30","nodeType":"YulTypedName","src":"29583:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"29593:3:30","nodeType":"YulTypedName","src":"29593:3:30","type":""}],"src":"29550:75:30"},{"body":{"nativeSrc":"29707:193:30","nodeType":"YulBlock","src":"29707:193:30","statements":[{"nativeSrc":"29717:63:30","nodeType":"YulVariableDeclaration","src":"29717:63:30","value":{"arguments":[{"name":"value_0","nativeSrc":"29772:7:30","nodeType":"YulIdentifier","src":"29772:7:30"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"29741:30:30","nodeType":"YulIdentifier","src":"29741:30:30"},"nativeSrc":"29741:39:30","nodeType":"YulFunctionCall","src":"29741:39:30"},"variables":[{"name":"convertedValue_0","nativeSrc":"29721:16:30","nodeType":"YulTypedName","src":"29721:16:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"29796:4:30","nodeType":"YulIdentifier","src":"29796:4:30"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"29836:4:30","nodeType":"YulIdentifier","src":"29836:4:30"}],"functionName":{"name":"sload","nativeSrc":"29830:5:30","nodeType":"YulIdentifier","src":"29830:5:30"},"nativeSrc":"29830:11:30","nodeType":"YulFunctionCall","src":"29830:11:30"},{"name":"offset","nativeSrc":"29843:6:30","nodeType":"YulIdentifier","src":"29843:6:30"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"29875:16:30","nodeType":"YulIdentifier","src":"29875:16:30"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"29851:23:30","nodeType":"YulIdentifier","src":"29851:23:30"},"nativeSrc":"29851:41:30","nodeType":"YulFunctionCall","src":"29851:41:30"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"29802:27:30","nodeType":"YulIdentifier","src":"29802:27:30"},"nativeSrc":"29802:91:30","nodeType":"YulFunctionCall","src":"29802:91:30"}],"functionName":{"name":"sstore","nativeSrc":"29789:6:30","nodeType":"YulIdentifier","src":"29789:6:30"},"nativeSrc":"29789:105:30","nodeType":"YulFunctionCall","src":"29789:105:30"},"nativeSrc":"29789:105:30","nodeType":"YulExpressionStatement","src":"29789:105:30"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"29631:269:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"29684:4:30","nodeType":"YulTypedName","src":"29684:4:30","type":""},{"name":"offset","nativeSrc":"29690:6:30","nodeType":"YulTypedName","src":"29690:6:30","type":""},{"name":"value_0","nativeSrc":"29698:7:30","nodeType":"YulTypedName","src":"29698:7:30","type":""}],"src":"29631:269:30"},{"body":{"nativeSrc":"29955:24:30","nodeType":"YulBlock","src":"29955:24:30","statements":[{"nativeSrc":"29965:8:30","nodeType":"YulAssignment","src":"29965:8:30","value":{"kind":"number","nativeSrc":"29972:1:30","nodeType":"YulLiteral","src":"29972:1:30","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"29965:3:30","nodeType":"YulIdentifier","src":"29965:3:30"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"29906:73:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"29951:3:30","nodeType":"YulTypedName","src":"29951:3:30","type":""}],"src":"29906:73:30"},{"body":{"nativeSrc":"30038:136:30","nodeType":"YulBlock","src":"30038:136:30","statements":[{"nativeSrc":"30048:46:30","nodeType":"YulVariableDeclaration","src":"30048:46:30","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"30062:30:30","nodeType":"YulIdentifier","src":"30062:30:30"},"nativeSrc":"30062:32:30","nodeType":"YulFunctionCall","src":"30062:32:30"},"variables":[{"name":"zero_0","nativeSrc":"30052:6:30","nodeType":"YulTypedName","src":"30052:6:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"30147:4:30","nodeType":"YulIdentifier","src":"30147:4:30"},{"name":"offset","nativeSrc":"30153:6:30","nodeType":"YulIdentifier","src":"30153:6:30"},{"name":"zero_0","nativeSrc":"30161:6:30","nodeType":"YulIdentifier","src":"30161:6:30"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"30103:43:30","nodeType":"YulIdentifier","src":"30103:43:30"},"nativeSrc":"30103:65:30","nodeType":"YulFunctionCall","src":"30103:65:30"},"nativeSrc":"30103:65:30","nodeType":"YulExpressionStatement","src":"30103:65:30"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"29985:189:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"30024:4:30","nodeType":"YulTypedName","src":"30024:4:30","type":""},{"name":"offset","nativeSrc":"30030:6:30","nodeType":"YulTypedName","src":"30030:6:30","type":""}],"src":"29985:189:30"},{"body":{"nativeSrc":"30230:136:30","nodeType":"YulBlock","src":"30230:136:30","statements":[{"body":{"nativeSrc":"30297:63:30","nodeType":"YulBlock","src":"30297:63:30","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"30341:5:30","nodeType":"YulIdentifier","src":"30341:5:30"},{"kind":"number","nativeSrc":"30348:1:30","nodeType":"YulLiteral","src":"30348:1:30","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"30311:29:30","nodeType":"YulIdentifier","src":"30311:29:30"},"nativeSrc":"30311:39:30","nodeType":"YulFunctionCall","src":"30311:39:30"},"nativeSrc":"30311:39:30","nodeType":"YulExpressionStatement","src":"30311:39:30"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"30250:5:30","nodeType":"YulIdentifier","src":"30250:5:30"},{"name":"end","nativeSrc":"30257:3:30","nodeType":"YulIdentifier","src":"30257:3:30"}],"functionName":{"name":"lt","nativeSrc":"30247:2:30","nodeType":"YulIdentifier","src":"30247:2:30"},"nativeSrc":"30247:14:30","nodeType":"YulFunctionCall","src":"30247:14:30"},"nativeSrc":"30240:120:30","nodeType":"YulForLoop","post":{"nativeSrc":"30262:26:30","nodeType":"YulBlock","src":"30262:26:30","statements":[{"nativeSrc":"30264:22:30","nodeType":"YulAssignment","src":"30264:22:30","value":{"arguments":[{"name":"start","nativeSrc":"30277:5:30","nodeType":"YulIdentifier","src":"30277:5:30"},{"kind":"number","nativeSrc":"30284:1:30","nodeType":"YulLiteral","src":"30284:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"30273:3:30","nodeType":"YulIdentifier","src":"30273:3:30"},"nativeSrc":"30273:13:30","nodeType":"YulFunctionCall","src":"30273:13:30"},"variableNames":[{"name":"start","nativeSrc":"30264:5:30","nodeType":"YulIdentifier","src":"30264:5:30"}]}]},"pre":{"nativeSrc":"30244:2:30","nodeType":"YulBlock","src":"30244:2:30","statements":[]},"src":"30240:120:30"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"30180:186:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"30218:5:30","nodeType":"YulTypedName","src":"30218:5:30","type":""},{"name":"end","nativeSrc":"30225:3:30","nodeType":"YulTypedName","src":"30225:3:30","type":""}],"src":"30180:186:30"},{"body":{"nativeSrc":"30451:464:30","nodeType":"YulBlock","src":"30451:464:30","statements":[{"body":{"nativeSrc":"30477:431:30","nodeType":"YulBlock","src":"30477:431:30","statements":[{"nativeSrc":"30491:54:30","nodeType":"YulVariableDeclaration","src":"30491:54:30","value":{"arguments":[{"name":"array","nativeSrc":"30539:5:30","nodeType":"YulIdentifier","src":"30539:5:30"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"30507:31:30","nodeType":"YulIdentifier","src":"30507:31:30"},"nativeSrc":"30507:38:30","nodeType":"YulFunctionCall","src":"30507:38:30"},"variables":[{"name":"dataArea","nativeSrc":"30495:8:30","nodeType":"YulTypedName","src":"30495:8:30","type":""}]},{"nativeSrc":"30558:63:30","nodeType":"YulVariableDeclaration","src":"30558:63:30","value":{"arguments":[{"name":"dataArea","nativeSrc":"30581:8:30","nodeType":"YulIdentifier","src":"30581:8:30"},{"arguments":[{"name":"startIndex","nativeSrc":"30609:10:30","nodeType":"YulIdentifier","src":"30609:10:30"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"30591:17:30","nodeType":"YulIdentifier","src":"30591:17:30"},"nativeSrc":"30591:29:30","nodeType":"YulFunctionCall","src":"30591:29:30"}],"functionName":{"name":"add","nativeSrc":"30577:3:30","nodeType":"YulIdentifier","src":"30577:3:30"},"nativeSrc":"30577:44:30","nodeType":"YulFunctionCall","src":"30577:44:30"},"variables":[{"name":"deleteStart","nativeSrc":"30562:11:30","nodeType":"YulTypedName","src":"30562:11:30","type":""}]},{"body":{"nativeSrc":"30778:27:30","nodeType":"YulBlock","src":"30778:27:30","statements":[{"nativeSrc":"30780:23:30","nodeType":"YulAssignment","src":"30780:23:30","value":{"name":"dataArea","nativeSrc":"30795:8:30","nodeType":"YulIdentifier","src":"30795:8:30"},"variableNames":[{"name":"deleteStart","nativeSrc":"30780:11:30","nodeType":"YulIdentifier","src":"30780:11:30"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"30762:10:30","nodeType":"YulIdentifier","src":"30762:10:30"},{"kind":"number","nativeSrc":"30774:2:30","nodeType":"YulLiteral","src":"30774:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"30759:2:30","nodeType":"YulIdentifier","src":"30759:2:30"},"nativeSrc":"30759:18:30","nodeType":"YulFunctionCall","src":"30759:18:30"},"nativeSrc":"30756:49:30","nodeType":"YulIf","src":"30756:49:30"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"30847:11:30","nodeType":"YulIdentifier","src":"30847:11:30"},{"arguments":[{"name":"dataArea","nativeSrc":"30864:8:30","nodeType":"YulIdentifier","src":"30864:8:30"},{"arguments":[{"name":"len","nativeSrc":"30892:3:30","nodeType":"YulIdentifier","src":"30892:3:30"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"30874:17:30","nodeType":"YulIdentifier","src":"30874:17:30"},"nativeSrc":"30874:22:30","nodeType":"YulFunctionCall","src":"30874:22:30"}],"functionName":{"name":"add","nativeSrc":"30860:3:30","nodeType":"YulIdentifier","src":"30860:3:30"},"nativeSrc":"30860:37:30","nodeType":"YulFunctionCall","src":"30860:37:30"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"30818:28:30","nodeType":"YulIdentifier","src":"30818:28:30"},"nativeSrc":"30818:80:30","nodeType":"YulFunctionCall","src":"30818:80:30"},"nativeSrc":"30818:80:30","nodeType":"YulExpressionStatement","src":"30818:80:30"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"30468:3:30","nodeType":"YulIdentifier","src":"30468:3:30"},{"kind":"number","nativeSrc":"30473:2:30","nodeType":"YulLiteral","src":"30473:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"30465:2:30","nodeType":"YulIdentifier","src":"30465:2:30"},"nativeSrc":"30465:11:30","nodeType":"YulFunctionCall","src":"30465:11:30"},"nativeSrc":"30462:446:30","nodeType":"YulIf","src":"30462:446:30"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"30372:543:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"30427:5:30","nodeType":"YulTypedName","src":"30427:5:30","type":""},{"name":"len","nativeSrc":"30434:3:30","nodeType":"YulTypedName","src":"30434:3:30","type":""},{"name":"startIndex","nativeSrc":"30439:10:30","nodeType":"YulTypedName","src":"30439:10:30","type":""}],"src":"30372:543:30"},{"body":{"nativeSrc":"30984:54:30","nodeType":"YulBlock","src":"30984:54:30","statements":[{"nativeSrc":"30994:37:30","nodeType":"YulAssignment","src":"30994:37:30","value":{"arguments":[{"name":"bits","nativeSrc":"31019:4:30","nodeType":"YulIdentifier","src":"31019:4:30"},{"name":"value","nativeSrc":"31025:5:30","nodeType":"YulIdentifier","src":"31025:5:30"}],"functionName":{"name":"shr","nativeSrc":"31015:3:30","nodeType":"YulIdentifier","src":"31015:3:30"},"nativeSrc":"31015:16:30","nodeType":"YulFunctionCall","src":"31015:16:30"},"variableNames":[{"name":"newValue","nativeSrc":"30994:8:30","nodeType":"YulIdentifier","src":"30994:8:30"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"30921:117:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"30959:4:30","nodeType":"YulTypedName","src":"30959:4:30","type":""},{"name":"value","nativeSrc":"30965:5:30","nodeType":"YulTypedName","src":"30965:5:30","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"30975:8:30","nodeType":"YulTypedName","src":"30975:8:30","type":""}],"src":"30921:117:30"},{"body":{"nativeSrc":"31095:118:30","nodeType":"YulBlock","src":"31095:118:30","statements":[{"nativeSrc":"31105:68:30","nodeType":"YulVariableDeclaration","src":"31105:68:30","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"31154:1:30","nodeType":"YulLiteral","src":"31154:1:30","type":"","value":"8"},{"name":"bytes","nativeSrc":"31157:5:30","nodeType":"YulIdentifier","src":"31157:5:30"}],"functionName":{"name":"mul","nativeSrc":"31150:3:30","nodeType":"YulIdentifier","src":"31150:3:30"},"nativeSrc":"31150:13:30","nodeType":"YulFunctionCall","src":"31150:13:30"},{"arguments":[{"kind":"number","nativeSrc":"31169:1:30","nodeType":"YulLiteral","src":"31169:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"31165:3:30","nodeType":"YulIdentifier","src":"31165:3:30"},"nativeSrc":"31165:6:30","nodeType":"YulFunctionCall","src":"31165:6:30"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"31121:28:30","nodeType":"YulIdentifier","src":"31121:28:30"},"nativeSrc":"31121:51:30","nodeType":"YulFunctionCall","src":"31121:51:30"}],"functionName":{"name":"not","nativeSrc":"31117:3:30","nodeType":"YulIdentifier","src":"31117:3:30"},"nativeSrc":"31117:56:30","nodeType":"YulFunctionCall","src":"31117:56:30"},"variables":[{"name":"mask","nativeSrc":"31109:4:30","nodeType":"YulTypedName","src":"31109:4:30","type":""}]},{"nativeSrc":"31182:25:30","nodeType":"YulAssignment","src":"31182:25:30","value":{"arguments":[{"name":"data","nativeSrc":"31196:4:30","nodeType":"YulIdentifier","src":"31196:4:30"},{"name":"mask","nativeSrc":"31202:4:30","nodeType":"YulIdentifier","src":"31202:4:30"}],"functionName":{"name":"and","nativeSrc":"31192:3:30","nodeType":"YulIdentifier","src":"31192:3:30"},"nativeSrc":"31192:15:30","nodeType":"YulFunctionCall","src":"31192:15:30"},"variableNames":[{"name":"result","nativeSrc":"31182:6:30","nodeType":"YulIdentifier","src":"31182:6:30"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"31044:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"31072:4:30","nodeType":"YulTypedName","src":"31072:4:30","type":""},{"name":"bytes","nativeSrc":"31078:5:30","nodeType":"YulTypedName","src":"31078:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"31088:6:30","nodeType":"YulTypedName","src":"31088:6:30","type":""}],"src":"31044:169:30"},{"body":{"nativeSrc":"31299:214:30","nodeType":"YulBlock","src":"31299:214:30","statements":[{"nativeSrc":"31432:37:30","nodeType":"YulAssignment","src":"31432:37:30","value":{"arguments":[{"name":"data","nativeSrc":"31459:4:30","nodeType":"YulIdentifier","src":"31459:4:30"},{"name":"len","nativeSrc":"31465:3:30","nodeType":"YulIdentifier","src":"31465:3:30"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"31440:18:30","nodeType":"YulIdentifier","src":"31440:18:30"},"nativeSrc":"31440:29:30","nodeType":"YulFunctionCall","src":"31440:29:30"},"variableNames":[{"name":"data","nativeSrc":"31432:4:30","nodeType":"YulIdentifier","src":"31432:4:30"}]},{"nativeSrc":"31478:29:30","nodeType":"YulAssignment","src":"31478:29:30","value":{"arguments":[{"name":"data","nativeSrc":"31489:4:30","nodeType":"YulIdentifier","src":"31489:4:30"},{"arguments":[{"kind":"number","nativeSrc":"31499:1:30","nodeType":"YulLiteral","src":"31499:1:30","type":"","value":"2"},{"name":"len","nativeSrc":"31502:3:30","nodeType":"YulIdentifier","src":"31502:3:30"}],"functionName":{"name":"mul","nativeSrc":"31495:3:30","nodeType":"YulIdentifier","src":"31495:3:30"},"nativeSrc":"31495:11:30","nodeType":"YulFunctionCall","src":"31495:11:30"}],"functionName":{"name":"or","nativeSrc":"31486:2:30","nodeType":"YulIdentifier","src":"31486:2:30"},"nativeSrc":"31486:21:30","nodeType":"YulFunctionCall","src":"31486:21:30"},"variableNames":[{"name":"used","nativeSrc":"31478:4:30","nodeType":"YulIdentifier","src":"31478:4:30"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"31218:295:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"31280:4:30","nodeType":"YulTypedName","src":"31280:4:30","type":""},{"name":"len","nativeSrc":"31286:3:30","nodeType":"YulTypedName","src":"31286:3:30","type":""}],"returnVariables":[{"name":"used","nativeSrc":"31294:4:30","nodeType":"YulTypedName","src":"31294:4:30","type":""}],"src":"31218:295:30"},{"body":{"nativeSrc":"31610:1303:30","nodeType":"YulBlock","src":"31610:1303:30","statements":[{"nativeSrc":"31621:51:30","nodeType":"YulVariableDeclaration","src":"31621:51:30","value":{"arguments":[{"name":"src","nativeSrc":"31668:3:30","nodeType":"YulIdentifier","src":"31668:3:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"31635:32:30","nodeType":"YulIdentifier","src":"31635:32:30"},"nativeSrc":"31635:37:30","nodeType":"YulFunctionCall","src":"31635:37:30"},"variables":[{"name":"newLen","nativeSrc":"31625:6:30","nodeType":"YulTypedName","src":"31625:6:30","type":""}]},{"body":{"nativeSrc":"31757:22:30","nodeType":"YulBlock","src":"31757:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"31759:16:30","nodeType":"YulIdentifier","src":"31759:16:30"},"nativeSrc":"31759:18:30","nodeType":"YulFunctionCall","src":"31759:18:30"},"nativeSrc":"31759:18:30","nodeType":"YulExpressionStatement","src":"31759:18:30"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"31729:6:30","nodeType":"YulIdentifier","src":"31729:6:30"},{"kind":"number","nativeSrc":"31737:18:30","nodeType":"YulLiteral","src":"31737:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"31726:2:30","nodeType":"YulIdentifier","src":"31726:2:30"},"nativeSrc":"31726:30:30","nodeType":"YulFunctionCall","src":"31726:30:30"},"nativeSrc":"31723:56:30","nodeType":"YulIf","src":"31723:56:30"},{"nativeSrc":"31789:52:30","nodeType":"YulVariableDeclaration","src":"31789:52:30","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"31835:4:30","nodeType":"YulIdentifier","src":"31835:4:30"}],"functionName":{"name":"sload","nativeSrc":"31829:5:30","nodeType":"YulIdentifier","src":"31829:5:30"},"nativeSrc":"31829:11:30","nodeType":"YulFunctionCall","src":"31829:11:30"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"31803:25:30","nodeType":"YulIdentifier","src":"31803:25:30"},"nativeSrc":"31803:38:30","nodeType":"YulFunctionCall","src":"31803:38:30"},"variables":[{"name":"oldLen","nativeSrc":"31793:6:30","nodeType":"YulTypedName","src":"31793:6:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"31934:4:30","nodeType":"YulIdentifier","src":"31934:4:30"},{"name":"oldLen","nativeSrc":"31940:6:30","nodeType":"YulIdentifier","src":"31940:6:30"},{"name":"newLen","nativeSrc":"31948:6:30","nodeType":"YulIdentifier","src":"31948:6:30"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"31888:45:30","nodeType":"YulIdentifier","src":"31888:45:30"},"nativeSrc":"31888:67:30","nodeType":"YulFunctionCall","src":"31888:67:30"},"nativeSrc":"31888:67:30","nodeType":"YulExpressionStatement","src":"31888:67:30"},{"nativeSrc":"31965:18:30","nodeType":"YulVariableDeclaration","src":"31965:18:30","value":{"kind":"number","nativeSrc":"31982:1:30","nodeType":"YulLiteral","src":"31982:1:30","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"31969:9:30","nodeType":"YulTypedName","src":"31969:9:30","type":""}]},{"nativeSrc":"31993:17:30","nodeType":"YulAssignment","src":"31993:17:30","value":{"kind":"number","nativeSrc":"32006:4:30","nodeType":"YulLiteral","src":"32006:4:30","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"31993:9:30","nodeType":"YulIdentifier","src":"31993:9:30"}]},{"cases":[{"body":{"nativeSrc":"32057:611:30","nodeType":"YulBlock","src":"32057:611:30","statements":[{"nativeSrc":"32071:37:30","nodeType":"YulVariableDeclaration","src":"32071:37:30","value":{"arguments":[{"name":"newLen","nativeSrc":"32090:6:30","nodeType":"YulIdentifier","src":"32090:6:30"},{"arguments":[{"kind":"number","nativeSrc":"32102:4:30","nodeType":"YulLiteral","src":"32102:4:30","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"32098:3:30","nodeType":"YulIdentifier","src":"32098:3:30"},"nativeSrc":"32098:9:30","nodeType":"YulFunctionCall","src":"32098:9:30"}],"functionName":{"name":"and","nativeSrc":"32086:3:30","nodeType":"YulIdentifier","src":"32086:3:30"},"nativeSrc":"32086:22:30","nodeType":"YulFunctionCall","src":"32086:22:30"},"variables":[{"name":"loopEnd","nativeSrc":"32075:7:30","nodeType":"YulTypedName","src":"32075:7:30","type":""}]},{"nativeSrc":"32122:51:30","nodeType":"YulVariableDeclaration","src":"32122:51:30","value":{"arguments":[{"name":"slot","nativeSrc":"32168:4:30","nodeType":"YulIdentifier","src":"32168:4:30"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"32136:31:30","nodeType":"YulIdentifier","src":"32136:31:30"},"nativeSrc":"32136:37:30","nodeType":"YulFunctionCall","src":"32136:37:30"},"variables":[{"name":"dstPtr","nativeSrc":"32126:6:30","nodeType":"YulTypedName","src":"32126:6:30","type":""}]},{"nativeSrc":"32186:10:30","nodeType":"YulVariableDeclaration","src":"32186:10:30","value":{"kind":"number","nativeSrc":"32195:1:30","nodeType":"YulLiteral","src":"32195:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"32190:1:30","nodeType":"YulTypedName","src":"32190:1:30","type":""}]},{"body":{"nativeSrc":"32254:163:30","nodeType":"YulBlock","src":"32254:163:30","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"32279:6:30","nodeType":"YulIdentifier","src":"32279:6:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"32297:3:30","nodeType":"YulIdentifier","src":"32297:3:30"},{"name":"srcOffset","nativeSrc":"32302:9:30","nodeType":"YulIdentifier","src":"32302:9:30"}],"functionName":{"name":"add","nativeSrc":"32293:3:30","nodeType":"YulIdentifier","src":"32293:3:30"},"nativeSrc":"32293:19:30","nodeType":"YulFunctionCall","src":"32293:19:30"}],"functionName":{"name":"mload","nativeSrc":"32287:5:30","nodeType":"YulIdentifier","src":"32287:5:30"},"nativeSrc":"32287:26:30","nodeType":"YulFunctionCall","src":"32287:26:30"}],"functionName":{"name":"sstore","nativeSrc":"32272:6:30","nodeType":"YulIdentifier","src":"32272:6:30"},"nativeSrc":"32272:42:30","nodeType":"YulFunctionCall","src":"32272:42:30"},"nativeSrc":"32272:42:30","nodeType":"YulExpressionStatement","src":"32272:42:30"},{"nativeSrc":"32331:24:30","nodeType":"YulAssignment","src":"32331:24:30","value":{"arguments":[{"name":"dstPtr","nativeSrc":"32345:6:30","nodeType":"YulIdentifier","src":"32345:6:30"},{"kind":"number","nativeSrc":"32353:1:30","nodeType":"YulLiteral","src":"32353:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"32341:3:30","nodeType":"YulIdentifier","src":"32341:3:30"},"nativeSrc":"32341:14:30","nodeType":"YulFunctionCall","src":"32341:14:30"},"variableNames":[{"name":"dstPtr","nativeSrc":"32331:6:30","nodeType":"YulIdentifier","src":"32331:6:30"}]},{"nativeSrc":"32372:31:30","nodeType":"YulAssignment","src":"32372:31:30","value":{"arguments":[{"name":"srcOffset","nativeSrc":"32389:9:30","nodeType":"YulIdentifier","src":"32389:9:30"},{"kind":"number","nativeSrc":"32400:2:30","nodeType":"YulLiteral","src":"32400:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32385:3:30","nodeType":"YulIdentifier","src":"32385:3:30"},"nativeSrc":"32385:18:30","nodeType":"YulFunctionCall","src":"32385:18:30"},"variableNames":[{"name":"srcOffset","nativeSrc":"32372:9:30","nodeType":"YulIdentifier","src":"32372:9:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"32220:1:30","nodeType":"YulIdentifier","src":"32220:1:30"},{"name":"loopEnd","nativeSrc":"32223:7:30","nodeType":"YulIdentifier","src":"32223:7:30"}],"functionName":{"name":"lt","nativeSrc":"32217:2:30","nodeType":"YulIdentifier","src":"32217:2:30"},"nativeSrc":"32217:14:30","nodeType":"YulFunctionCall","src":"32217:14:30"},"nativeSrc":"32209:208:30","nodeType":"YulForLoop","post":{"nativeSrc":"32232:21:30","nodeType":"YulBlock","src":"32232:21:30","statements":[{"nativeSrc":"32234:17:30","nodeType":"YulAssignment","src":"32234:17:30","value":{"arguments":[{"name":"i","nativeSrc":"32243:1:30","nodeType":"YulIdentifier","src":"32243:1:30"},{"kind":"number","nativeSrc":"32246:4:30","nodeType":"YulLiteral","src":"32246:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"32239:3:30","nodeType":"YulIdentifier","src":"32239:3:30"},"nativeSrc":"32239:12:30","nodeType":"YulFunctionCall","src":"32239:12:30"},"variableNames":[{"name":"i","nativeSrc":"32234:1:30","nodeType":"YulIdentifier","src":"32234:1:30"}]}]},"pre":{"nativeSrc":"32213:3:30","nodeType":"YulBlock","src":"32213:3:30","statements":[]},"src":"32209:208:30"},{"body":{"nativeSrc":"32453:156:30","nodeType":"YulBlock","src":"32453:156:30","statements":[{"nativeSrc":"32471:43:30","nodeType":"YulVariableDeclaration","src":"32471:43:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"32498:3:30","nodeType":"YulIdentifier","src":"32498:3:30"},{"name":"srcOffset","nativeSrc":"32503:9:30","nodeType":"YulIdentifier","src":"32503:9:30"}],"functionName":{"name":"add","nativeSrc":"32494:3:30","nodeType":"YulIdentifier","src":"32494:3:30"},"nativeSrc":"32494:19:30","nodeType":"YulFunctionCall","src":"32494:19:30"}],"functionName":{"name":"mload","nativeSrc":"32488:5:30","nodeType":"YulIdentifier","src":"32488:5:30"},"nativeSrc":"32488:26:30","nodeType":"YulFunctionCall","src":"32488:26:30"},"variables":[{"name":"lastValue","nativeSrc":"32475:9:30","nodeType":"YulTypedName","src":"32475:9:30","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"32538:6:30","nodeType":"YulIdentifier","src":"32538:6:30"},{"arguments":[{"name":"lastValue","nativeSrc":"32565:9:30","nodeType":"YulIdentifier","src":"32565:9:30"},{"arguments":[{"name":"newLen","nativeSrc":"32580:6:30","nodeType":"YulIdentifier","src":"32580:6:30"},{"kind":"number","nativeSrc":"32588:4:30","nodeType":"YulLiteral","src":"32588:4:30","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"32576:3:30","nodeType":"YulIdentifier","src":"32576:3:30"},"nativeSrc":"32576:17:30","nodeType":"YulFunctionCall","src":"32576:17:30"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"32546:18:30","nodeType":"YulIdentifier","src":"32546:18:30"},"nativeSrc":"32546:48:30","nodeType":"YulFunctionCall","src":"32546:48:30"}],"functionName":{"name":"sstore","nativeSrc":"32531:6:30","nodeType":"YulIdentifier","src":"32531:6:30"},"nativeSrc":"32531:64:30","nodeType":"YulFunctionCall","src":"32531:64:30"},"nativeSrc":"32531:64:30","nodeType":"YulExpressionStatement","src":"32531:64:30"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"32436:7:30","nodeType":"YulIdentifier","src":"32436:7:30"},{"name":"newLen","nativeSrc":"32445:6:30","nodeType":"YulIdentifier","src":"32445:6:30"}],"functionName":{"name":"lt","nativeSrc":"32433:2:30","nodeType":"YulIdentifier","src":"32433:2:30"},"nativeSrc":"32433:19:30","nodeType":"YulFunctionCall","src":"32433:19:30"},"nativeSrc":"32430:179:30","nodeType":"YulIf","src":"32430:179:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"32629:4:30","nodeType":"YulIdentifier","src":"32629:4:30"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"32643:6:30","nodeType":"YulIdentifier","src":"32643:6:30"},{"kind":"number","nativeSrc":"32651:1:30","nodeType":"YulLiteral","src":"32651:1:30","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"32639:3:30","nodeType":"YulIdentifier","src":"32639:3:30"},"nativeSrc":"32639:14:30","nodeType":"YulFunctionCall","src":"32639:14:30"},{"kind":"number","nativeSrc":"32655:1:30","nodeType":"YulLiteral","src":"32655:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"32635:3:30","nodeType":"YulIdentifier","src":"32635:3:30"},"nativeSrc":"32635:22:30","nodeType":"YulFunctionCall","src":"32635:22:30"}],"functionName":{"name":"sstore","nativeSrc":"32622:6:30","nodeType":"YulIdentifier","src":"32622:6:30"},"nativeSrc":"32622:36:30","nodeType":"YulFunctionCall","src":"32622:36:30"},"nativeSrc":"32622:36:30","nodeType":"YulExpressionStatement","src":"32622:36:30"}]},"nativeSrc":"32050:618:30","nodeType":"YulCase","src":"32050:618:30","value":{"kind":"number","nativeSrc":"32055:1:30","nodeType":"YulLiteral","src":"32055:1:30","type":"","value":"1"}},{"body":{"nativeSrc":"32685:222:30","nodeType":"YulBlock","src":"32685:222:30","statements":[{"nativeSrc":"32699:14:30","nodeType":"YulVariableDeclaration","src":"32699:14:30","value":{"kind":"number","nativeSrc":"32712:1:30","nodeType":"YulLiteral","src":"32712:1:30","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"32703:5:30","nodeType":"YulTypedName","src":"32703:5:30","type":""}]},{"body":{"nativeSrc":"32736:67:30","nodeType":"YulBlock","src":"32736:67:30","statements":[{"nativeSrc":"32754:35:30","nodeType":"YulAssignment","src":"32754:35:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"32773:3:30","nodeType":"YulIdentifier","src":"32773:3:30"},{"name":"srcOffset","nativeSrc":"32778:9:30","nodeType":"YulIdentifier","src":"32778:9:30"}],"functionName":{"name":"add","nativeSrc":"32769:3:30","nodeType":"YulIdentifier","src":"32769:3:30"},"nativeSrc":"32769:19:30","nodeType":"YulFunctionCall","src":"32769:19:30"}],"functionName":{"name":"mload","nativeSrc":"32763:5:30","nodeType":"YulIdentifier","src":"32763:5:30"},"nativeSrc":"32763:26:30","nodeType":"YulFunctionCall","src":"32763:26:30"},"variableNames":[{"name":"value","nativeSrc":"32754:5:30","nodeType":"YulIdentifier","src":"32754:5:30"}]}]},"condition":{"name":"newLen","nativeSrc":"32729:6:30","nodeType":"YulIdentifier","src":"32729:6:30"},"nativeSrc":"32726:77:30","nodeType":"YulIf","src":"32726:77:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"32823:4:30","nodeType":"YulIdentifier","src":"32823:4:30"},{"arguments":[{"name":"value","nativeSrc":"32882:5:30","nodeType":"YulIdentifier","src":"32882:5:30"},{"name":"newLen","nativeSrc":"32889:6:30","nodeType":"YulIdentifier","src":"32889:6:30"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"32829:52:30","nodeType":"YulIdentifier","src":"32829:52:30"},"nativeSrc":"32829:67:30","nodeType":"YulFunctionCall","src":"32829:67:30"}],"functionName":{"name":"sstore","nativeSrc":"32816:6:30","nodeType":"YulIdentifier","src":"32816:6:30"},"nativeSrc":"32816:81:30","nodeType":"YulFunctionCall","src":"32816:81:30"},"nativeSrc":"32816:81:30","nodeType":"YulExpressionStatement","src":"32816:81:30"}]},"nativeSrc":"32677:230:30","nodeType":"YulCase","src":"32677:230:30","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"32030:6:30","nodeType":"YulIdentifier","src":"32030:6:30"},{"kind":"number","nativeSrc":"32038:2:30","nodeType":"YulLiteral","src":"32038:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"32027:2:30","nodeType":"YulIdentifier","src":"32027:2:30"},"nativeSrc":"32027:14:30","nodeType":"YulFunctionCall","src":"32027:14:30"},"nativeSrc":"32020:887:30","nodeType":"YulSwitch","src":"32020:887:30"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"31518:1395:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"31599:4:30","nodeType":"YulTypedName","src":"31599:4:30","type":""},{"name":"src","nativeSrc":"31605:3:30","nodeType":"YulTypedName","src":"31605:3:30","type":""}],"src":"31518:1395:30"},{"body":{"nativeSrc":"32972:87:30","nodeType":"YulBlock","src":"32972:87:30","statements":[{"nativeSrc":"32982:11:30","nodeType":"YulAssignment","src":"32982:11:30","value":{"name":"ptr","nativeSrc":"32990:3:30","nodeType":"YulIdentifier","src":"32990:3:30"},"variableNames":[{"name":"data","nativeSrc":"32982:4:30","nodeType":"YulIdentifier","src":"32982:4:30"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"33010:1:30","nodeType":"YulLiteral","src":"33010:1:30","type":"","value":"0"},{"name":"ptr","nativeSrc":"33013:3:30","nodeType":"YulIdentifier","src":"33013:3:30"}],"functionName":{"name":"mstore","nativeSrc":"33003:6:30","nodeType":"YulIdentifier","src":"33003:6:30"},"nativeSrc":"33003:14:30","nodeType":"YulFunctionCall","src":"33003:14:30"},"nativeSrc":"33003:14:30","nodeType":"YulExpressionStatement","src":"33003:14:30"},{"nativeSrc":"33026:26:30","nodeType":"YulAssignment","src":"33026:26:30","value":{"arguments":[{"kind":"number","nativeSrc":"33044:1:30","nodeType":"YulLiteral","src":"33044:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"33047:4:30","nodeType":"YulLiteral","src":"33047:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"33034:9:30","nodeType":"YulIdentifier","src":"33034:9:30"},"nativeSrc":"33034:18:30","nodeType":"YulFunctionCall","src":"33034:18:30"},"variableNames":[{"name":"data","nativeSrc":"33026:4:30","nodeType":"YulIdentifier","src":"33026:4:30"}]}]},"name":"array_dataslot_t_bytes_storage","nativeSrc":"32919:140:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"32959:3:30","nodeType":"YulTypedName","src":"32959:3:30","type":""}],"returnVariables":[{"name":"data","nativeSrc":"32967:4:30","nodeType":"YulTypedName","src":"32967:4:30","type":""}],"src":"32919:140:30"},{"body":{"nativeSrc":"33143:463:30","nodeType":"YulBlock","src":"33143:463:30","statements":[{"body":{"nativeSrc":"33169:430:30","nodeType":"YulBlock","src":"33169:430:30","statements":[{"nativeSrc":"33183:53:30","nodeType":"YulVariableDeclaration","src":"33183:53:30","value":{"arguments":[{"name":"array","nativeSrc":"33230:5:30","nodeType":"YulIdentifier","src":"33230:5:30"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nativeSrc":"33199:30:30","nodeType":"YulIdentifier","src":"33199:30:30"},"nativeSrc":"33199:37:30","nodeType":"YulFunctionCall","src":"33199:37:30"},"variables":[{"name":"dataArea","nativeSrc":"33187:8:30","nodeType":"YulTypedName","src":"33187:8:30","type":""}]},{"nativeSrc":"33249:63:30","nodeType":"YulVariableDeclaration","src":"33249:63:30","value":{"arguments":[{"name":"dataArea","nativeSrc":"33272:8:30","nodeType":"YulIdentifier","src":"33272:8:30"},{"arguments":[{"name":"startIndex","nativeSrc":"33300:10:30","nodeType":"YulIdentifier","src":"33300:10:30"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"33282:17:30","nodeType":"YulIdentifier","src":"33282:17:30"},"nativeSrc":"33282:29:30","nodeType":"YulFunctionCall","src":"33282:29:30"}],"functionName":{"name":"add","nativeSrc":"33268:3:30","nodeType":"YulIdentifier","src":"33268:3:30"},"nativeSrc":"33268:44:30","nodeType":"YulFunctionCall","src":"33268:44:30"},"variables":[{"name":"deleteStart","nativeSrc":"33253:11:30","nodeType":"YulTypedName","src":"33253:11:30","type":""}]},{"body":{"nativeSrc":"33469:27:30","nodeType":"YulBlock","src":"33469:27:30","statements":[{"nativeSrc":"33471:23:30","nodeType":"YulAssignment","src":"33471:23:30","value":{"name":"dataArea","nativeSrc":"33486:8:30","nodeType":"YulIdentifier","src":"33486:8:30"},"variableNames":[{"name":"deleteStart","nativeSrc":"33471:11:30","nodeType":"YulIdentifier","src":"33471:11:30"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"33453:10:30","nodeType":"YulIdentifier","src":"33453:10:30"},{"kind":"number","nativeSrc":"33465:2:30","nodeType":"YulLiteral","src":"33465:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"33450:2:30","nodeType":"YulIdentifier","src":"33450:2:30"},"nativeSrc":"33450:18:30","nodeType":"YulFunctionCall","src":"33450:18:30"},"nativeSrc":"33447:49:30","nodeType":"YulIf","src":"33447:49:30"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"33538:11:30","nodeType":"YulIdentifier","src":"33538:11:30"},{"arguments":[{"name":"dataArea","nativeSrc":"33555:8:30","nodeType":"YulIdentifier","src":"33555:8:30"},{"arguments":[{"name":"len","nativeSrc":"33583:3:30","nodeType":"YulIdentifier","src":"33583:3:30"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"33565:17:30","nodeType":"YulIdentifier","src":"33565:17:30"},"nativeSrc":"33565:22:30","nodeType":"YulFunctionCall","src":"33565:22:30"}],"functionName":{"name":"add","nativeSrc":"33551:3:30","nodeType":"YulIdentifier","src":"33551:3:30"},"nativeSrc":"33551:37:30","nodeType":"YulFunctionCall","src":"33551:37:30"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"33509:28:30","nodeType":"YulIdentifier","src":"33509:28:30"},"nativeSrc":"33509:80:30","nodeType":"YulFunctionCall","src":"33509:80:30"},"nativeSrc":"33509:80:30","nodeType":"YulExpressionStatement","src":"33509:80:30"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"33160:3:30","nodeType":"YulIdentifier","src":"33160:3:30"},{"kind":"number","nativeSrc":"33165:2:30","nodeType":"YulLiteral","src":"33165:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"33157:2:30","nodeType":"YulIdentifier","src":"33157:2:30"},"nativeSrc":"33157:11:30","nodeType":"YulFunctionCall","src":"33157:11:30"},"nativeSrc":"33154:445:30","nodeType":"YulIf","src":"33154:445:30"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nativeSrc":"33065:541:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"33119:5:30","nodeType":"YulTypedName","src":"33119:5:30","type":""},{"name":"len","nativeSrc":"33126:3:30","nodeType":"YulTypedName","src":"33126:3:30","type":""},{"name":"startIndex","nativeSrc":"33131:10:30","nodeType":"YulTypedName","src":"33131:10:30","type":""}],"src":"33065:541:30"},{"body":{"nativeSrc":"33702:1300:30","nodeType":"YulBlock","src":"33702:1300:30","statements":[{"nativeSrc":"33713:50:30","nodeType":"YulVariableDeclaration","src":"33713:50:30","value":{"arguments":[{"name":"src","nativeSrc":"33759:3:30","nodeType":"YulIdentifier","src":"33759:3:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"33727:31:30","nodeType":"YulIdentifier","src":"33727:31:30"},"nativeSrc":"33727:36:30","nodeType":"YulFunctionCall","src":"33727:36:30"},"variables":[{"name":"newLen","nativeSrc":"33717:6:30","nodeType":"YulTypedName","src":"33717:6:30","type":""}]},{"body":{"nativeSrc":"33848:22:30","nodeType":"YulBlock","src":"33848:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"33850:16:30","nodeType":"YulIdentifier","src":"33850:16:30"},"nativeSrc":"33850:18:30","nodeType":"YulFunctionCall","src":"33850:18:30"},"nativeSrc":"33850:18:30","nodeType":"YulExpressionStatement","src":"33850:18:30"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"33820:6:30","nodeType":"YulIdentifier","src":"33820:6:30"},{"kind":"number","nativeSrc":"33828:18:30","nodeType":"YulLiteral","src":"33828:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"33817:2:30","nodeType":"YulIdentifier","src":"33817:2:30"},"nativeSrc":"33817:30:30","nodeType":"YulFunctionCall","src":"33817:30:30"},"nativeSrc":"33814:56:30","nodeType":"YulIf","src":"33814:56:30"},{"nativeSrc":"33880:52:30","nodeType":"YulVariableDeclaration","src":"33880:52:30","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"33926:4:30","nodeType":"YulIdentifier","src":"33926:4:30"}],"functionName":{"name":"sload","nativeSrc":"33920:5:30","nodeType":"YulIdentifier","src":"33920:5:30"},"nativeSrc":"33920:11:30","nodeType":"YulFunctionCall","src":"33920:11:30"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"33894:25:30","nodeType":"YulIdentifier","src":"33894:25:30"},"nativeSrc":"33894:38:30","nodeType":"YulFunctionCall","src":"33894:38:30"},"variables":[{"name":"oldLen","nativeSrc":"33884:6:30","nodeType":"YulTypedName","src":"33884:6:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"34024:4:30","nodeType":"YulIdentifier","src":"34024:4:30"},{"name":"oldLen","nativeSrc":"34030:6:30","nodeType":"YulIdentifier","src":"34030:6:30"},{"name":"newLen","nativeSrc":"34038:6:30","nodeType":"YulIdentifier","src":"34038:6:30"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nativeSrc":"33979:44:30","nodeType":"YulIdentifier","src":"33979:44:30"},"nativeSrc":"33979:66:30","nodeType":"YulFunctionCall","src":"33979:66:30"},"nativeSrc":"33979:66:30","nodeType":"YulExpressionStatement","src":"33979:66:30"},{"nativeSrc":"34055:18:30","nodeType":"YulVariableDeclaration","src":"34055:18:30","value":{"kind":"number","nativeSrc":"34072:1:30","nodeType":"YulLiteral","src":"34072:1:30","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"34059:9:30","nodeType":"YulTypedName","src":"34059:9:30","type":""}]},{"nativeSrc":"34083:17:30","nodeType":"YulAssignment","src":"34083:17:30","value":{"kind":"number","nativeSrc":"34096:4:30","nodeType":"YulLiteral","src":"34096:4:30","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"34083:9:30","nodeType":"YulIdentifier","src":"34083:9:30"}]},{"cases":[{"body":{"nativeSrc":"34147:610:30","nodeType":"YulBlock","src":"34147:610:30","statements":[{"nativeSrc":"34161:37:30","nodeType":"YulVariableDeclaration","src":"34161:37:30","value":{"arguments":[{"name":"newLen","nativeSrc":"34180:6:30","nodeType":"YulIdentifier","src":"34180:6:30"},{"arguments":[{"kind":"number","nativeSrc":"34192:4:30","nodeType":"YulLiteral","src":"34192:4:30","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"34188:3:30","nodeType":"YulIdentifier","src":"34188:3:30"},"nativeSrc":"34188:9:30","nodeType":"YulFunctionCall","src":"34188:9:30"}],"functionName":{"name":"and","nativeSrc":"34176:3:30","nodeType":"YulIdentifier","src":"34176:3:30"},"nativeSrc":"34176:22:30","nodeType":"YulFunctionCall","src":"34176:22:30"},"variables":[{"name":"loopEnd","nativeSrc":"34165:7:30","nodeType":"YulTypedName","src":"34165:7:30","type":""}]},{"nativeSrc":"34212:50:30","nodeType":"YulVariableDeclaration","src":"34212:50:30","value":{"arguments":[{"name":"slot","nativeSrc":"34257:4:30","nodeType":"YulIdentifier","src":"34257:4:30"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nativeSrc":"34226:30:30","nodeType":"YulIdentifier","src":"34226:30:30"},"nativeSrc":"34226:36:30","nodeType":"YulFunctionCall","src":"34226:36:30"},"variables":[{"name":"dstPtr","nativeSrc":"34216:6:30","nodeType":"YulTypedName","src":"34216:6:30","type":""}]},{"nativeSrc":"34275:10:30","nodeType":"YulVariableDeclaration","src":"34275:10:30","value":{"kind":"number","nativeSrc":"34284:1:30","nodeType":"YulLiteral","src":"34284:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"34279:1:30","nodeType":"YulTypedName","src":"34279:1:30","type":""}]},{"body":{"nativeSrc":"34343:163:30","nodeType":"YulBlock","src":"34343:163:30","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"34368:6:30","nodeType":"YulIdentifier","src":"34368:6:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"34386:3:30","nodeType":"YulIdentifier","src":"34386:3:30"},{"name":"srcOffset","nativeSrc":"34391:9:30","nodeType":"YulIdentifier","src":"34391:9:30"}],"functionName":{"name":"add","nativeSrc":"34382:3:30","nodeType":"YulIdentifier","src":"34382:3:30"},"nativeSrc":"34382:19:30","nodeType":"YulFunctionCall","src":"34382:19:30"}],"functionName":{"name":"mload","nativeSrc":"34376:5:30","nodeType":"YulIdentifier","src":"34376:5:30"},"nativeSrc":"34376:26:30","nodeType":"YulFunctionCall","src":"34376:26:30"}],"functionName":{"name":"sstore","nativeSrc":"34361:6:30","nodeType":"YulIdentifier","src":"34361:6:30"},"nativeSrc":"34361:42:30","nodeType":"YulFunctionCall","src":"34361:42:30"},"nativeSrc":"34361:42:30","nodeType":"YulExpressionStatement","src":"34361:42:30"},{"nativeSrc":"34420:24:30","nodeType":"YulAssignment","src":"34420:24:30","value":{"arguments":[{"name":"dstPtr","nativeSrc":"34434:6:30","nodeType":"YulIdentifier","src":"34434:6:30"},{"kind":"number","nativeSrc":"34442:1:30","nodeType":"YulLiteral","src":"34442:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"34430:3:30","nodeType":"YulIdentifier","src":"34430:3:30"},"nativeSrc":"34430:14:30","nodeType":"YulFunctionCall","src":"34430:14:30"},"variableNames":[{"name":"dstPtr","nativeSrc":"34420:6:30","nodeType":"YulIdentifier","src":"34420:6:30"}]},{"nativeSrc":"34461:31:30","nodeType":"YulAssignment","src":"34461:31:30","value":{"arguments":[{"name":"srcOffset","nativeSrc":"34478:9:30","nodeType":"YulIdentifier","src":"34478:9:30"},{"kind":"number","nativeSrc":"34489:2:30","nodeType":"YulLiteral","src":"34489:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34474:3:30","nodeType":"YulIdentifier","src":"34474:3:30"},"nativeSrc":"34474:18:30","nodeType":"YulFunctionCall","src":"34474:18:30"},"variableNames":[{"name":"srcOffset","nativeSrc":"34461:9:30","nodeType":"YulIdentifier","src":"34461:9:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"34309:1:30","nodeType":"YulIdentifier","src":"34309:1:30"},{"name":"loopEnd","nativeSrc":"34312:7:30","nodeType":"YulIdentifier","src":"34312:7:30"}],"functionName":{"name":"lt","nativeSrc":"34306:2:30","nodeType":"YulIdentifier","src":"34306:2:30"},"nativeSrc":"34306:14:30","nodeType":"YulFunctionCall","src":"34306:14:30"},"nativeSrc":"34298:208:30","nodeType":"YulForLoop","post":{"nativeSrc":"34321:21:30","nodeType":"YulBlock","src":"34321:21:30","statements":[{"nativeSrc":"34323:17:30","nodeType":"YulAssignment","src":"34323:17:30","value":{"arguments":[{"name":"i","nativeSrc":"34332:1:30","nodeType":"YulIdentifier","src":"34332:1:30"},{"kind":"number","nativeSrc":"34335:4:30","nodeType":"YulLiteral","src":"34335:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"34328:3:30","nodeType":"YulIdentifier","src":"34328:3:30"},"nativeSrc":"34328:12:30","nodeType":"YulFunctionCall","src":"34328:12:30"},"variableNames":[{"name":"i","nativeSrc":"34323:1:30","nodeType":"YulIdentifier","src":"34323:1:30"}]}]},"pre":{"nativeSrc":"34302:3:30","nodeType":"YulBlock","src":"34302:3:30","statements":[]},"src":"34298:208:30"},{"body":{"nativeSrc":"34542:156:30","nodeType":"YulBlock","src":"34542:156:30","statements":[{"nativeSrc":"34560:43:30","nodeType":"YulVariableDeclaration","src":"34560:43:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"34587:3:30","nodeType":"YulIdentifier","src":"34587:3:30"},{"name":"srcOffset","nativeSrc":"34592:9:30","nodeType":"YulIdentifier","src":"34592:9:30"}],"functionName":{"name":"add","nativeSrc":"34583:3:30","nodeType":"YulIdentifier","src":"34583:3:30"},"nativeSrc":"34583:19:30","nodeType":"YulFunctionCall","src":"34583:19:30"}],"functionName":{"name":"mload","nativeSrc":"34577:5:30","nodeType":"YulIdentifier","src":"34577:5:30"},"nativeSrc":"34577:26:30","nodeType":"YulFunctionCall","src":"34577:26:30"},"variables":[{"name":"lastValue","nativeSrc":"34564:9:30","nodeType":"YulTypedName","src":"34564:9:30","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"34627:6:30","nodeType":"YulIdentifier","src":"34627:6:30"},{"arguments":[{"name":"lastValue","nativeSrc":"34654:9:30","nodeType":"YulIdentifier","src":"34654:9:30"},{"arguments":[{"name":"newLen","nativeSrc":"34669:6:30","nodeType":"YulIdentifier","src":"34669:6:30"},{"kind":"number","nativeSrc":"34677:4:30","nodeType":"YulLiteral","src":"34677:4:30","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"34665:3:30","nodeType":"YulIdentifier","src":"34665:3:30"},"nativeSrc":"34665:17:30","nodeType":"YulFunctionCall","src":"34665:17:30"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"34635:18:30","nodeType":"YulIdentifier","src":"34635:18:30"},"nativeSrc":"34635:48:30","nodeType":"YulFunctionCall","src":"34635:48:30"}],"functionName":{"name":"sstore","nativeSrc":"34620:6:30","nodeType":"YulIdentifier","src":"34620:6:30"},"nativeSrc":"34620:64:30","nodeType":"YulFunctionCall","src":"34620:64:30"},"nativeSrc":"34620:64:30","nodeType":"YulExpressionStatement","src":"34620:64:30"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"34525:7:30","nodeType":"YulIdentifier","src":"34525:7:30"},{"name":"newLen","nativeSrc":"34534:6:30","nodeType":"YulIdentifier","src":"34534:6:30"}],"functionName":{"name":"lt","nativeSrc":"34522:2:30","nodeType":"YulIdentifier","src":"34522:2:30"},"nativeSrc":"34522:19:30","nodeType":"YulFunctionCall","src":"34522:19:30"},"nativeSrc":"34519:179:30","nodeType":"YulIf","src":"34519:179:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"34718:4:30","nodeType":"YulIdentifier","src":"34718:4:30"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"34732:6:30","nodeType":"YulIdentifier","src":"34732:6:30"},{"kind":"number","nativeSrc":"34740:1:30","nodeType":"YulLiteral","src":"34740:1:30","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"34728:3:30","nodeType":"YulIdentifier","src":"34728:3:30"},"nativeSrc":"34728:14:30","nodeType":"YulFunctionCall","src":"34728:14:30"},{"kind":"number","nativeSrc":"34744:1:30","nodeType":"YulLiteral","src":"34744:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"34724:3:30","nodeType":"YulIdentifier","src":"34724:3:30"},"nativeSrc":"34724:22:30","nodeType":"YulFunctionCall","src":"34724:22:30"}],"functionName":{"name":"sstore","nativeSrc":"34711:6:30","nodeType":"YulIdentifier","src":"34711:6:30"},"nativeSrc":"34711:36:30","nodeType":"YulFunctionCall","src":"34711:36:30"},"nativeSrc":"34711:36:30","nodeType":"YulExpressionStatement","src":"34711:36:30"}]},"nativeSrc":"34140:617:30","nodeType":"YulCase","src":"34140:617:30","value":{"kind":"number","nativeSrc":"34145:1:30","nodeType":"YulLiteral","src":"34145:1:30","type":"","value":"1"}},{"body":{"nativeSrc":"34774:222:30","nodeType":"YulBlock","src":"34774:222:30","statements":[{"nativeSrc":"34788:14:30","nodeType":"YulVariableDeclaration","src":"34788:14:30","value":{"kind":"number","nativeSrc":"34801:1:30","nodeType":"YulLiteral","src":"34801:1:30","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"34792:5:30","nodeType":"YulTypedName","src":"34792:5:30","type":""}]},{"body":{"nativeSrc":"34825:67:30","nodeType":"YulBlock","src":"34825:67:30","statements":[{"nativeSrc":"34843:35:30","nodeType":"YulAssignment","src":"34843:35:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"34862:3:30","nodeType":"YulIdentifier","src":"34862:3:30"},{"name":"srcOffset","nativeSrc":"34867:9:30","nodeType":"YulIdentifier","src":"34867:9:30"}],"functionName":{"name":"add","nativeSrc":"34858:3:30","nodeType":"YulIdentifier","src":"34858:3:30"},"nativeSrc":"34858:19:30","nodeType":"YulFunctionCall","src":"34858:19:30"}],"functionName":{"name":"mload","nativeSrc":"34852:5:30","nodeType":"YulIdentifier","src":"34852:5:30"},"nativeSrc":"34852:26:30","nodeType":"YulFunctionCall","src":"34852:26:30"},"variableNames":[{"name":"value","nativeSrc":"34843:5:30","nodeType":"YulIdentifier","src":"34843:5:30"}]}]},"condition":{"name":"newLen","nativeSrc":"34818:6:30","nodeType":"YulIdentifier","src":"34818:6:30"},"nativeSrc":"34815:77:30","nodeType":"YulIf","src":"34815:77:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"34912:4:30","nodeType":"YulIdentifier","src":"34912:4:30"},{"arguments":[{"name":"value","nativeSrc":"34971:5:30","nodeType":"YulIdentifier","src":"34971:5:30"},{"name":"newLen","nativeSrc":"34978:6:30","nodeType":"YulIdentifier","src":"34978:6:30"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"34918:52:30","nodeType":"YulIdentifier","src":"34918:52:30"},"nativeSrc":"34918:67:30","nodeType":"YulFunctionCall","src":"34918:67:30"}],"functionName":{"name":"sstore","nativeSrc":"34905:6:30","nodeType":"YulIdentifier","src":"34905:6:30"},"nativeSrc":"34905:81:30","nodeType":"YulFunctionCall","src":"34905:81:30"},"nativeSrc":"34905:81:30","nodeType":"YulExpressionStatement","src":"34905:81:30"}]},"nativeSrc":"34766:230:30","nodeType":"YulCase","src":"34766:230:30","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"34120:6:30","nodeType":"YulIdentifier","src":"34120:6:30"},{"kind":"number","nativeSrc":"34128:2:30","nodeType":"YulLiteral","src":"34128:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"34117:2:30","nodeType":"YulIdentifier","src":"34117:2:30"},"nativeSrc":"34117:14:30","nodeType":"YulFunctionCall","src":"34117:14:30"},"nativeSrc":"34110:886:30","nodeType":"YulSwitch","src":"34110:886:30"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nativeSrc":"33612:1390:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"33691:4:30","nodeType":"YulTypedName","src":"33691:4:30","type":""},{"name":"src","nativeSrc":"33697:3:30","nodeType":"YulTypedName","src":"33697:3:30","type":""}],"src":"33612:1390:30"},{"body":{"nativeSrc":"35114:73:30","nodeType":"YulBlock","src":"35114:73:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"35136:6:30","nodeType":"YulIdentifier","src":"35136:6:30"},{"kind":"number","nativeSrc":"35144:1:30","nodeType":"YulLiteral","src":"35144:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35132:3:30","nodeType":"YulIdentifier","src":"35132:3:30"},"nativeSrc":"35132:14:30","nodeType":"YulFunctionCall","src":"35132:14:30"},{"hexValue":"41646472657373206973206e6f7420616e20696e737469747574696f6e","kind":"string","nativeSrc":"35148:31:30","nodeType":"YulLiteral","src":"35148:31:30","type":"","value":"Address is not an institution"}],"functionName":{"name":"mstore","nativeSrc":"35125:6:30","nodeType":"YulIdentifier","src":"35125:6:30"},"nativeSrc":"35125:55:30","nodeType":"YulFunctionCall","src":"35125:55:30"},"nativeSrc":"35125:55:30","nodeType":"YulExpressionStatement","src":"35125:55:30"}]},"name":"store_literal_in_memory_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216","nativeSrc":"35008:179:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"35106:6:30","nodeType":"YulTypedName","src":"35106:6:30","type":""}],"src":"35008:179:30"},{"body":{"nativeSrc":"35339:220:30","nodeType":"YulBlock","src":"35339:220:30","statements":[{"nativeSrc":"35349:74:30","nodeType":"YulAssignment","src":"35349:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"35415:3:30","nodeType":"YulIdentifier","src":"35415:3:30"},{"kind":"number","nativeSrc":"35420:2:30","nodeType":"YulLiteral","src":"35420:2:30","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"35356:58:30","nodeType":"YulIdentifier","src":"35356:58:30"},"nativeSrc":"35356:67:30","nodeType":"YulFunctionCall","src":"35356:67:30"},"variableNames":[{"name":"pos","nativeSrc":"35349:3:30","nodeType":"YulIdentifier","src":"35349:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"35521:3:30","nodeType":"YulIdentifier","src":"35521:3:30"}],"functionName":{"name":"store_literal_in_memory_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216","nativeSrc":"35432:88:30","nodeType":"YulIdentifier","src":"35432:88:30"},"nativeSrc":"35432:93:30","nodeType":"YulFunctionCall","src":"35432:93:30"},"nativeSrc":"35432:93:30","nodeType":"YulExpressionStatement","src":"35432:93:30"},{"nativeSrc":"35534:19:30","nodeType":"YulAssignment","src":"35534:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"35545:3:30","nodeType":"YulIdentifier","src":"35545:3:30"},{"kind":"number","nativeSrc":"35550:2:30","nodeType":"YulLiteral","src":"35550:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35541:3:30","nodeType":"YulIdentifier","src":"35541:3:30"},"nativeSrc":"35541:12:30","nodeType":"YulFunctionCall","src":"35541:12:30"},"variableNames":[{"name":"end","nativeSrc":"35534:3:30","nodeType":"YulIdentifier","src":"35534:3:30"}]}]},"name":"abi_encode_t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216_to_t_string_memory_ptr_fromStack","nativeSrc":"35193:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"35327:3:30","nodeType":"YulTypedName","src":"35327:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"35335:3:30","nodeType":"YulTypedName","src":"35335:3:30","type":""}],"src":"35193:366:30"},{"body":{"nativeSrc":"35736:248:30","nodeType":"YulBlock","src":"35736:248:30","statements":[{"nativeSrc":"35746:26:30","nodeType":"YulAssignment","src":"35746:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"35758:9:30","nodeType":"YulIdentifier","src":"35758:9:30"},{"kind":"number","nativeSrc":"35769:2:30","nodeType":"YulLiteral","src":"35769:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35754:3:30","nodeType":"YulIdentifier","src":"35754:3:30"},"nativeSrc":"35754:18:30","nodeType":"YulFunctionCall","src":"35754:18:30"},"variableNames":[{"name":"tail","nativeSrc":"35746:4:30","nodeType":"YulIdentifier","src":"35746:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"35793:9:30","nodeType":"YulIdentifier","src":"35793:9:30"},{"kind":"number","nativeSrc":"35804:1:30","nodeType":"YulLiteral","src":"35804:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35789:3:30","nodeType":"YulIdentifier","src":"35789:3:30"},"nativeSrc":"35789:17:30","nodeType":"YulFunctionCall","src":"35789:17:30"},{"arguments":[{"name":"tail","nativeSrc":"35812:4:30","nodeType":"YulIdentifier","src":"35812:4:30"},{"name":"headStart","nativeSrc":"35818:9:30","nodeType":"YulIdentifier","src":"35818:9:30"}],"functionName":{"name":"sub","nativeSrc":"35808:3:30","nodeType":"YulIdentifier","src":"35808:3:30"},"nativeSrc":"35808:20:30","nodeType":"YulFunctionCall","src":"35808:20:30"}],"functionName":{"name":"mstore","nativeSrc":"35782:6:30","nodeType":"YulIdentifier","src":"35782:6:30"},"nativeSrc":"35782:47:30","nodeType":"YulFunctionCall","src":"35782:47:30"},"nativeSrc":"35782:47:30","nodeType":"YulExpressionStatement","src":"35782:47:30"},{"nativeSrc":"35838:139:30","nodeType":"YulAssignment","src":"35838:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"35972:4:30","nodeType":"YulIdentifier","src":"35972:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216_to_t_string_memory_ptr_fromStack","nativeSrc":"35846:124:30","nodeType":"YulIdentifier","src":"35846:124:30"},"nativeSrc":"35846:131:30","nodeType":"YulFunctionCall","src":"35846:131:30"},"variableNames":[{"name":"tail","nativeSrc":"35838:4:30","nodeType":"YulIdentifier","src":"35838:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"35565:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35716:9:30","nodeType":"YulTypedName","src":"35716:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35731:4:30","nodeType":"YulTypedName","src":"35731:4:30","type":""}],"src":"35565:419:30"},{"body":{"nativeSrc":"36043:32:30","nodeType":"YulBlock","src":"36043:32:30","statements":[{"nativeSrc":"36053:16:30","nodeType":"YulAssignment","src":"36053:16:30","value":{"name":"value","nativeSrc":"36064:5:30","nodeType":"YulIdentifier","src":"36064:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"36053:7:30","nodeType":"YulIdentifier","src":"36053:7:30"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"35990:85:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"36025:5:30","nodeType":"YulTypedName","src":"36025:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"36035:7:30","nodeType":"YulTypedName","src":"36035:7:30","type":""}],"src":"35990:85:30"},{"body":{"nativeSrc":"36125:57:30","nodeType":"YulBlock","src":"36125:57:30","statements":[{"nativeSrc":"36135:41:30","nodeType":"YulAssignment","src":"36135:41:30","value":{"arguments":[{"name":"value","nativeSrc":"36150:5:30","nodeType":"YulIdentifier","src":"36150:5:30"},{"kind":"number","nativeSrc":"36157:18:30","nodeType":"YulLiteral","src":"36157:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"36146:3:30","nodeType":"YulIdentifier","src":"36146:3:30"},"nativeSrc":"36146:30:30","nodeType":"YulFunctionCall","src":"36146:30:30"},"variableNames":[{"name":"cleaned","nativeSrc":"36135:7:30","nodeType":"YulIdentifier","src":"36135:7:30"}]}]},"name":"cleanup_t_uint64","nativeSrc":"36081:101:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"36107:5:30","nodeType":"YulTypedName","src":"36107:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"36117:7:30","nodeType":"YulTypedName","src":"36117:7:30","type":""}],"src":"36081:101:30"},{"body":{"nativeSrc":"36255:89:30","nodeType":"YulBlock","src":"36255:89:30","statements":[{"nativeSrc":"36265:73:30","nodeType":"YulAssignment","src":"36265:73:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"36330:5:30","nodeType":"YulIdentifier","src":"36330:5:30"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"36304:25:30","nodeType":"YulIdentifier","src":"36304:25:30"},"nativeSrc":"36304:32:30","nodeType":"YulFunctionCall","src":"36304:32:30"}],"functionName":{"name":"identity","nativeSrc":"36295:8:30","nodeType":"YulIdentifier","src":"36295:8:30"},"nativeSrc":"36295:42:30","nodeType":"YulFunctionCall","src":"36295:42:30"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"36278:16:30","nodeType":"YulIdentifier","src":"36278:16:30"},"nativeSrc":"36278:60:30","nodeType":"YulFunctionCall","src":"36278:60:30"},"variableNames":[{"name":"converted","nativeSrc":"36265:9:30","nodeType":"YulIdentifier","src":"36265:9:30"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"36188:156:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"36235:5:30","nodeType":"YulTypedName","src":"36235:5:30","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"36245:9:30","nodeType":"YulTypedName","src":"36245:9:30","type":""}],"src":"36188:156:30"},{"body":{"nativeSrc":"36422:73:30","nodeType":"YulBlock","src":"36422:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"36439:3:30","nodeType":"YulIdentifier","src":"36439:3:30"},{"arguments":[{"name":"value","nativeSrc":"36482:5:30","nodeType":"YulIdentifier","src":"36482:5:30"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"36444:37:30","nodeType":"YulIdentifier","src":"36444:37:30"},"nativeSrc":"36444:44:30","nodeType":"YulFunctionCall","src":"36444:44:30"}],"functionName":{"name":"mstore","nativeSrc":"36432:6:30","nodeType":"YulIdentifier","src":"36432:6:30"},"nativeSrc":"36432:57:30","nodeType":"YulFunctionCall","src":"36432:57:30"},"nativeSrc":"36432:57:30","nodeType":"YulExpressionStatement","src":"36432:57:30"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"36350:145:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"36410:5:30","nodeType":"YulTypedName","src":"36410:5:30","type":""},{"name":"pos","nativeSrc":"36417:3:30","nodeType":"YulTypedName","src":"36417:3:30","type":""}],"src":"36350:145:30"},{"body":{"nativeSrc":"36606:131:30","nodeType":"YulBlock","src":"36606:131:30","statements":[{"nativeSrc":"36616:26:30","nodeType":"YulAssignment","src":"36616:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"36628:9:30","nodeType":"YulIdentifier","src":"36628:9:30"},{"kind":"number","nativeSrc":"36639:2:30","nodeType":"YulLiteral","src":"36639:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36624:3:30","nodeType":"YulIdentifier","src":"36624:3:30"},"nativeSrc":"36624:18:30","nodeType":"YulFunctionCall","src":"36624:18:30"},"variableNames":[{"name":"tail","nativeSrc":"36616:4:30","nodeType":"YulIdentifier","src":"36616:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"36703:6:30","nodeType":"YulIdentifier","src":"36703:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"36716:9:30","nodeType":"YulIdentifier","src":"36716:9:30"},{"kind":"number","nativeSrc":"36727:1:30","nodeType":"YulLiteral","src":"36727:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36712:3:30","nodeType":"YulIdentifier","src":"36712:3:30"},"nativeSrc":"36712:17:30","nodeType":"YulFunctionCall","src":"36712:17:30"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"36652:50:30","nodeType":"YulIdentifier","src":"36652:50:30"},"nativeSrc":"36652:78:30","nodeType":"YulFunctionCall","src":"36652:78:30"},"nativeSrc":"36652:78:30","nodeType":"YulExpressionStatement","src":"36652:78:30"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"36501:236:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"36578:9:30","nodeType":"YulTypedName","src":"36578:9:30","type":""},{"name":"value0","nativeSrc":"36590:6:30","nodeType":"YulTypedName","src":"36590:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36601:4:30","nodeType":"YulTypedName","src":"36601:4:30","type":""}],"src":"36501:236:30"},{"body":{"nativeSrc":"36849:68:30","nodeType":"YulBlock","src":"36849:68:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"36871:6:30","nodeType":"YulIdentifier","src":"36871:6:30"},{"kind":"number","nativeSrc":"36879:1:30","nodeType":"YulLiteral","src":"36879:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36867:3:30","nodeType":"YulIdentifier","src":"36867:3:30"},"nativeSrc":"36867:14:30","nodeType":"YulFunctionCall","src":"36867:14:30"},{"hexValue":"41646472657373206973206e6f742061206d616e61676572","kind":"string","nativeSrc":"36883:26:30","nodeType":"YulLiteral","src":"36883:26:30","type":"","value":"Address is not a manager"}],"functionName":{"name":"mstore","nativeSrc":"36860:6:30","nodeType":"YulIdentifier","src":"36860:6:30"},"nativeSrc":"36860:50:30","nodeType":"YulFunctionCall","src":"36860:50:30"},"nativeSrc":"36860:50:30","nodeType":"YulExpressionStatement","src":"36860:50:30"}]},"name":"store_literal_in_memory_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb","nativeSrc":"36743:174:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"36841:6:30","nodeType":"YulTypedName","src":"36841:6:30","type":""}],"src":"36743:174:30"},{"body":{"nativeSrc":"37069:220:30","nodeType":"YulBlock","src":"37069:220:30","statements":[{"nativeSrc":"37079:74:30","nodeType":"YulAssignment","src":"37079:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"37145:3:30","nodeType":"YulIdentifier","src":"37145:3:30"},{"kind":"number","nativeSrc":"37150:2:30","nodeType":"YulLiteral","src":"37150:2:30","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"37086:58:30","nodeType":"YulIdentifier","src":"37086:58:30"},"nativeSrc":"37086:67:30","nodeType":"YulFunctionCall","src":"37086:67:30"},"variableNames":[{"name":"pos","nativeSrc":"37079:3:30","nodeType":"YulIdentifier","src":"37079:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"37251:3:30","nodeType":"YulIdentifier","src":"37251:3:30"}],"functionName":{"name":"store_literal_in_memory_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb","nativeSrc":"37162:88:30","nodeType":"YulIdentifier","src":"37162:88:30"},"nativeSrc":"37162:93:30","nodeType":"YulFunctionCall","src":"37162:93:30"},"nativeSrc":"37162:93:30","nodeType":"YulExpressionStatement","src":"37162:93:30"},{"nativeSrc":"37264:19:30","nodeType":"YulAssignment","src":"37264:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"37275:3:30","nodeType":"YulIdentifier","src":"37275:3:30"},{"kind":"number","nativeSrc":"37280:2:30","nodeType":"YulLiteral","src":"37280:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37271:3:30","nodeType":"YulIdentifier","src":"37271:3:30"},"nativeSrc":"37271:12:30","nodeType":"YulFunctionCall","src":"37271:12:30"},"variableNames":[{"name":"end","nativeSrc":"37264:3:30","nodeType":"YulIdentifier","src":"37264:3:30"}]}]},"name":"abi_encode_t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb_to_t_string_memory_ptr_fromStack","nativeSrc":"36923:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"37057:3:30","nodeType":"YulTypedName","src":"37057:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"37065:3:30","nodeType":"YulTypedName","src":"37065:3:30","type":""}],"src":"36923:366:30"},{"body":{"nativeSrc":"37466:248:30","nodeType":"YulBlock","src":"37466:248:30","statements":[{"nativeSrc":"37476:26:30","nodeType":"YulAssignment","src":"37476:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"37488:9:30","nodeType":"YulIdentifier","src":"37488:9:30"},{"kind":"number","nativeSrc":"37499:2:30","nodeType":"YulLiteral","src":"37499:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37484:3:30","nodeType":"YulIdentifier","src":"37484:3:30"},"nativeSrc":"37484:18:30","nodeType":"YulFunctionCall","src":"37484:18:30"},"variableNames":[{"name":"tail","nativeSrc":"37476:4:30","nodeType":"YulIdentifier","src":"37476:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"37523:9:30","nodeType":"YulIdentifier","src":"37523:9:30"},{"kind":"number","nativeSrc":"37534:1:30","nodeType":"YulLiteral","src":"37534:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37519:3:30","nodeType":"YulIdentifier","src":"37519:3:30"},"nativeSrc":"37519:17:30","nodeType":"YulFunctionCall","src":"37519:17:30"},{"arguments":[{"name":"tail","nativeSrc":"37542:4:30","nodeType":"YulIdentifier","src":"37542:4:30"},{"name":"headStart","nativeSrc":"37548:9:30","nodeType":"YulIdentifier","src":"37548:9:30"}],"functionName":{"name":"sub","nativeSrc":"37538:3:30","nodeType":"YulIdentifier","src":"37538:3:30"},"nativeSrc":"37538:20:30","nodeType":"YulFunctionCall","src":"37538:20:30"}],"functionName":{"name":"mstore","nativeSrc":"37512:6:30","nodeType":"YulIdentifier","src":"37512:6:30"},"nativeSrc":"37512:47:30","nodeType":"YulFunctionCall","src":"37512:47:30"},"nativeSrc":"37512:47:30","nodeType":"YulExpressionStatement","src":"37512:47:30"},{"nativeSrc":"37568:139:30","nodeType":"YulAssignment","src":"37568:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"37702:4:30","nodeType":"YulIdentifier","src":"37702:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb_to_t_string_memory_ptr_fromStack","nativeSrc":"37576:124:30","nodeType":"YulIdentifier","src":"37576:124:30"},"nativeSrc":"37576:131:30","nodeType":"YulFunctionCall","src":"37576:131:30"},"variableNames":[{"name":"tail","nativeSrc":"37568:4:30","nodeType":"YulIdentifier","src":"37568:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"37295:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"37446:9:30","nodeType":"YulTypedName","src":"37446:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"37461:4:30","nodeType":"YulTypedName","src":"37461:4:30","type":""}],"src":"37295:419:30"},{"body":{"nativeSrc":"37826:73:30","nodeType":"YulBlock","src":"37826:73:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"37848:6:30","nodeType":"YulIdentifier","src":"37848:6:30"},{"kind":"number","nativeSrc":"37856:1:30","nodeType":"YulLiteral","src":"37856:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37844:3:30","nodeType":"YulIdentifier","src":"37844:3:30"},"nativeSrc":"37844:14:30","nodeType":"YulFunctionCall","src":"37844:14:30"},{"hexValue":"43726564656e7469616c20697320616c7265616479205245564f4b4544","kind":"string","nativeSrc":"37860:31:30","nodeType":"YulLiteral","src":"37860:31:30","type":"","value":"Credential is already REVOKED"}],"functionName":{"name":"mstore","nativeSrc":"37837:6:30","nodeType":"YulIdentifier","src":"37837:6:30"},"nativeSrc":"37837:55:30","nodeType":"YulFunctionCall","src":"37837:55:30"},"nativeSrc":"37837:55:30","nodeType":"YulExpressionStatement","src":"37837:55:30"}]},"name":"store_literal_in_memory_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4","nativeSrc":"37720:179:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"37818:6:30","nodeType":"YulTypedName","src":"37818:6:30","type":""}],"src":"37720:179:30"},{"body":{"nativeSrc":"38051:220:30","nodeType":"YulBlock","src":"38051:220:30","statements":[{"nativeSrc":"38061:74:30","nodeType":"YulAssignment","src":"38061:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"38127:3:30","nodeType":"YulIdentifier","src":"38127:3:30"},{"kind":"number","nativeSrc":"38132:2:30","nodeType":"YulLiteral","src":"38132:2:30","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"38068:58:30","nodeType":"YulIdentifier","src":"38068:58:30"},"nativeSrc":"38068:67:30","nodeType":"YulFunctionCall","src":"38068:67:30"},"variableNames":[{"name":"pos","nativeSrc":"38061:3:30","nodeType":"YulIdentifier","src":"38061:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"38233:3:30","nodeType":"YulIdentifier","src":"38233:3:30"}],"functionName":{"name":"store_literal_in_memory_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4","nativeSrc":"38144:88:30","nodeType":"YulIdentifier","src":"38144:88:30"},"nativeSrc":"38144:93:30","nodeType":"YulFunctionCall","src":"38144:93:30"},"nativeSrc":"38144:93:30","nodeType":"YulExpressionStatement","src":"38144:93:30"},{"nativeSrc":"38246:19:30","nodeType":"YulAssignment","src":"38246:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"38257:3:30","nodeType":"YulIdentifier","src":"38257:3:30"},{"kind":"number","nativeSrc":"38262:2:30","nodeType":"YulLiteral","src":"38262:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38253:3:30","nodeType":"YulIdentifier","src":"38253:3:30"},"nativeSrc":"38253:12:30","nodeType":"YulFunctionCall","src":"38253:12:30"},"variableNames":[{"name":"end","nativeSrc":"38246:3:30","nodeType":"YulIdentifier","src":"38246:3:30"}]}]},"name":"abi_encode_t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4_to_t_string_memory_ptr_fromStack","nativeSrc":"37905:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"38039:3:30","nodeType":"YulTypedName","src":"38039:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"38047:3:30","nodeType":"YulTypedName","src":"38047:3:30","type":""}],"src":"37905:366:30"},{"body":{"nativeSrc":"38448:248:30","nodeType":"YulBlock","src":"38448:248:30","statements":[{"nativeSrc":"38458:26:30","nodeType":"YulAssignment","src":"38458:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"38470:9:30","nodeType":"YulIdentifier","src":"38470:9:30"},{"kind":"number","nativeSrc":"38481:2:30","nodeType":"YulLiteral","src":"38481:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38466:3:30","nodeType":"YulIdentifier","src":"38466:3:30"},"nativeSrc":"38466:18:30","nodeType":"YulFunctionCall","src":"38466:18:30"},"variableNames":[{"name":"tail","nativeSrc":"38458:4:30","nodeType":"YulIdentifier","src":"38458:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"38505:9:30","nodeType":"YulIdentifier","src":"38505:9:30"},{"kind":"number","nativeSrc":"38516:1:30","nodeType":"YulLiteral","src":"38516:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38501:3:30","nodeType":"YulIdentifier","src":"38501:3:30"},"nativeSrc":"38501:17:30","nodeType":"YulFunctionCall","src":"38501:17:30"},{"arguments":[{"name":"tail","nativeSrc":"38524:4:30","nodeType":"YulIdentifier","src":"38524:4:30"},{"name":"headStart","nativeSrc":"38530:9:30","nodeType":"YulIdentifier","src":"38530:9:30"}],"functionName":{"name":"sub","nativeSrc":"38520:3:30","nodeType":"YulIdentifier","src":"38520:3:30"},"nativeSrc":"38520:20:30","nodeType":"YulFunctionCall","src":"38520:20:30"}],"functionName":{"name":"mstore","nativeSrc":"38494:6:30","nodeType":"YulIdentifier","src":"38494:6:30"},"nativeSrc":"38494:47:30","nodeType":"YulFunctionCall","src":"38494:47:30"},"nativeSrc":"38494:47:30","nodeType":"YulExpressionStatement","src":"38494:47:30"},{"nativeSrc":"38550:139:30","nodeType":"YulAssignment","src":"38550:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"38684:4:30","nodeType":"YulIdentifier","src":"38684:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4_to_t_string_memory_ptr_fromStack","nativeSrc":"38558:124:30","nodeType":"YulIdentifier","src":"38558:124:30"},"nativeSrc":"38558:131:30","nodeType":"YulFunctionCall","src":"38558:131:30"},"variableNames":[{"name":"tail","nativeSrc":"38550:4:30","nodeType":"YulIdentifier","src":"38550:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"38277:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38428:9:30","nodeType":"YulTypedName","src":"38428:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38443:4:30","nodeType":"YulTypedName","src":"38443:4:30","type":""}],"src":"38277:419:30"},{"body":{"nativeSrc":"38914:397:30","nodeType":"YulBlock","src":"38914:397:30","statements":[{"nativeSrc":"38924:26:30","nodeType":"YulAssignment","src":"38924:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"38936:9:30","nodeType":"YulIdentifier","src":"38936:9:30"},{"kind":"number","nativeSrc":"38947:2:30","nodeType":"YulLiteral","src":"38947:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"38932:3:30","nodeType":"YulIdentifier","src":"38932:3:30"},"nativeSrc":"38932:18:30","nodeType":"YulFunctionCall","src":"38932:18:30"},"variableNames":[{"name":"tail","nativeSrc":"38924:4:30","nodeType":"YulIdentifier","src":"38924:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"39023:6:30","nodeType":"YulIdentifier","src":"39023:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"39036:9:30","nodeType":"YulIdentifier","src":"39036:9:30"},{"kind":"number","nativeSrc":"39047:1:30","nodeType":"YulLiteral","src":"39047:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39032:3:30","nodeType":"YulIdentifier","src":"39032:3:30"},"nativeSrc":"39032:17:30","nodeType":"YulFunctionCall","src":"39032:17:30"}],"functionName":{"name":"abi_encode_t_enum$_CredentialStatus_$7802_to_t_uint8_fromStack","nativeSrc":"38960:62:30","nodeType":"YulIdentifier","src":"38960:62:30"},"nativeSrc":"38960:90:30","nodeType":"YulFunctionCall","src":"38960:90:30"},"nativeSrc":"38960:90:30","nodeType":"YulExpressionStatement","src":"38960:90:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"39123:6:30","nodeType":"YulIdentifier","src":"39123:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"39136:9:30","nodeType":"YulIdentifier","src":"39136:9:30"},{"kind":"number","nativeSrc":"39147:2:30","nodeType":"YulLiteral","src":"39147:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39132:3:30","nodeType":"YulIdentifier","src":"39132:3:30"},"nativeSrc":"39132:18:30","nodeType":"YulFunctionCall","src":"39132:18:30"}],"functionName":{"name":"abi_encode_t_enum$_CredentialStatus_$7802_to_t_uint8_fromStack","nativeSrc":"39060:62:30","nodeType":"YulIdentifier","src":"39060:62:30"},"nativeSrc":"39060:91:30","nodeType":"YulFunctionCall","src":"39060:91:30"},"nativeSrc":"39060:91:30","nodeType":"YulExpressionStatement","src":"39060:91:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"39172:9:30","nodeType":"YulIdentifier","src":"39172:9:30"},{"kind":"number","nativeSrc":"39183:2:30","nodeType":"YulLiteral","src":"39183:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"39168:3:30","nodeType":"YulIdentifier","src":"39168:3:30"},"nativeSrc":"39168:18:30","nodeType":"YulFunctionCall","src":"39168:18:30"},{"arguments":[{"name":"tail","nativeSrc":"39192:4:30","nodeType":"YulIdentifier","src":"39192:4:30"},{"name":"headStart","nativeSrc":"39198:9:30","nodeType":"YulIdentifier","src":"39198:9:30"}],"functionName":{"name":"sub","nativeSrc":"39188:3:30","nodeType":"YulIdentifier","src":"39188:3:30"},"nativeSrc":"39188:20:30","nodeType":"YulFunctionCall","src":"39188:20:30"}],"functionName":{"name":"mstore","nativeSrc":"39161:6:30","nodeType":"YulIdentifier","src":"39161:6:30"},"nativeSrc":"39161:48:30","nodeType":"YulFunctionCall","src":"39161:48:30"},"nativeSrc":"39161:48:30","nodeType":"YulExpressionStatement","src":"39161:48:30"},{"nativeSrc":"39218:86:30","nodeType":"YulAssignment","src":"39218:86:30","value":{"arguments":[{"name":"value2","nativeSrc":"39290:6:30","nodeType":"YulIdentifier","src":"39290:6:30"},{"name":"tail","nativeSrc":"39299:4:30","nodeType":"YulIdentifier","src":"39299:4:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"39226:63:30","nodeType":"YulIdentifier","src":"39226:63:30"},"nativeSrc":"39226:78:30","nodeType":"YulFunctionCall","src":"39226:78:30"},"variableNames":[{"name":"tail","nativeSrc":"39218:4:30","nodeType":"YulIdentifier","src":"39218:4:30"}]}]},"name":"abi_encode_tuple_t_enum$_CredentialStatus_$7802_t_enum$_CredentialStatus_$7802_t_string_memory_ptr__to_t_uint8_t_uint8_t_string_memory_ptr__fromStack_reversed","nativeSrc":"38702:609:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38870:9:30","nodeType":"YulTypedName","src":"38870:9:30","type":""},{"name":"value2","nativeSrc":"38882:6:30","nodeType":"YulTypedName","src":"38882:6:30","type":""},{"name":"value1","nativeSrc":"38890:6:30","nodeType":"YulTypedName","src":"38890:6:30","type":""},{"name":"value0","nativeSrc":"38898:6:30","nodeType":"YulTypedName","src":"38898:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38909:4:30","nodeType":"YulTypedName","src":"38909:4:30","type":""}],"src":"38702:609:30"},{"body":{"nativeSrc":"39380:80:30","nodeType":"YulBlock","src":"39380:80:30","statements":[{"nativeSrc":"39390:22:30","nodeType":"YulAssignment","src":"39390:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"39405:6:30","nodeType":"YulIdentifier","src":"39405:6:30"}],"functionName":{"name":"mload","nativeSrc":"39399:5:30","nodeType":"YulIdentifier","src":"39399:5:30"},"nativeSrc":"39399:13:30","nodeType":"YulFunctionCall","src":"39399:13:30"},"variableNames":[{"name":"value","nativeSrc":"39390:5:30","nodeType":"YulIdentifier","src":"39390:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"39448:5:30","nodeType":"YulIdentifier","src":"39448:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"39421:26:30","nodeType":"YulIdentifier","src":"39421:26:30"},"nativeSrc":"39421:33:30","nodeType":"YulFunctionCall","src":"39421:33:30"},"nativeSrc":"39421:33:30","nodeType":"YulExpressionStatement","src":"39421:33:30"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"39317:143:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"39358:6:30","nodeType":"YulTypedName","src":"39358:6:30","type":""},{"name":"end","nativeSrc":"39366:3:30","nodeType":"YulTypedName","src":"39366:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"39374:5:30","nodeType":"YulTypedName","src":"39374:5:30","type":""}],"src":"39317:143:30"},{"body":{"nativeSrc":"39543:274:30","nodeType":"YulBlock","src":"39543:274:30","statements":[{"body":{"nativeSrc":"39589:83:30","nodeType":"YulBlock","src":"39589:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"39591:77:30","nodeType":"YulIdentifier","src":"39591:77:30"},"nativeSrc":"39591:79:30","nodeType":"YulFunctionCall","src":"39591:79:30"},"nativeSrc":"39591:79:30","nodeType":"YulExpressionStatement","src":"39591:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"39564:7:30","nodeType":"YulIdentifier","src":"39564:7:30"},{"name":"headStart","nativeSrc":"39573:9:30","nodeType":"YulIdentifier","src":"39573:9:30"}],"functionName":{"name":"sub","nativeSrc":"39560:3:30","nodeType":"YulIdentifier","src":"39560:3:30"},"nativeSrc":"39560:23:30","nodeType":"YulFunctionCall","src":"39560:23:30"},{"kind":"number","nativeSrc":"39585:2:30","nodeType":"YulLiteral","src":"39585:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"39556:3:30","nodeType":"YulIdentifier","src":"39556:3:30"},"nativeSrc":"39556:32:30","nodeType":"YulFunctionCall","src":"39556:32:30"},"nativeSrc":"39553:119:30","nodeType":"YulIf","src":"39553:119:30"},{"nativeSrc":"39682:128:30","nodeType":"YulBlock","src":"39682:128:30","statements":[{"nativeSrc":"39697:15:30","nodeType":"YulVariableDeclaration","src":"39697:15:30","value":{"kind":"number","nativeSrc":"39711:1:30","nodeType":"YulLiteral","src":"39711:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"39701:6:30","nodeType":"YulTypedName","src":"39701:6:30","type":""}]},{"nativeSrc":"39726:74:30","nodeType":"YulAssignment","src":"39726:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"39772:9:30","nodeType":"YulIdentifier","src":"39772:9:30"},{"name":"offset","nativeSrc":"39783:6:30","nodeType":"YulIdentifier","src":"39783:6:30"}],"functionName":{"name":"add","nativeSrc":"39768:3:30","nodeType":"YulIdentifier","src":"39768:3:30"},"nativeSrc":"39768:22:30","nodeType":"YulFunctionCall","src":"39768:22:30"},{"name":"dataEnd","nativeSrc":"39792:7:30","nodeType":"YulIdentifier","src":"39792:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"39736:31:30","nodeType":"YulIdentifier","src":"39736:31:30"},"nativeSrc":"39736:64:30","nodeType":"YulFunctionCall","src":"39736:64:30"},"variableNames":[{"name":"value0","nativeSrc":"39726:6:30","nodeType":"YulIdentifier","src":"39726:6:30"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"39466:351:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"39513:9:30","nodeType":"YulTypedName","src":"39513:9:30","type":""},{"name":"dataEnd","nativeSrc":"39524:7:30","nodeType":"YulTypedName","src":"39524:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"39536:6:30","nodeType":"YulTypedName","src":"39536:6:30","type":""}],"src":"39466:351:30"},{"body":{"nativeSrc":"39949:206:30","nodeType":"YulBlock","src":"39949:206:30","statements":[{"nativeSrc":"39959:26:30","nodeType":"YulAssignment","src":"39959:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"39971:9:30","nodeType":"YulIdentifier","src":"39971:9:30"},{"kind":"number","nativeSrc":"39982:2:30","nodeType":"YulLiteral","src":"39982:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"39967:3:30","nodeType":"YulIdentifier","src":"39967:3:30"},"nativeSrc":"39967:18:30","nodeType":"YulFunctionCall","src":"39967:18:30"},"variableNames":[{"name":"tail","nativeSrc":"39959:4:30","nodeType":"YulIdentifier","src":"39959:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"40039:6:30","nodeType":"YulIdentifier","src":"40039:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"40052:9:30","nodeType":"YulIdentifier","src":"40052:9:30"},{"kind":"number","nativeSrc":"40063:1:30","nodeType":"YulLiteral","src":"40063:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"40048:3:30","nodeType":"YulIdentifier","src":"40048:3:30"},"nativeSrc":"40048:17:30","nodeType":"YulFunctionCall","src":"40048:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"39995:43:30","nodeType":"YulIdentifier","src":"39995:43:30"},"nativeSrc":"39995:71:30","nodeType":"YulFunctionCall","src":"39995:71:30"},"nativeSrc":"39995:71:30","nodeType":"YulExpressionStatement","src":"39995:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"40120:6:30","nodeType":"YulIdentifier","src":"40120:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"40133:9:30","nodeType":"YulIdentifier","src":"40133:9:30"},{"kind":"number","nativeSrc":"40144:2:30","nodeType":"YulLiteral","src":"40144:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"40129:3:30","nodeType":"YulIdentifier","src":"40129:3:30"},"nativeSrc":"40129:18:30","nodeType":"YulFunctionCall","src":"40129:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"40076:43:30","nodeType":"YulIdentifier","src":"40076:43:30"},"nativeSrc":"40076:72:30","nodeType":"YulFunctionCall","src":"40076:72:30"},"nativeSrc":"40076:72:30","nodeType":"YulExpressionStatement","src":"40076:72:30"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"39823:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"39913:9:30","nodeType":"YulTypedName","src":"39913:9:30","type":""},{"name":"value1","nativeSrc":"39925:6:30","nodeType":"YulTypedName","src":"39925:6:30","type":""},{"name":"value0","nativeSrc":"39933:6:30","nodeType":"YulTypedName","src":"39933:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"39944:4:30","nodeType":"YulTypedName","src":"39944:4:30","type":""}],"src":"39823:332:30"},{"body":{"nativeSrc":"40224:80:30","nodeType":"YulBlock","src":"40224:80:30","statements":[{"nativeSrc":"40234:22:30","nodeType":"YulAssignment","src":"40234:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"40249:6:30","nodeType":"YulIdentifier","src":"40249:6:30"}],"functionName":{"name":"mload","nativeSrc":"40243:5:30","nodeType":"YulIdentifier","src":"40243:5:30"},"nativeSrc":"40243:13:30","nodeType":"YulFunctionCall","src":"40243:13:30"},"variableNames":[{"name":"value","nativeSrc":"40234:5:30","nodeType":"YulIdentifier","src":"40234:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"40292:5:30","nodeType":"YulIdentifier","src":"40292:5:30"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"40265:26:30","nodeType":"YulIdentifier","src":"40265:26:30"},"nativeSrc":"40265:33:30","nodeType":"YulFunctionCall","src":"40265:33:30"},"nativeSrc":"40265:33:30","nodeType":"YulExpressionStatement","src":"40265:33:30"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"40161:143:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"40202:6:30","nodeType":"YulTypedName","src":"40202:6:30","type":""},{"name":"end","nativeSrc":"40210:3:30","nodeType":"YulTypedName","src":"40210:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"40218:5:30","nodeType":"YulTypedName","src":"40218:5:30","type":""}],"src":"40161:143:30"},{"body":{"nativeSrc":"40387:274:30","nodeType":"YulBlock","src":"40387:274:30","statements":[{"body":{"nativeSrc":"40433:83:30","nodeType":"YulBlock","src":"40433:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"40435:77:30","nodeType":"YulIdentifier","src":"40435:77:30"},"nativeSrc":"40435:79:30","nodeType":"YulFunctionCall","src":"40435:79:30"},"nativeSrc":"40435:79:30","nodeType":"YulExpressionStatement","src":"40435:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"40408:7:30","nodeType":"YulIdentifier","src":"40408:7:30"},{"name":"headStart","nativeSrc":"40417:9:30","nodeType":"YulIdentifier","src":"40417:9:30"}],"functionName":{"name":"sub","nativeSrc":"40404:3:30","nodeType":"YulIdentifier","src":"40404:3:30"},"nativeSrc":"40404:23:30","nodeType":"YulFunctionCall","src":"40404:23:30"},{"kind":"number","nativeSrc":"40429:2:30","nodeType":"YulLiteral","src":"40429:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"40400:3:30","nodeType":"YulIdentifier","src":"40400:3:30"},"nativeSrc":"40400:32:30","nodeType":"YulFunctionCall","src":"40400:32:30"},"nativeSrc":"40397:119:30","nodeType":"YulIf","src":"40397:119:30"},{"nativeSrc":"40526:128:30","nodeType":"YulBlock","src":"40526:128:30","statements":[{"nativeSrc":"40541:15:30","nodeType":"YulVariableDeclaration","src":"40541:15:30","value":{"kind":"number","nativeSrc":"40555:1:30","nodeType":"YulLiteral","src":"40555:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"40545:6:30","nodeType":"YulTypedName","src":"40545:6:30","type":""}]},{"nativeSrc":"40570:74:30","nodeType":"YulAssignment","src":"40570:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"40616:9:30","nodeType":"YulIdentifier","src":"40616:9:30"},{"name":"offset","nativeSrc":"40627:6:30","nodeType":"YulIdentifier","src":"40627:6:30"}],"functionName":{"name":"add","nativeSrc":"40612:3:30","nodeType":"YulIdentifier","src":"40612:3:30"},"nativeSrc":"40612:22:30","nodeType":"YulFunctionCall","src":"40612:22:30"},{"name":"dataEnd","nativeSrc":"40636:7:30","nodeType":"YulIdentifier","src":"40636:7:30"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"40580:31:30","nodeType":"YulIdentifier","src":"40580:31:30"},"nativeSrc":"40580:64:30","nodeType":"YulFunctionCall","src":"40580:64:30"},"variableNames":[{"name":"value0","nativeSrc":"40570:6:30","nodeType":"YulIdentifier","src":"40570:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"40310:351:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"40357:9:30","nodeType":"YulTypedName","src":"40357:9:30","type":""},{"name":"dataEnd","nativeSrc":"40368:7:30","nodeType":"YulTypedName","src":"40368:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"40380:6:30","nodeType":"YulTypedName","src":"40380:6:30","type":""}],"src":"40310:351:30"},{"body":{"nativeSrc":"40695:152:30","nodeType":"YulBlock","src":"40695:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"40712:1:30","nodeType":"YulLiteral","src":"40712:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"40715:77:30","nodeType":"YulLiteral","src":"40715:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"40705:6:30","nodeType":"YulIdentifier","src":"40705:6:30"},"nativeSrc":"40705:88:30","nodeType":"YulFunctionCall","src":"40705:88:30"},"nativeSrc":"40705:88:30","nodeType":"YulExpressionStatement","src":"40705:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"40809:1:30","nodeType":"YulLiteral","src":"40809:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"40812:4:30","nodeType":"YulLiteral","src":"40812:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"40802:6:30","nodeType":"YulIdentifier","src":"40802:6:30"},"nativeSrc":"40802:15:30","nodeType":"YulFunctionCall","src":"40802:15:30"},"nativeSrc":"40802:15:30","nodeType":"YulExpressionStatement","src":"40802:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"40833:1:30","nodeType":"YulLiteral","src":"40833:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"40836:4:30","nodeType":"YulLiteral","src":"40836:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"40826:6:30","nodeType":"YulIdentifier","src":"40826:6:30"},"nativeSrc":"40826:15:30","nodeType":"YulFunctionCall","src":"40826:15:30"},"nativeSrc":"40826:15:30","nodeType":"YulExpressionStatement","src":"40826:15:30"}]},"name":"panic_error_0x11","nativeSrc":"40667:180:30","nodeType":"YulFunctionDefinition","src":"40667:180:30"},{"body":{"nativeSrc":"40896:190:30","nodeType":"YulBlock","src":"40896:190:30","statements":[{"nativeSrc":"40906:33:30","nodeType":"YulAssignment","src":"40906:33:30","value":{"arguments":[{"name":"value","nativeSrc":"40933:5:30","nodeType":"YulIdentifier","src":"40933:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"40915:17:30","nodeType":"YulIdentifier","src":"40915:17:30"},"nativeSrc":"40915:24:30","nodeType":"YulFunctionCall","src":"40915:24:30"},"variableNames":[{"name":"value","nativeSrc":"40906:5:30","nodeType":"YulIdentifier","src":"40906:5:30"}]},{"body":{"nativeSrc":"41029:22:30","nodeType":"YulBlock","src":"41029:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"41031:16:30","nodeType":"YulIdentifier","src":"41031:16:30"},"nativeSrc":"41031:18:30","nodeType":"YulFunctionCall","src":"41031:18:30"},"nativeSrc":"41031:18:30","nodeType":"YulExpressionStatement","src":"41031:18:30"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"40954:5:30","nodeType":"YulIdentifier","src":"40954:5:30"},{"kind":"number","nativeSrc":"40961:66:30","nodeType":"YulLiteral","src":"40961:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"40951:2:30","nodeType":"YulIdentifier","src":"40951:2:30"},"nativeSrc":"40951:77:30","nodeType":"YulFunctionCall","src":"40951:77:30"},"nativeSrc":"40948:103:30","nodeType":"YulIf","src":"40948:103:30"},{"nativeSrc":"41060:20:30","nodeType":"YulAssignment","src":"41060:20:30","value":{"arguments":[{"name":"value","nativeSrc":"41071:5:30","nodeType":"YulIdentifier","src":"41071:5:30"},{"kind":"number","nativeSrc":"41078:1:30","nodeType":"YulLiteral","src":"41078:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"41067:3:30","nodeType":"YulIdentifier","src":"41067:3:30"},"nativeSrc":"41067:13:30","nodeType":"YulFunctionCall","src":"41067:13:30"},"variableNames":[{"name":"ret","nativeSrc":"41060:3:30","nodeType":"YulIdentifier","src":"41060:3:30"}]}]},"name":"increment_t_uint256","nativeSrc":"40853:233:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"40882:5:30","nodeType":"YulTypedName","src":"40882:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"40892:3:30","nodeType":"YulTypedName","src":"40892:3:30","type":""}],"src":"40853:233:30"},{"body":{"nativeSrc":"41292:440:30","nodeType":"YulBlock","src":"41292:440:30","statements":[{"nativeSrc":"41302:27:30","nodeType":"YulAssignment","src":"41302:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"41314:9:30","nodeType":"YulIdentifier","src":"41314:9:30"},{"kind":"number","nativeSrc":"41325:3:30","nodeType":"YulLiteral","src":"41325:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"41310:3:30","nodeType":"YulIdentifier","src":"41310:3:30"},"nativeSrc":"41310:19:30","nodeType":"YulFunctionCall","src":"41310:19:30"},"variableNames":[{"name":"tail","nativeSrc":"41302:4:30","nodeType":"YulIdentifier","src":"41302:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"41383:6:30","nodeType":"YulIdentifier","src":"41383:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"41396:9:30","nodeType":"YulIdentifier","src":"41396:9:30"},{"kind":"number","nativeSrc":"41407:1:30","nodeType":"YulLiteral","src":"41407:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41392:3:30","nodeType":"YulIdentifier","src":"41392:3:30"},"nativeSrc":"41392:17:30","nodeType":"YulFunctionCall","src":"41392:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"41339:43:30","nodeType":"YulIdentifier","src":"41339:43:30"},"nativeSrc":"41339:71:30","nodeType":"YulFunctionCall","src":"41339:71:30"},"nativeSrc":"41339:71:30","nodeType":"YulExpressionStatement","src":"41339:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"41464:6:30","nodeType":"YulIdentifier","src":"41464:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"41477:9:30","nodeType":"YulIdentifier","src":"41477:9:30"},{"kind":"number","nativeSrc":"41488:2:30","nodeType":"YulLiteral","src":"41488:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41473:3:30","nodeType":"YulIdentifier","src":"41473:3:30"},"nativeSrc":"41473:18:30","nodeType":"YulFunctionCall","src":"41473:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"41420:43:30","nodeType":"YulIdentifier","src":"41420:43:30"},"nativeSrc":"41420:72:30","nodeType":"YulFunctionCall","src":"41420:72:30"},"nativeSrc":"41420:72:30","nodeType":"YulExpressionStatement","src":"41420:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"41546:6:30","nodeType":"YulIdentifier","src":"41546:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"41559:9:30","nodeType":"YulIdentifier","src":"41559:9:30"},{"kind":"number","nativeSrc":"41570:2:30","nodeType":"YulLiteral","src":"41570:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"41555:3:30","nodeType":"YulIdentifier","src":"41555:3:30"},"nativeSrc":"41555:18:30","nodeType":"YulFunctionCall","src":"41555:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"41502:43:30","nodeType":"YulIdentifier","src":"41502:43:30"},"nativeSrc":"41502:72:30","nodeType":"YulFunctionCall","src":"41502:72:30"},"nativeSrc":"41502:72:30","nodeType":"YulExpressionStatement","src":"41502:72:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"41595:9:30","nodeType":"YulIdentifier","src":"41595:9:30"},{"kind":"number","nativeSrc":"41606:2:30","nodeType":"YulLiteral","src":"41606:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"41591:3:30","nodeType":"YulIdentifier","src":"41591:3:30"},"nativeSrc":"41591:18:30","nodeType":"YulFunctionCall","src":"41591:18:30"},{"arguments":[{"name":"tail","nativeSrc":"41615:4:30","nodeType":"YulIdentifier","src":"41615:4:30"},{"name":"headStart","nativeSrc":"41621:9:30","nodeType":"YulIdentifier","src":"41621:9:30"}],"functionName":{"name":"sub","nativeSrc":"41611:3:30","nodeType":"YulIdentifier","src":"41611:3:30"},"nativeSrc":"41611:20:30","nodeType":"YulFunctionCall","src":"41611:20:30"}],"functionName":{"name":"mstore","nativeSrc":"41584:6:30","nodeType":"YulIdentifier","src":"41584:6:30"},"nativeSrc":"41584:48:30","nodeType":"YulFunctionCall","src":"41584:48:30"},"nativeSrc":"41584:48:30","nodeType":"YulExpressionStatement","src":"41584:48:30"},{"nativeSrc":"41641:84:30","nodeType":"YulAssignment","src":"41641:84:30","value":{"arguments":[{"name":"value3","nativeSrc":"41711:6:30","nodeType":"YulIdentifier","src":"41711:6:30"},{"name":"tail","nativeSrc":"41720:4:30","nodeType":"YulIdentifier","src":"41720:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"41649:61:30","nodeType":"YulIdentifier","src":"41649:61:30"},"nativeSrc":"41649:76:30","nodeType":"YulFunctionCall","src":"41649:76:30"},"variableNames":[{"name":"tail","nativeSrc":"41641:4:30","nodeType":"YulIdentifier","src":"41641:4:30"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"41092:640:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41240:9:30","nodeType":"YulTypedName","src":"41240:9:30","type":""},{"name":"value3","nativeSrc":"41252:6:30","nodeType":"YulTypedName","src":"41252:6:30","type":""},{"name":"value2","nativeSrc":"41260:6:30","nodeType":"YulTypedName","src":"41260:6:30","type":""},{"name":"value1","nativeSrc":"41268:6:30","nodeType":"YulTypedName","src":"41268:6:30","type":""},{"name":"value0","nativeSrc":"41276:6:30","nodeType":"YulTypedName","src":"41276:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"41287:4:30","nodeType":"YulTypedName","src":"41287:4:30","type":""}],"src":"41092:640:30"},{"body":{"nativeSrc":"41800:79:30","nodeType":"YulBlock","src":"41800:79:30","statements":[{"nativeSrc":"41810:22:30","nodeType":"YulAssignment","src":"41810:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"41825:6:30","nodeType":"YulIdentifier","src":"41825:6:30"}],"functionName":{"name":"mload","nativeSrc":"41819:5:30","nodeType":"YulIdentifier","src":"41819:5:30"},"nativeSrc":"41819:13:30","nodeType":"YulFunctionCall","src":"41819:13:30"},"variableNames":[{"name":"value","nativeSrc":"41810:5:30","nodeType":"YulIdentifier","src":"41810:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"41867:5:30","nodeType":"YulIdentifier","src":"41867:5:30"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"41841:25:30","nodeType":"YulIdentifier","src":"41841:25:30"},"nativeSrc":"41841:32:30","nodeType":"YulFunctionCall","src":"41841:32:30"},"nativeSrc":"41841:32:30","nodeType":"YulExpressionStatement","src":"41841:32:30"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"41738:141:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"41778:6:30","nodeType":"YulTypedName","src":"41778:6:30","type":""},{"name":"end","nativeSrc":"41786:3:30","nodeType":"YulTypedName","src":"41786:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"41794:5:30","nodeType":"YulTypedName","src":"41794:5:30","type":""}],"src":"41738:141:30"},{"body":{"nativeSrc":"41961:273:30","nodeType":"YulBlock","src":"41961:273:30","statements":[{"body":{"nativeSrc":"42007:83:30","nodeType":"YulBlock","src":"42007:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"42009:77:30","nodeType":"YulIdentifier","src":"42009:77:30"},"nativeSrc":"42009:79:30","nodeType":"YulFunctionCall","src":"42009:79:30"},"nativeSrc":"42009:79:30","nodeType":"YulExpressionStatement","src":"42009:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"41982:7:30","nodeType":"YulIdentifier","src":"41982:7:30"},{"name":"headStart","nativeSrc":"41991:9:30","nodeType":"YulIdentifier","src":"41991:9:30"}],"functionName":{"name":"sub","nativeSrc":"41978:3:30","nodeType":"YulIdentifier","src":"41978:3:30"},"nativeSrc":"41978:23:30","nodeType":"YulFunctionCall","src":"41978:23:30"},{"kind":"number","nativeSrc":"42003:2:30","nodeType":"YulLiteral","src":"42003:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"41974:3:30","nodeType":"YulIdentifier","src":"41974:3:30"},"nativeSrc":"41974:32:30","nodeType":"YulFunctionCall","src":"41974:32:30"},"nativeSrc":"41971:119:30","nodeType":"YulIf","src":"41971:119:30"},{"nativeSrc":"42100:127:30","nodeType":"YulBlock","src":"42100:127:30","statements":[{"nativeSrc":"42115:15:30","nodeType":"YulVariableDeclaration","src":"42115:15:30","value":{"kind":"number","nativeSrc":"42129:1:30","nodeType":"YulLiteral","src":"42129:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"42119:6:30","nodeType":"YulTypedName","src":"42119:6:30","type":""}]},{"nativeSrc":"42144:73:30","nodeType":"YulAssignment","src":"42144:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"42189:9:30","nodeType":"YulIdentifier","src":"42189:9:30"},{"name":"offset","nativeSrc":"42200:6:30","nodeType":"YulIdentifier","src":"42200:6:30"}],"functionName":{"name":"add","nativeSrc":"42185:3:30","nodeType":"YulIdentifier","src":"42185:3:30"},"nativeSrc":"42185:22:30","nodeType":"YulFunctionCall","src":"42185:22:30"},{"name":"dataEnd","nativeSrc":"42209:7:30","nodeType":"YulIdentifier","src":"42209:7:30"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"42154:30:30","nodeType":"YulIdentifier","src":"42154:30:30"},"nativeSrc":"42154:63:30","nodeType":"YulFunctionCall","src":"42154:63:30"},"variableNames":[{"name":"value0","nativeSrc":"42144:6:30","nodeType":"YulIdentifier","src":"42144:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"41885:349:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41931:9:30","nodeType":"YulTypedName","src":"41931:9:30","type":""},{"name":"dataEnd","nativeSrc":"41942:7:30","nodeType":"YulTypedName","src":"41942:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"41954:6:30","nodeType":"YulTypedName","src":"41954:6:30","type":""}],"src":"41885:349:30"},{"body":{"nativeSrc":"42366:206:30","nodeType":"YulBlock","src":"42366:206:30","statements":[{"nativeSrc":"42376:26:30","nodeType":"YulAssignment","src":"42376:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"42388:9:30","nodeType":"YulIdentifier","src":"42388:9:30"},{"kind":"number","nativeSrc":"42399:2:30","nodeType":"YulLiteral","src":"42399:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"42384:3:30","nodeType":"YulIdentifier","src":"42384:3:30"},"nativeSrc":"42384:18:30","nodeType":"YulFunctionCall","src":"42384:18:30"},"variableNames":[{"name":"tail","nativeSrc":"42376:4:30","nodeType":"YulIdentifier","src":"42376:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"42456:6:30","nodeType":"YulIdentifier","src":"42456:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"42469:9:30","nodeType":"YulIdentifier","src":"42469:9:30"},{"kind":"number","nativeSrc":"42480:1:30","nodeType":"YulLiteral","src":"42480:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"42465:3:30","nodeType":"YulIdentifier","src":"42465:3:30"},"nativeSrc":"42465:17:30","nodeType":"YulFunctionCall","src":"42465:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"42412:43:30","nodeType":"YulIdentifier","src":"42412:43:30"},"nativeSrc":"42412:71:30","nodeType":"YulFunctionCall","src":"42412:71:30"},"nativeSrc":"42412:71:30","nodeType":"YulExpressionStatement","src":"42412:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"42537:6:30","nodeType":"YulIdentifier","src":"42537:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"42550:9:30","nodeType":"YulIdentifier","src":"42550:9:30"},{"kind":"number","nativeSrc":"42561:2:30","nodeType":"YulLiteral","src":"42561:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"42546:3:30","nodeType":"YulIdentifier","src":"42546:3:30"},"nativeSrc":"42546:18:30","nodeType":"YulFunctionCall","src":"42546:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"42493:43:30","nodeType":"YulIdentifier","src":"42493:43:30"},"nativeSrc":"42493:72:30","nodeType":"YulFunctionCall","src":"42493:72:30"},"nativeSrc":"42493:72:30","nodeType":"YulExpressionStatement","src":"42493:72:30"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"42240:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"42330:9:30","nodeType":"YulTypedName","src":"42330:9:30","type":""},{"name":"value1","nativeSrc":"42342:6:30","nodeType":"YulTypedName","src":"42342:6:30","type":""},{"name":"value0","nativeSrc":"42350:6:30","nodeType":"YulTypedName","src":"42350:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"42361:4:30","nodeType":"YulTypedName","src":"42361:4:30","type":""}],"src":"42240:332:30"},{"body":{"nativeSrc":"42691:34:30","nodeType":"YulBlock","src":"42691:34:30","statements":[{"nativeSrc":"42701:18:30","nodeType":"YulAssignment","src":"42701:18:30","value":{"name":"pos","nativeSrc":"42716:3:30","nodeType":"YulIdentifier","src":"42716:3:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"42701:11:30","nodeType":"YulIdentifier","src":"42701:11:30"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"42578:147:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"42663:3:30","nodeType":"YulTypedName","src":"42663:3:30","type":""},{"name":"length","nativeSrc":"42668:6:30","nodeType":"YulTypedName","src":"42668:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"42679:11:30","nodeType":"YulTypedName","src":"42679:11:30","type":""}],"src":"42578:147:30"},{"body":{"nativeSrc":"42839:278:30","nodeType":"YulBlock","src":"42839:278:30","statements":[{"nativeSrc":"42849:52:30","nodeType":"YulVariableDeclaration","src":"42849:52:30","value":{"arguments":[{"name":"value","nativeSrc":"42895:5:30","nodeType":"YulIdentifier","src":"42895:5:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"42863:31:30","nodeType":"YulIdentifier","src":"42863:31:30"},"nativeSrc":"42863:38:30","nodeType":"YulFunctionCall","src":"42863:38:30"},"variables":[{"name":"length","nativeSrc":"42853:6:30","nodeType":"YulTypedName","src":"42853:6:30","type":""}]},{"nativeSrc":"42910:95:30","nodeType":"YulAssignment","src":"42910:95:30","value":{"arguments":[{"name":"pos","nativeSrc":"42993:3:30","nodeType":"YulIdentifier","src":"42993:3:30"},{"name":"length","nativeSrc":"42998:6:30","nodeType":"YulIdentifier","src":"42998:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"42917:75:30","nodeType":"YulIdentifier","src":"42917:75:30"},"nativeSrc":"42917:88:30","nodeType":"YulFunctionCall","src":"42917:88:30"},"variableNames":[{"name":"pos","nativeSrc":"42910:3:30","nodeType":"YulIdentifier","src":"42910:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"43053:5:30","nodeType":"YulIdentifier","src":"43053:5:30"},{"kind":"number","nativeSrc":"43060:4:30","nodeType":"YulLiteral","src":"43060:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"43049:3:30","nodeType":"YulIdentifier","src":"43049:3:30"},"nativeSrc":"43049:16:30","nodeType":"YulFunctionCall","src":"43049:16:30"},{"name":"pos","nativeSrc":"43067:3:30","nodeType":"YulIdentifier","src":"43067:3:30"},{"name":"length","nativeSrc":"43072:6:30","nodeType":"YulIdentifier","src":"43072:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"43014:34:30","nodeType":"YulIdentifier","src":"43014:34:30"},"nativeSrc":"43014:65:30","nodeType":"YulFunctionCall","src":"43014:65:30"},"nativeSrc":"43014:65:30","nodeType":"YulExpressionStatement","src":"43014:65:30"},{"nativeSrc":"43088:23:30","nodeType":"YulAssignment","src":"43088:23:30","value":{"arguments":[{"name":"pos","nativeSrc":"43099:3:30","nodeType":"YulIdentifier","src":"43099:3:30"},{"name":"length","nativeSrc":"43104:6:30","nodeType":"YulIdentifier","src":"43104:6:30"}],"functionName":{"name":"add","nativeSrc":"43095:3:30","nodeType":"YulIdentifier","src":"43095:3:30"},"nativeSrc":"43095:16:30","nodeType":"YulFunctionCall","src":"43095:16:30"},"variableNames":[{"name":"end","nativeSrc":"43088:3:30","nodeType":"YulIdentifier","src":"43088:3:30"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"42731:386:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"42820:5:30","nodeType":"YulTypedName","src":"42820:5:30","type":""},{"name":"pos","nativeSrc":"42827:3:30","nodeType":"YulTypedName","src":"42827:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"42835:3:30","nodeType":"YulTypedName","src":"42835:3:30","type":""}],"src":"42731:386:30"},{"body":{"nativeSrc":"43257:137:30","nodeType":"YulBlock","src":"43257:137:30","statements":[{"nativeSrc":"43268:100:30","nodeType":"YulAssignment","src":"43268:100:30","value":{"arguments":[{"name":"value0","nativeSrc":"43355:6:30","nodeType":"YulIdentifier","src":"43355:6:30"},{"name":"pos","nativeSrc":"43364:3:30","nodeType":"YulIdentifier","src":"43364:3:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"43275:79:30","nodeType":"YulIdentifier","src":"43275:79:30"},"nativeSrc":"43275:93:30","nodeType":"YulFunctionCall","src":"43275:93:30"},"variableNames":[{"name":"pos","nativeSrc":"43268:3:30","nodeType":"YulIdentifier","src":"43268:3:30"}]},{"nativeSrc":"43378:10:30","nodeType":"YulAssignment","src":"43378:10:30","value":{"name":"pos","nativeSrc":"43385:3:30","nodeType":"YulIdentifier","src":"43385:3:30"},"variableNames":[{"name":"end","nativeSrc":"43378:3:30","nodeType":"YulIdentifier","src":"43378:3:30"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"43123:271:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"43236:3:30","nodeType":"YulTypedName","src":"43236:3:30","type":""},{"name":"value0","nativeSrc":"43242:6:30","nodeType":"YulTypedName","src":"43242:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"43253:3:30","nodeType":"YulTypedName","src":"43253:3:30","type":""}],"src":"43123:271:30"},{"body":{"nativeSrc":"43443:43:30","nodeType":"YulBlock","src":"43443:43:30","statements":[{"nativeSrc":"43453:27:30","nodeType":"YulAssignment","src":"43453:27:30","value":{"arguments":[{"name":"value","nativeSrc":"43468:5:30","nodeType":"YulIdentifier","src":"43468:5:30"},{"kind":"number","nativeSrc":"43475:4:30","nodeType":"YulLiteral","src":"43475:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"43464:3:30","nodeType":"YulIdentifier","src":"43464:3:30"},"nativeSrc":"43464:16:30","nodeType":"YulFunctionCall","src":"43464:16:30"},"variableNames":[{"name":"cleaned","nativeSrc":"43453:7:30","nodeType":"YulIdentifier","src":"43453:7:30"}]}]},"name":"cleanup_t_uint8","nativeSrc":"43400:86:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"43425:5:30","nodeType":"YulTypedName","src":"43425:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"43435:7:30","nodeType":"YulTypedName","src":"43435:7:30","type":""}],"src":"43400:86:30"},{"body":{"nativeSrc":"43553:51:30","nodeType":"YulBlock","src":"43553:51:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"43570:3:30","nodeType":"YulIdentifier","src":"43570:3:30"},{"arguments":[{"name":"value","nativeSrc":"43591:5:30","nodeType":"YulIdentifier","src":"43591:5:30"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"43575:15:30","nodeType":"YulIdentifier","src":"43575:15:30"},"nativeSrc":"43575:22:30","nodeType":"YulFunctionCall","src":"43575:22:30"}],"functionName":{"name":"mstore","nativeSrc":"43563:6:30","nodeType":"YulIdentifier","src":"43563:6:30"},"nativeSrc":"43563:35:30","nodeType":"YulFunctionCall","src":"43563:35:30"},"nativeSrc":"43563:35:30","nodeType":"YulExpressionStatement","src":"43563:35:30"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"43492:112:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"43541:5:30","nodeType":"YulTypedName","src":"43541:5:30","type":""},{"name":"pos","nativeSrc":"43548:3:30","nodeType":"YulTypedName","src":"43548:3:30","type":""}],"src":"43492:112:30"},{"body":{"nativeSrc":"43788:367:30","nodeType":"YulBlock","src":"43788:367:30","statements":[{"nativeSrc":"43798:27:30","nodeType":"YulAssignment","src":"43798:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"43810:9:30","nodeType":"YulIdentifier","src":"43810:9:30"},{"kind":"number","nativeSrc":"43821:3:30","nodeType":"YulLiteral","src":"43821:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"43806:3:30","nodeType":"YulIdentifier","src":"43806:3:30"},"nativeSrc":"43806:19:30","nodeType":"YulFunctionCall","src":"43806:19:30"},"variableNames":[{"name":"tail","nativeSrc":"43798:4:30","nodeType":"YulIdentifier","src":"43798:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"43879:6:30","nodeType":"YulIdentifier","src":"43879:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"43892:9:30","nodeType":"YulIdentifier","src":"43892:9:30"},{"kind":"number","nativeSrc":"43903:1:30","nodeType":"YulLiteral","src":"43903:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43888:3:30","nodeType":"YulIdentifier","src":"43888:3:30"},"nativeSrc":"43888:17:30","nodeType":"YulFunctionCall","src":"43888:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"43835:43:30","nodeType":"YulIdentifier","src":"43835:43:30"},"nativeSrc":"43835:71:30","nodeType":"YulFunctionCall","src":"43835:71:30"},"nativeSrc":"43835:71:30","nodeType":"YulExpressionStatement","src":"43835:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"43956:6:30","nodeType":"YulIdentifier","src":"43956:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"43969:9:30","nodeType":"YulIdentifier","src":"43969:9:30"},{"kind":"number","nativeSrc":"43980:2:30","nodeType":"YulLiteral","src":"43980:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"43965:3:30","nodeType":"YulIdentifier","src":"43965:3:30"},"nativeSrc":"43965:18:30","nodeType":"YulFunctionCall","src":"43965:18:30"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"43916:39:30","nodeType":"YulIdentifier","src":"43916:39:30"},"nativeSrc":"43916:68:30","nodeType":"YulFunctionCall","src":"43916:68:30"},"nativeSrc":"43916:68:30","nodeType":"YulExpressionStatement","src":"43916:68:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"44038:6:30","nodeType":"YulIdentifier","src":"44038:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"44051:9:30","nodeType":"YulIdentifier","src":"44051:9:30"},{"kind":"number","nativeSrc":"44062:2:30","nodeType":"YulLiteral","src":"44062:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"44047:3:30","nodeType":"YulIdentifier","src":"44047:3:30"},"nativeSrc":"44047:18:30","nodeType":"YulFunctionCall","src":"44047:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"43994:43:30","nodeType":"YulIdentifier","src":"43994:43:30"},"nativeSrc":"43994:72:30","nodeType":"YulFunctionCall","src":"43994:72:30"},"nativeSrc":"43994:72:30","nodeType":"YulExpressionStatement","src":"43994:72:30"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"44120:6:30","nodeType":"YulIdentifier","src":"44120:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"44133:9:30","nodeType":"YulIdentifier","src":"44133:9:30"},{"kind":"number","nativeSrc":"44144:2:30","nodeType":"YulLiteral","src":"44144:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"44129:3:30","nodeType":"YulIdentifier","src":"44129:3:30"},"nativeSrc":"44129:18:30","nodeType":"YulFunctionCall","src":"44129:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"44076:43:30","nodeType":"YulIdentifier","src":"44076:43:30"},"nativeSrc":"44076:72:30","nodeType":"YulFunctionCall","src":"44076:72:30"},"nativeSrc":"44076:72:30","nodeType":"YulExpressionStatement","src":"44076:72:30"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"43610:545:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43736:9:30","nodeType":"YulTypedName","src":"43736:9:30","type":""},{"name":"value3","nativeSrc":"43748:6:30","nodeType":"YulTypedName","src":"43748:6:30","type":""},{"name":"value2","nativeSrc":"43756:6:30","nodeType":"YulTypedName","src":"43756:6:30","type":""},{"name":"value1","nativeSrc":"43764:6:30","nodeType":"YulTypedName","src":"43764:6:30","type":""},{"name":"value0","nativeSrc":"43772:6:30","nodeType":"YulTypedName","src":"43772:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"43783:4:30","nodeType":"YulTypedName","src":"43783:4:30","type":""}],"src":"43610:545:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_CredentialStatus_$7802(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_CredentialStatus_$7802(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_CredentialStatus_$7802(value)\n    }\n\n    function convert_t_enum$_CredentialStatus_$7802_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_CredentialStatus_$7802(value)\n    }\n\n    function abi_encode_t_enum$_CredentialStatus_$7802_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_CredentialStatus_$7802_to_t_uint8(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_enum$_CredentialStatus_$7802_t_bytes_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_uint8_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_enum$_CredentialStatus_$7802_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is already a manager\")\n\n    }\n\n    function abi_encode_t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d300440778868b67e4ad180edd081375ad0c186c6c99b4c1e29367394cf2f049_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is already an institutio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bde55cee20c11299ac0ba43ab576f24a1762e9a56da9c1e622a609cc770911b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is already an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_528a5d031008c7e6f42fcaea9f5d7b5e5a0643c168c6be06f3c7b542864bb6d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token ID already exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f742ec7709e2cec503556624f22d5e85ae3361c9549decbafeb45cd38737f563_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53(memPtr) {\n\n        mstore(add(memPtr, 0), \"The IPFS URI is already issued f\")\n\n        mstore(add(memPtr, 32), \"or a credential\")\n\n    }\n\n    function abi_encode_t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7249f76df352d0300251758e38b219bfc0d347df7e6b9e4c8719f3e112031f53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is not an institution\")\n\n    }\n\n    function abi_encode_t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_22dad10238ebf79b739f290bf9b844b70a3ee33c17961474eaf7cc5631fc8216_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is not a manager\")\n\n    }\n\n    function abi_encode_t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4e0dedd3a9f48fef7d49f1f3abde1d1aa9602a9a7a0de481ef2a556a7b8407fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Credential is already REVOKED\")\n\n    }\n\n    function abi_encode_t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9de7f90ce22577a0258c594d1b119f86561530a2e229dd58108ce677ca7ad1c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_enum$_CredentialStatus_$7802_t_enum$_CredentialStatus_$7802_t_string_memory_ptr__to_t_uint8_t_uint8_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_enum$_CredentialStatus_$7802_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_CredentialStatus_$7802_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"636":[{"length":32,"start":10052},{"length":32,"start":10137},{"length":32,"start":10614}]},"linkReferences":{},"object":"60806040526004361061021a5760003560e01c806370a0823111610123578063a217fddf116100ab578063d547741f1161006f578063d547741f146107be578063e0574e3f146107e7578063e985e9c514610828578063ec87621c14610865578063f06d80fc146108905761021a565b8063a217fddf146106d9578063a22cb46514610704578063ad3cb1cc1461072d578063b88d4fde14610758578063c87b56dd146107815761021a565b8063896695de116100f2578063896695de146105e257806391d148541461060b578063957a32051461064857806395d89b411461067157806398a3410d1461069c5761021a565b806370a082311461054e5780637baa47d91461058b5780638129fc1c146105b45780638456cb59146105cb5761021a565b80632f2ff15d116101a65780634f1ef286116101755780634f1ef2861461047657806352d1902d14610492578063593dc75c146104bd5780635c975abb146104e65780636352211e146105115761021a565b80632f2ff15d146103e457806336568abe1461040d5780633f4ba83a1461043657806342842e0e1461044d5761021a565b80631b929c21116101ed5780631b929c21146102ed5780631b9519a81461031857806323b872dd14610355578063248a9ca31461037e5780632b2da97e146103bb5761021a565b806301ffc9a71461021f57806306fdde031461025c578063081812fc14610287578063095ea7b3146102c4575b600080fd5b34801561022b57600080fd5b5061024660048036038101906102419190613c8f565b6108b9565b6040516102539190613cd7565b60405180910390f35b34801561026857600080fd5b506102716108cb565b60405161027e9190613d82565b60405180910390f35b34801561029357600080fd5b506102ae60048036038101906102a99190613dda565b61096c565b6040516102bb9190613e48565b60405180910390f35b3480156102d057600080fd5b506102eb60048036038101906102e69190613e8f565b610988565b005b3480156102f957600080fd5b5061030261099e565b60405161030f9190613ee8565b60405180910390f35b34801561032457600080fd5b5061033f600480360381019061033a9190613f2f565b6109c2565b60405161034c9190613cd7565b60405180910390f35b34801561036157600080fd5b5061037c60048036038101906103779190613f6f565b610b05565b005b34801561038a57600080fd5b506103a560048036038101906103a09190613fc2565b610c07565b6040516103b29190613ee8565b60405180910390f35b3480156103c757600080fd5b506103e260048036038101906103dd9190613fef565b610c35565b005b3480156103f057600080fd5b5061040b6004803603810190610406919061401c565b610dd3565b005b34801561041957600080fd5b50610434600480360381019061042f919061401c565b610df5565b005b34801561044257600080fd5b5061044b610e70565b005b34801561045957600080fd5b50610474600480360381019061046f9190613f6f565b610ea4565b005b610490600480360381019061048b9190614191565b610ec4565b005b34801561049e57600080fd5b506104a7610ee3565b6040516104b49190613ee8565b60405180910390f35b3480156104c957600080fd5b506104e460048036038101906104df919061428e565b610f16565b005b3480156104f257600080fd5b506104fb611212565b6040516105089190613cd7565b60405180910390f35b34801561051d57600080fd5b5061053860048036038101906105339190613dda565b611237565b6040516105459190613e48565b60405180910390f35b34801561055a57600080fd5b5061057560048036038101906105709190613fef565b611249565b604051610582919061433c565b60405180910390f35b34801561059757600080fd5b506105b260048036038101906105ad9190614357565b611312565b005b3480156105c057600080fd5b506105c9611421565b005b3480156105d757600080fd5b506105e0611640565b005b3480156105ee57600080fd5b5061060960048036038101906106049190614357565b611674565b005b34801561061757600080fd5b50610632600480360381019061062d919061401c565b611766565b60405161063f9190613cd7565b60405180910390f35b34801561065457600080fd5b5061066f600480360381019061066a91906143b3565b6117df565b005b34801561067d57600080fd5b50610686611976565b6040516106939190613d82565b60405180910390f35b3480156106a857600080fd5b506106c360048036038101906106be919061440f565b611a17565b6040516106d09190613cd7565b60405180910390f35b3480156106e557600080fd5b506106ee611a76565b6040516106fb9190613ee8565b60405180910390f35b34801561071057600080fd5b5061072b600480360381019061072691906144aa565b611a7d565b005b34801561073957600080fd5b50610742611a93565b60405161074f9190613d82565b60405180910390f35b34801561076457600080fd5b5061077f600480360381019061077a91906144ea565b611acc565b005b34801561078d57600080fd5b506107a860048036038101906107a39190613dda565b611af1565b6040516107b59190613d82565b60405180910390f35b3480156107ca57600080fd5b506107e560048036038101906107e0919061401c565b611be1565b005b3480156107f357600080fd5b5061080e60048036038101906108099190613dda565b611c03565b60405161081f959493929190614639565b60405180910390f35b34801561083457600080fd5b5061084f600480360381019061084a919061469a565b611d76565b60405161085c9190613cd7565b60405180910390f35b34801561087157600080fd5b5061087a611e18565b6040516108879190613ee8565b60405180910390f35b34801561089c57600080fd5b506108b760048036038101906108b29190613fef565b611e3c565b005b60006108c482611ff7565b9050919050565b606060006108d7612071565b90508060000180546108e890614709565b80601f016020809104026020016040519081016040528092919081815260200182805461091490614709565b80156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b505050505091505090565b600061097782612099565b5061098182612121565b9050919050565b61099a828261099561216c565b612174565b5050565b7f01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d181565b60006109cd83612186565b610a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0390614786565b60405180910390fd5b6000600260008581526020019081526020016000206003018054610a2f90614709565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5b90614709565b8015610aa85780601f10610a7d57610100808354040283529160200191610aa8565b820191906000526020600020905b815481529060010190602001808311610a8b57829003601f168201915b5050505050905060006002600086815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610af7858385611a17565b905080935050505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b775760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610b6e9190613e48565b60405180910390fd5b6000610b8b8383610b8661216c565b612213565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c01578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610bf8939291906147a6565b60405180910390fd5b50505050565b600080610c12612440565b905080600001600084815260200190815260200160002060010154915050919050565b610c426000801b33612468565b610c6c7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0882611766565b15610cac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca390614829565b60405180910390fd5b610cd67f01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d182611766565b15610d16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0d906148bb565b60405180910390fd5b610d236000801b82611766565b15610d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5a90614927565b60405180910390fd5b610d8d7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0882610dd3565b8073ffffffffffffffffffffffffffffffffffffffff167f594022ae30f535100bd2169ab77ab37c1dba3d7e89d04bd6bf17b121a3ca7c2560405160405180910390a250565b610ddc82610c07565b610de5816124b9565b610def83836124cd565b50505050565b610dfd61216c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e61576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e6b82826125ce565b505050565b610e9a7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0833612468565b610ea26126d0565b565b610ebf83838360405180602001604052806000815250611acc565b505050565b610ecc612742565b610ed582612828565b610edf8282612855565b5050565b6000610eed612974565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b610f407f01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d133612468565b610f486129fb565b610f50612a3c565b610f58612a82565b6000610f62612a9c565b90506000600260008381526020019081526020016000206000015414610fbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb490614993565b60405180910390fd5b6000600385604051610fcf91906149ef565b9081526020016040518091039020541461101e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101590614a78565b60405180910390fd5b611029833384611a17565b611068576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105f90614ae4565b60405180910390fd5b6040518060a00160405280828152602001858152602001600060018111156110935761109261456d565b5b81526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250600260008381526020019081526020016000206000820151816000015560208201518160010190816110ea9190614cb0565b5060408201518160020160006101000a81548160ff021916908360018111156111165761111561456d565b5b021790555060608201518160030190816111309190614ddd565b5060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508060038560405161118c91906149ef565b9081526020016040518091039020819055506111a88582612aa6565b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16827fd3bd681d2fe91fda330d69feca5dc6a668f4862360861444de295f833e35105360405160405180910390a45061120c612b9f565b50505050565b60008061121d612ba9565b90508060000160009054906101000a900460ff1691505090565b600061124282612099565b9050919050565b600080611254612071565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112c85760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016112bf9190613e48565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b61133c7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0833612468565b6113667f01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d183611766565b6113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139c90614efb565b60405180910390fd5b6113cf7f01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d183611be1565b8173ffffffffffffffffffffffffffffffffffffffff167fac234b0e1c8c07e26dc3f3271849babac0394b68f7d0e15f1b8d9ea28d482dfd826040516114159190613d82565b60405180910390a25050565b600061142b612bd1565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156114795750825b9050600060018367ffffffffffffffff161480156114ae575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156114bc575080155b156114f3576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156115435760018560000160086101000a81548160ff0219169083151502179055505b6115b76040518060400160405280601481526020017f41636164656d69632043726564656e7469616c730000000000000000000000008152506040518060400160405280600581526020017f4143524544000000000000000000000000000000000000000000000000000000815250612bf9565b6115bf612c0f565b6115c7612c19565b6115cf612c2b565b6115dc6000801b336124cd565b5083156116395760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516116309190614f6a565b60405180910390a15b5050505050565b61166a7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0833612468565b611672612c35565b565b6116816000801b33612468565b6116ab7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0883611766565b6116ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e190614fd1565b60405180910390fd5b6117147f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0883611be1565b8173ffffffffffffffffffffffffffffffffffffffff167f2a65d71ddd7e0fc167105c9d6a51832464fca91d67b3d8871c2ed3d1fab227878260405161175a9190613d82565b60405180910390a25050565b600080611771612440565b905080600001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6118097f01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d133612468565b611811612a3c565b61181a82612186565b611859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185090614786565b60405180910390fd5b6000600260008481526020019081526020016000209050600060018111156118845761188361456d565b5b8160020160009054906101000a900460ff1660018111156118a8576118a761456d565b5b146118e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118df9061503d565b60405180910390fd5b60008160020160009054906101000a900460ff16905060018260020160006101000a81548160ff021916908360018111156119265761192561456d565b5b0217905550837f2840fba00bdcda6213ac8f2df6bd0eaa93c78b71e752268cef89210a1705e4ef826001866040516119609392919061505d565b60405180910390a25050611972612b9f565b5050565b60606000611982612071565b905080600101805461199390614709565b80601f01602080910402602001604051908101604052809291908181526020018280546119bf90614709565b8015611a0c5780601f106119e157610100808354040283529160200191611a0c565b820191906000526020600020905b8154815290600101906020018083116119ef57829003601f168201915b505050505091505090565b600080611a2385612ca7565b90506000611a3a8483612cdd90919063ffffffff16565b90508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b6000801b81565b611a8f611a8861216c565b8383612d09565b5050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b611ad7848484610b05565b611aeb611ae261216c565b85858585612e87565b50505050565b6060611afc82612186565b611b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3290614786565b60405180910390fd5b600260008381526020019081526020016000206001018054611b5c90614709565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8890614709565b8015611bd55780601f10611baa57610100808354040283529160200191611bd5565b820191906000526020600020905b815481529060010190602001808311611bb857829003601f168201915b50505050509050919050565b611bea82610c07565b611bf3816124b9565b611bfd83836125ce565b50505050565b6002602052806000526040600020600091509050806000015490806001018054611c2c90614709565b80601f0160208091040260200160405190810160405280929190818152602001828054611c5890614709565b8015611ca55780601f10611c7a57610100808354040283529160200191611ca5565b820191906000526020600020905b815481529060010190602001808311611c8857829003601f168201915b5050505050908060020160009054906101000a900460ff1690806003018054611ccd90614709565b80601f0160208091040260200160405190810160405280929190818152602001828054611cf990614709565b8015611d465780601f10611d1b57610100808354040283529160200191611d46565b820191906000526020600020905b815481529060010190602001808311611d2957829003601f168201915b5050505050908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b600080611d81612071565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b611e667f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0833612468565b611e907f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0882611766565b15611ed0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec790614829565b60405180910390fd5b611efa7f01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d182611766565b15611f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f31906148bb565b60405180910390fd5b611f476000801b82611766565b15611f87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7e90614927565b60405180910390fd5b611fb17f01f18e249044142f95a61b39bad5f99f3c70699c83bb85a1ad87fe9e68bd85d182610dd3565b8073ffffffffffffffffffffffffffffffffffffffff167f88fae95b509ff46ec752cd32b3c9e319fa7a8dd9aefc64fb91c1aa6ba4e8889760405160405180910390a250565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061206a575061206982613038565b5b9050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b6000806120a58361311a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361211857826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161210f919061433c565b60405180910390fd5b80915050919050565b60008061212c612071565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b6121818383836001613165565b505050565b60003073ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016121c1919061433c565b602060405180830381865afa9250505080156121fb57506040513d601f19601f820116820180604052508101906121f891906150b0565b60015b612208576000905061220e565b60019150505b919050565b60008061221e612071565b9050600061222b8561311a565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461226d5761226c818587613339565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612300576122af600086600080613165565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146123855760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b6124728282611766565b6124b55780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016124ac9291906150dd565b60405180910390fd5b5050565b6124ca816124c561216c565b612468565b50565b6000806124d8612440565b90506124e48484611766565b6125c257600181600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061255e61216c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506125c8565b60009150505b92915050565b6000806125d9612440565b90506125e58484611766565b156126c457600081600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061266061216c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019150506126ca565b60009150505b92915050565b6126d86133fd565b60006126e2612ba9565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61272a61216c565b6040516127379190613e48565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806127ef57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166127d661343d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15612826576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6128527f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0833612468565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156128bd57506040513d601f19601f820116820180604052508101906128ba919061511b565b60015b6128fe57816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016128f59190613e48565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461296557806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161295c9190613ee8565b60405180910390fd5b61296f8383613494565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146129f9576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612a03611212565b15612a3a576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600260005403612a78576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b60016000815480929190612a9590615177565b9190505550565b6000600154905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612b185760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612b0f9190613e48565b60405180910390fd5b6000612b2683836000612213565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612b9a5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612b919190613e48565b60405180910390fd5b505050565b6001600081905550565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b612c01613507565b612c0b8282613547565b5050565b612c17613507565b565b612c21613507565b612c29613584565b565b612c33613507565b565b612c3d6129fb565b6000612c47612ba9565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612c8f61216c565b604051612c9c9190613e48565b60405180910390a150565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080612ced86866135b8565b925092509250612cfd8282613614565b82935050505092915050565b6000612d13612071565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612d8657826040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401612d7d9190613e48565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051612e799190613cd7565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115613031578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401612ee694939291906151bf565b6020604051808303816000875af1925050508015612f2257506040513d601f19601f82011682018060405250810190612f1f9190615220565b60015b612fa6573d8060008114612f52576040519150601f19603f3d011682016040523d82523d6000602084013e612f57565b606091505b506000815103612f9e57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612f959190613e48565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461302f57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016130269190613e48565b60405180910390fd5b505b5050505050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061310357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80613113575061311282613778565b5b9050919050565b600080613125612071565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600061316f612071565b905081806131aa5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156132de5760006131ba85612099565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561322557508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561323857506132368185611d76565b155b1561327a57836040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016132719190613e48565b60405180910390fd5b82156132dc57848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6133448383836137e2565b6133f857600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036133b957806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016133b0919061433c565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016133ef92919061524d565b60405180910390fd5b505050565b613405611212565b61343b576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061346b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6138a3565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61349d826138ad565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156134fa576134f4828261397a565b50613503565b6135026139fe565b5b5050565b61350f613a3b565b613545576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61354f613507565b6000613559612071565b90508281600001908161356c9190614cb0565b508181600101908161357e9190614cb0565b50505050565b61358c613507565b6000613596612ba9565b905060008160000160006101000a81548160ff02191690831515021790555050565b600080600060418451036135fd5760008060006020870151925060408701519150606087015160001a90506135ef88828585613a5b565b95509550955050505061360d565b60006002855160001b9250925092505b9250925092565b600060038111156136285761362761456d565b5b82600381111561363b5761363a61456d565b5b031561377457600160038111156136555761365461456d565b5b8260038111156136685761366761456d565b5b0361369f576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156136b3576136b261456d565b5b8260038111156136c6576136c561456d565b5b0361370b578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401613702919061433c565b60405180910390fd5b60038081111561371e5761371d61456d565b5b8260038111156137315761373061456d565b5b0361377357806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161376a9190613ee8565b60405180910390fd5b5b5050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561389a57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061385b575061385a8484611d76565b5b8061389957508273ffffffffffffffffffffffffffffffffffffffff1661388183612121565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361390957806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016139009190613e48565b60405180910390fd5b806139367f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6138a3565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516139a491906152b2565b600060405180830381855af49150503d80600081146139df576040519150601f19603f3d011682016040523d82523d6000602084013e6139e4565b606091505b50915091506139f4858383613b4f565b9250505092915050565b6000341115613a39576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000613a45612bd1565b60000160089054906101000a900460ff16905090565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115613a9b576000600385925092509250613b45565b600060018888888860405160008152602001604052604051613ac094939291906152e5565b6020604051602081039080840390855afa158015613ae2573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613b3657600060016000801b93509350935050613b45565b8060008060001b935093509350505b9450945094915050565b606082613b6457613b5f82613bde565b613bd6565b60008251148015613b8c575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15613bce57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401613bc59190613e48565b60405180910390fd5b819050613bd7565b5b9392505050565b600081511115613bf15780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613c6c81613c37565b8114613c7757600080fd5b50565b600081359050613c8981613c63565b92915050565b600060208284031215613ca557613ca4613c2d565b5b6000613cb384828501613c7a565b91505092915050565b60008115159050919050565b613cd181613cbc565b82525050565b6000602082019050613cec6000830184613cc8565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613d2c578082015181840152602081019050613d11565b60008484015250505050565b6000601f19601f8301169050919050565b6000613d5482613cf2565b613d5e8185613cfd565b9350613d6e818560208601613d0e565b613d7781613d38565b840191505092915050565b60006020820190508181036000830152613d9c8184613d49565b905092915050565b6000819050919050565b613db781613da4565b8114613dc257600080fd5b50565b600081359050613dd481613dae565b92915050565b600060208284031215613df057613def613c2d565b5b6000613dfe84828501613dc5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613e3282613e07565b9050919050565b613e4281613e27565b82525050565b6000602082019050613e5d6000830184613e39565b92915050565b613e6c81613e27565b8114613e7757600080fd5b50565b600081359050613e8981613e63565b92915050565b60008060408385031215613ea657613ea5613c2d565b5b6000613eb485828601613e7a565b9250506020613ec585828601613dc5565b9150509250929050565b6000819050919050565b613ee281613ecf565b82525050565b6000602082019050613efd6000830184613ed9565b92915050565b613f0c81613ecf565b8114613f1757600080fd5b50565b600081359050613f2981613f03565b92915050565b60008060408385031215613f4657613f45613c2d565b5b6000613f5485828601613dc5565b9250506020613f6585828601613f1a565b9150509250929050565b600080600060608486031215613f8857613f87613c2d565b5b6000613f9686828701613e7a565b9350506020613fa786828701613e7a565b9250506040613fb886828701613dc5565b9150509250925092565b600060208284031215613fd857613fd7613c2d565b5b6000613fe684828501613f1a565b91505092915050565b60006020828403121561400557614004613c2d565b5b600061401384828501613e7a565b91505092915050565b6000806040838503121561403357614032613c2d565b5b600061404185828601613f1a565b925050602061405285828601613e7a565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61409e82613d38565b810181811067ffffffffffffffff821117156140bd576140bc614066565b5b80604052505050565b60006140d0613c23565b90506140dc8282614095565b919050565b600067ffffffffffffffff8211156140fc576140fb614066565b5b61410582613d38565b9050602081019050919050565b82818337600083830152505050565b600061413461412f846140e1565b6140c6565b9050828152602081018484840111156141505761414f614061565b5b61415b848285614112565b509392505050565b600082601f8301126141785761417761405c565b5b8135614188848260208601614121565b91505092915050565b600080604083850312156141a8576141a7613c2d565b5b60006141b685828601613e7a565b925050602083013567ffffffffffffffff8111156141d7576141d6613c32565b5b6141e385828601614163565b9150509250929050565b600067ffffffffffffffff82111561420857614207614066565b5b61421182613d38565b9050602081019050919050565b600061423161422c846141ed565b6140c6565b90508281526020810184848401111561424d5761424c614061565b5b614258848285614112565b509392505050565b600082601f8301126142755761427461405c565b5b813561428584826020860161421e565b91505092915050565b600080600080608085870312156142a8576142a7613c2d565b5b60006142b687828801613e7a565b945050602085013567ffffffffffffffff8111156142d7576142d6613c32565b5b6142e387828801614260565b93505060406142f487828801613f1a565b925050606085013567ffffffffffffffff81111561431557614314613c32565b5b61432187828801614163565b91505092959194509250565b61433681613da4565b82525050565b6000602082019050614351600083018461432d565b92915050565b6000806040838503121561436e5761436d613c2d565b5b600061437c85828601613e7a565b925050602083013567ffffffffffffffff81111561439d5761439c613c32565b5b6143a985828601614260565b9150509250929050565b600080604083850312156143ca576143c9613c2d565b5b60006143d885828601613dc5565b925050602083013567ffffffffffffffff8111156143f9576143f8613c32565b5b61440585828601614260565b9150509250929050565b60008060006060848603121561442857614427613c2d565b5b600061443686828701613f1a565b935050602061444786828701613e7a565b925050604084013567ffffffffffffffff81111561446857614467613c32565b5b61447486828701614163565b9150509250925092565b61448781613cbc565b811461449257600080fd5b50565b6000813590506144a48161447e565b92915050565b600080604083850312156144c1576144c0613c2d565b5b60006144cf85828601613e7a565b92505060206144e085828601614495565b9150509250929050565b6000806000806080858703121561450457614503613c2d565b5b600061451287828801613e7a565b945050602061452387828801613e7a565b935050604061453487828801613dc5565b925050606085013567ffffffffffffffff81111561455557614554613c32565b5b61456187828801614163565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106145ad576145ac61456d565b5b50565b60008190506145be8261459c565b919050565b60006145ce826145b0565b9050919050565b6145de816145c3565b82525050565b600081519050919050565b600082825260208201905092915050565b600061460b826145e4565b61461581856145ef565b9350614625818560208601613d0e565b61462e81613d38565b840191505092915050565b600060a08201905061464e600083018861432d565b81810360208301526146608187613d49565b905061466f60408301866145d5565b81810360608301526146818185614600565b90506146906080830184613e39565b9695505050505050565b600080604083850312156146b1576146b0613c2d565b5b60006146bf85828601613e7a565b92505060206146d085828601613e7a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061472157607f821691505b602082108103614734576147336146da565b5b50919050565b7f546f6b656e20646f6573206e6f74206578697374000000000000000000000000600082015250565b6000614770601483613cfd565b915061477b8261473a565b602082019050919050565b6000602082019050818103600083015261479f81614763565b9050919050565b60006060820190506147bb6000830186613e39565b6147c8602083018561432d565b6147d56040830184613e39565b949350505050565b7f4164647265737320697320616c72656164792061206d616e6167657200000000600082015250565b6000614813601c83613cfd565b915061481e826147dd565b602082019050919050565b6000602082019050818103600083015261484281614806565b9050919050565b7f4164647265737320697320616c726561647920616e20696e737469747574696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006148a5602183613cfd565b91506148b082614849565b604082019050919050565b600060208201905081810360008301526148d481614898565b9050919050565b7f4164647265737320697320616c726561647920616e2061646d696e0000000000600082015250565b6000614911601b83613cfd565b915061491c826148db565b602082019050919050565b6000602082019050818103600083015261494081614904565b9050919050565b7f546f6b656e20494420616c726561647920657869737473000000000000000000600082015250565b600061497d601783613cfd565b915061498882614947565b602082019050919050565b600060208201905081810360008301526149ac81614970565b9050919050565b600081905092915050565b60006149c982613cf2565b6149d381856149b3565b93506149e3818560208601613d0e565b80840191505092915050565b60006149fb82846149be565b915081905092915050565b7f54686520495046532055524920697320616c726561647920697373756564206660008201527f6f7220612063726564656e7469616c0000000000000000000000000000000000602082015250565b6000614a62602f83613cfd565b9150614a6d82614a06565b604082019050919050565b60006020820190508181036000830152614a9181614a55565b9050919050565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000614ace601183613cfd565b9150614ad982614a98565b602082019050919050565b60006020820190508181036000830152614afd81614ac1565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302614b667fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614b29565b614b708683614b29565b95508019841693508086168417925050509392505050565b6000819050919050565b6000614bad614ba8614ba384613da4565b614b88565b613da4565b9050919050565b6000819050919050565b614bc783614b92565b614bdb614bd382614bb4565b848454614b36565b825550505050565b600090565b614bf0614be3565b614bfb818484614bbe565b505050565b5b81811015614c1f57614c14600082614be8565b600181019050614c01565b5050565b601f821115614c6457614c3581614b04565b614c3e84614b19565b81016020851015614c4d578190505b614c61614c5985614b19565b830182614c00565b50505b505050565b600082821c905092915050565b6000614c8760001984600802614c69565b1980831691505092915050565b6000614ca08383614c76565b9150826002028217905092915050565b614cb982613cf2565b67ffffffffffffffff811115614cd257614cd1614066565b5b614cdc8254614709565b614ce7828285614c23565b600060209050601f831160018114614d1a5760008415614d08578287015190505b614d128582614c94565b865550614d7a565b601f198416614d2886614b04565b60005b82811015614d5057848901518255600182019150602085019450602081019050614d2b565b86831015614d6d5784890151614d69601f891682614c76565b8355505b6001600288020188555050505b505050505050565b60008190508160005260206000209050919050565b601f821115614dd857614da981614d82565b614db284614b19565b81016020851015614dc1578190505b614dd5614dcd85614b19565b830182614c00565b50505b505050565b614de6826145e4565b67ffffffffffffffff811115614dff57614dfe614066565b5b614e098254614709565b614e14828285614d97565b600060209050601f831160018114614e475760008415614e35578287015190505b614e3f8582614c94565b865550614ea7565b601f198416614e5586614d82565b60005b82811015614e7d57848901518255600182019150602085019450602081019050614e58565b86831015614e9a5784890151614e96601f891682614c76565b8355505b6001600288020188555050505b505050505050565b7f41646472657373206973206e6f7420616e20696e737469747574696f6e000000600082015250565b6000614ee5601d83613cfd565b9150614ef082614eaf565b602082019050919050565b60006020820190508181036000830152614f1481614ed8565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000614f54614f4f614f4a84614f1b565b614b88565b614f25565b9050919050565b614f6481614f39565b82525050565b6000602082019050614f7f6000830184614f5b565b92915050565b7f41646472657373206973206e6f742061206d616e616765720000000000000000600082015250565b6000614fbb601883613cfd565b9150614fc682614f85565b602082019050919050565b60006020820190508181036000830152614fea81614fae565b9050919050565b7f43726564656e7469616c20697320616c7265616479205245564f4b4544000000600082015250565b6000615027601d83613cfd565b915061503282614ff1565b602082019050919050565b600060208201905081810360008301526150568161501a565b9050919050565b600060608201905061507260008301866145d5565b61507f60208301856145d5565b81810360408301526150918184613d49565b9050949350505050565b6000815190506150aa81613e63565b92915050565b6000602082840312156150c6576150c5613c2d565b5b60006150d48482850161509b565b91505092915050565b60006040820190506150f26000830185613e39565b6150ff6020830184613ed9565b9392505050565b60008151905061511581613f03565b92915050565b60006020828403121561513157615130613c2d565b5b600061513f84828501615106565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061518282613da4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036151b4576151b3615148565b5b600182019050919050565b60006080820190506151d46000830187613e39565b6151e16020830186613e39565b6151ee604083018561432d565b81810360608301526152008184614600565b905095945050505050565b60008151905061521a81613c63565b92915050565b60006020828403121561523657615235613c2d565b5b60006152448482850161520b565b91505092915050565b60006040820190506152626000830185613e39565b61526f602083018461432d565b9392505050565b600081905092915050565b600061528c826145e4565b6152968185615276565b93506152a6818560208601613d0e565b80840191505092915050565b60006152be8284615281565b915081905092915050565b600060ff82169050919050565b6152df816152c9565b82525050565b60006080820190506152fa6000830187613ed9565b61530760208301866152d6565b6153146040830185613ed9565b6153216060830184613ed9565b9594505050505056fea264697066735822122032eee1231bf9b0d2671d44943dbfe13b2d6af1c3916ad4df0ba840728eda530264736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0xE0574E3F EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0xF06D80FC EQ PUSH2 0x890 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x781 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x896695DE GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x896695DE EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0x957A3205 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0x98A3410D EQ PUSH2 0x69C JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x7BAA47D9 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5CB JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x593DC75C EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x511 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x44D JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x1B929C21 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x1B929C21 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x1B9519A8 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x2B2DA97E EQ PUSH2 0x3BB JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3C8F JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DDA JUMP JUMPDEST PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x3E8F JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x3F2F JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0xB05 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x3FC2 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x401C JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x401C JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0xE70 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0xEA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x4191 JUMP JUMPDEST PUSH2 0xEC4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x3DDA JUMP JUMPDEST PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH2 0x1249 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x4357 JUMP JUMPDEST PUSH2 0x1312 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C9 PUSH2 0x1421 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH2 0x1640 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x4357 JUMP JUMPDEST PUSH2 0x1674 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x401C JUMP JUMPDEST PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x43B3 JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x686 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x440F JUMP JUMPDEST PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EE PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x44AA JUMP JUMPDEST PUSH2 0x1A7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x742 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74F SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x44EA JUMP JUMPDEST PUSH2 0x1ACC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x3DDA JUMP JUMPDEST PUSH2 0x1AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x401C JUMP JUMPDEST PUSH2 0x1BE1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x3DDA JUMP JUMPDEST PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84A SWAP2 SWAP1 PUSH2 0x469A JUMP JUMPDEST PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85C SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87A PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH2 0x1E3C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x8C4 DUP3 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x8D7 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x914 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x936 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x961 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x944 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x977 DUP3 PUSH2 0x2099 JUMP JUMPDEST POP PUSH2 0x981 DUP3 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99A DUP3 DUP3 PUSH2 0x995 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x2174 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CD DUP4 PUSH2 0x2186 JUMP JUMPDEST PUSH2 0xA0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA03 SWAP1 PUSH2 0x4786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xA2F SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0xAF7 DUP6 DUP4 DUP6 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB77 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6E SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB8B DUP4 DUP4 PUSH2 0xB86 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x2213 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC01 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC12 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC42 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0xC6C PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA3 SWAP1 PUSH2 0x4829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD6 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0D SWAP1 PUSH2 0x48BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD23 PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8D PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP3 PUSH2 0xDD3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x594022AE30F535100BD2169AB77AB37C1DBA3D7E89D04BD6BF17B121A3CA7C25 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xDDC DUP3 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xDE5 DUP2 PUSH2 0x24B9 JUMP JUMPDEST PUSH2 0xDEF DUP4 DUP4 PUSH2 0x24CD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xDFD PUSH2 0x216C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6B DUP3 DUP3 PUSH2 0x25CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE9A PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0xEA2 PUSH2 0x26D0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEBF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1ACC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xECC PUSH2 0x2742 JUMP JUMPDEST PUSH2 0xED5 DUP3 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0xEDF DUP3 DUP3 PUSH2 0x2855 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED PUSH2 0x2974 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF40 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0xF48 PUSH2 0x29FB JUMP JUMPDEST PUSH2 0xF50 PUSH2 0x2A3C JUMP JUMPDEST PUSH2 0xF58 PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF62 PUSH2 0x2A9C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB4 SWAP1 PUSH2 0x4993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP6 PUSH1 0x40 MLOAD PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x49EF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD EQ PUSH2 0x101E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x4A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1029 DUP4 CALLER DUP5 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x1068 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105F SWAP1 PUSH2 0x4AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1093 JUMPI PUSH2 0x1092 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x10EA SWAP2 SWAP1 PUSH2 0x4CB0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1116 JUMPI PUSH2 0x1115 PUSH2 0x456D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x4DDD JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x49EF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11A8 DUP6 DUP3 PUSH2 0x2AA6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xD3BD681D2FE91FDA330D69FECA5DC6A668F4862360861444DE295F833E351053 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x120C PUSH2 0x2B9F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x121D PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1254 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BF SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133C PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x1366 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP4 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP1 PUSH2 0x4EFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CF PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP4 PUSH2 0x1BE1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAC234B0E1C8C07E26DC3F3271849BABAC0394B68F7D0E15F1B8D9EA28D482DFD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142B PUSH2 0x2BD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1479 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x14AE JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x14BC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x14F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1543 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x15B7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41636164656D69632043726564656E7469616C73000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4143524544000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0x15BF PUSH2 0x2C0F JUMP JUMPDEST PUSH2 0x15C7 PUSH2 0x2C19 JUMP JUMPDEST PUSH2 0x15CF PUSH2 0x2C2B JUMP JUMPDEST PUSH2 0x15DC PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x24CD JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1639 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1630 SWAP2 SWAP1 PUSH2 0x4F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x166A PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x1672 PUSH2 0x2C35 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1681 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x16AB PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP4 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x16EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E1 SWAP1 PUSH2 0x4FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1714 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP4 PUSH2 0x1BE1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2A65D71DDD7E0FC167105C9D6A51832464FCA91D67B3D8871C2ED3D1FAB22787 DUP3 PUSH1 0x40 MLOAD PUSH2 0x175A SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1771 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1809 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x1811 PUSH2 0x2A3C JUMP JUMPDEST PUSH2 0x181A DUP3 PUSH2 0x2186 JUMP JUMPDEST PUSH2 0x1859 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1850 SWAP1 PUSH2 0x4786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18A8 JUMPI PUSH2 0x18A7 PUSH2 0x456D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DF SWAP1 PUSH2 0x503D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1926 JUMPI PUSH2 0x1925 PUSH2 0x456D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP4 PUSH32 0x2840FBA00BDCDA6213AC8F2DF6BD0EAA93C78B71E752268CEF89210A1705E4EF DUP3 PUSH1 0x1 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1960 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x505D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1972 PUSH2 0x2B9F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1982 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1993 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19BF SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A23 DUP6 PUSH2 0x2CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A3A DUP5 DUP4 PUSH2 0x2CDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x1A8F PUSH2 0x1A88 PUSH2 0x216C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2D09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1AD7 DUP5 DUP5 DUP5 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x1AEB PUSH2 0x1AE2 PUSH2 0x216C JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2E87 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AFC DUP3 PUSH2 0x2186 JUMP JUMPDEST PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B32 SWAP1 PUSH2 0x4786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1B5C SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B88 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEA DUP3 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1BF3 DUP2 PUSH2 0x24B9 JUMP JUMPDEST PUSH2 0x1BFD DUP4 DUP4 PUSH2 0x25CE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1C2C SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C58 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CA5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CA5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C88 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1CCD SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CF9 SWAP1 PUSH2 0x4709 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D81 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH2 0x1E66 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x1E90 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC7 SWAP1 PUSH2 0x4829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EFA PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0x1F3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F31 SWAP1 PUSH2 0x48BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F47 PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0x1F87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F7E SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FB1 PUSH32 0x1F18E249044142F95A61B39BAD5F99F3C70699C83BB85A1AD87FE9E68BD85D1 DUP3 PUSH2 0xDD3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88FAE95B509FF46EC752CD32B3C9E319FA7A8DD9AEFC64FB91C1AA6BA4E88897 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x206A JUMPI POP PUSH2 0x2069 DUP3 PUSH2 0x3038 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20A5 DUP4 PUSH2 0x311A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2118 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210F SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x212C PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2181 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3165 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C1 SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x21FB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21F8 SWAP2 SWAP1 PUSH2 0x50B0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2208 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x220E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x221E PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x222B DUP6 PUSH2 0x311A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x226D JUMPI PUSH2 0x226C DUP2 DUP6 DUP8 PUSH2 0x3339 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2300 JUMPI PUSH2 0x22AF PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x3165 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2385 JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2472 DUP3 DUP3 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x24B5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24AC SWAP3 SWAP2 SWAP1 PUSH2 0x50DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x24CA DUP2 PUSH2 0x24C5 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x2468 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x24D8 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP PUSH2 0x24E4 DUP5 DUP5 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x25C2 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x255E PUSH2 0x216C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x25C8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x25D9 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP PUSH2 0x25E5 DUP5 DUP5 PUSH2 0x1766 JUMP JUMPDEST ISZERO PUSH2 0x26C4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2660 PUSH2 0x216C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26D8 PUSH2 0x33FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E2 PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x272A PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2737 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x27EF JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27D6 PUSH2 0x343D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2826 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2852 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 CALLER PUSH2 0x2468 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x28BD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x511B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x28FE JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F5 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x2965 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295C SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x296F DUP4 DUP4 PUSH2 0x3494 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2A03 PUSH2 0x1212 JUMP JUMPDEST ISZERO PUSH2 0x2A3A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x2A78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A95 SWAP1 PUSH2 0x5177 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B18 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B0F SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B26 DUP4 DUP4 PUSH1 0x0 PUSH2 0x2213 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B9A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B91 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2C01 PUSH2 0x3507 JUMP JUMPDEST PUSH2 0x2C0B DUP3 DUP3 PUSH2 0x3547 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2C17 PUSH2 0x3507 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C21 PUSH2 0x3507 JUMP JUMPDEST PUSH2 0x2C29 PUSH2 0x3584 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C33 PUSH2 0x3507 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C3D PUSH2 0x29FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C47 PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2C8F PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9C SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2CED DUP7 DUP7 PUSH2 0x35B8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2CFD DUP3 DUP3 PUSH2 0x3614 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D13 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D86 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7D SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2E79 SWAP2 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x3031 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EE6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2F22 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F1F SWAP2 SWAP1 PUSH2 0x5220 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2FA6 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F52 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F57 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2F9E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F95 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x302F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3026 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3103 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3113 JUMPI POP PUSH2 0x3112 DUP3 PUSH2 0x3778 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3125 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x316F PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x31AA JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 PUSH2 0x31BA DUP6 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3225 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3238 JUMPI POP PUSH2 0x3236 DUP2 DUP6 PUSH2 0x1D76 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x327A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3271 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x32DC JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3344 DUP4 DUP4 DUP4 PUSH2 0x37E2 JUMP JUMPDEST PUSH2 0x33F8 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33B9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B0 SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33EF SWAP3 SWAP2 SWAP1 PUSH2 0x524D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3405 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x343B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x38A3 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x349D DUP3 PUSH2 0x38AD JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x34FA JUMPI PUSH2 0x34F4 DUP3 DUP3 PUSH2 0x397A JUMP JUMPDEST POP PUSH2 0x3503 JUMP JUMPDEST PUSH2 0x3502 PUSH2 0x39FE JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x350F PUSH2 0x3A3B JUMP JUMPDEST PUSH2 0x3545 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x354F PUSH2 0x3507 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3559 PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x356C SWAP2 SWAP1 PUSH2 0x4CB0 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x357E SWAP2 SWAP1 PUSH2 0x4CB0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x358C PUSH2 0x3507 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3596 PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x35FD JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x35EF DUP9 DUP3 DUP6 DUP6 PUSH2 0x3A5B JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x360D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3628 JUMPI PUSH2 0x3627 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x363B JUMPI PUSH2 0x363A PUSH2 0x456D JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x3774 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3655 JUMPI PUSH2 0x3654 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3668 JUMPI PUSH2 0x3667 PUSH2 0x456D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x369F JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x36B3 JUMPI PUSH2 0x36B2 PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x36C6 JUMPI PUSH2 0x36C5 PUSH2 0x456D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x370B JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3702 SWAP2 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x371E JUMPI PUSH2 0x371D PUSH2 0x456D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3731 JUMPI PUSH2 0x3730 PUSH2 0x456D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3773 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x376A SWAP2 SWAP1 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x389A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x385B JUMPI POP PUSH2 0x385A DUP5 DUP5 PUSH2 0x1D76 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x3899 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3881 DUP4 PUSH2 0x2121 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x3909 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3900 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x3936 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x38A3 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x39A4 SWAP2 SWAP1 PUSH2 0x52B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x39DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x39E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x39F4 DUP6 DUP4 DUP4 PUSH2 0x3B4F JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x3A39 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A45 PUSH2 0x2BD1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3A9B JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3B45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3AC0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B36 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x3B45 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3B64 JUMPI PUSH2 0x3B5F DUP3 PUSH2 0x3BDE JUMP JUMPDEST PUSH2 0x3BD6 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x3B8C JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x3BCE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BC5 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x3BD7 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3BF1 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C6C DUP2 PUSH2 0x3C37 JUMP JUMPDEST DUP2 EQ PUSH2 0x3C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C89 DUP2 PUSH2 0x3C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CA5 JUMPI PUSH2 0x3CA4 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CB3 DUP5 DUP3 DUP6 ADD PUSH2 0x3C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CD1 DUP2 PUSH2 0x3CBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D2C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D11 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D54 DUP3 PUSH2 0x3CF2 JUMP JUMPDEST PUSH2 0x3D5E DUP2 DUP6 PUSH2 0x3CFD JUMP JUMPDEST SWAP4 POP PUSH2 0x3D6E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D0E JUMP JUMPDEST PUSH2 0x3D77 DUP2 PUSH2 0x3D38 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D9C DUP2 DUP5 PUSH2 0x3D49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DB7 DUP2 PUSH2 0x3DA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3DD4 DUP2 PUSH2 0x3DAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DF0 JUMPI PUSH2 0x3DEF PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DFE DUP5 DUP3 DUP6 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E32 DUP3 PUSH2 0x3E07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E42 DUP2 PUSH2 0x3E27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E6C DUP2 PUSH2 0x3E27 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E89 DUP2 PUSH2 0x3E63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3EA6 JUMPI PUSH2 0x3EA5 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EB4 DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3EC5 DUP6 DUP3 DUP7 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EE2 DUP2 PUSH2 0x3ECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3ED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F0C DUP2 PUSH2 0x3ECF JUMP JUMPDEST DUP2 EQ PUSH2 0x3F17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F29 DUP2 PUSH2 0x3F03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F46 JUMPI PUSH2 0x3F45 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F54 DUP6 DUP3 DUP7 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F65 DUP6 DUP3 DUP7 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3F88 JUMPI PUSH2 0x3F87 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F96 DUP7 DUP3 DUP8 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3FA7 DUP7 DUP3 DUP8 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3FB8 DUP7 DUP3 DUP8 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FD8 JUMPI PUSH2 0x3FD7 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FE6 DUP5 DUP3 DUP6 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4005 JUMPI PUSH2 0x4004 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4013 DUP5 DUP3 DUP6 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4033 JUMPI PUSH2 0x4032 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4041 DUP6 DUP3 DUP7 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4052 DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x409E DUP3 PUSH2 0x3D38 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x40BD JUMPI PUSH2 0x40BC PUSH2 0x4066 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D0 PUSH2 0x3C23 JUMP JUMPDEST SWAP1 POP PUSH2 0x40DC DUP3 DUP3 PUSH2 0x4095 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x40FC JUMPI PUSH2 0x40FB PUSH2 0x4066 JUMP JUMPDEST JUMPDEST PUSH2 0x4105 DUP3 PUSH2 0x3D38 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4134 PUSH2 0x412F DUP5 PUSH2 0x40E1 JUMP JUMPDEST PUSH2 0x40C6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4150 JUMPI PUSH2 0x414F PUSH2 0x4061 JUMP JUMPDEST JUMPDEST PUSH2 0x415B DUP5 DUP3 DUP6 PUSH2 0x4112 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4178 JUMPI PUSH2 0x4177 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4188 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41A8 JUMPI PUSH2 0x41A7 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41B6 DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41D7 JUMPI PUSH2 0x41D6 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x41E3 DUP6 DUP3 DUP7 ADD PUSH2 0x4163 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4208 JUMPI PUSH2 0x4207 PUSH2 0x4066 JUMP JUMPDEST JUMPDEST PUSH2 0x4211 DUP3 PUSH2 0x3D38 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4231 PUSH2 0x422C DUP5 PUSH2 0x41ED JUMP JUMPDEST PUSH2 0x40C6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x424D JUMPI PUSH2 0x424C PUSH2 0x4061 JUMP JUMPDEST JUMPDEST PUSH2 0x4258 DUP5 DUP3 DUP6 PUSH2 0x4112 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4275 JUMPI PUSH2 0x4274 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4285 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x421E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x42A8 JUMPI PUSH2 0x42A7 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42B6 DUP8 DUP3 DUP9 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42D7 JUMPI PUSH2 0x42D6 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x42E3 DUP8 DUP3 DUP9 ADD PUSH2 0x4260 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42F4 DUP8 DUP3 DUP9 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4315 JUMPI PUSH2 0x4314 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x4321 DUP8 DUP3 DUP9 ADD PUSH2 0x4163 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x4336 DUP2 PUSH2 0x3DA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4351 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x432D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x436E JUMPI PUSH2 0x436D PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x437C DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x439D JUMPI PUSH2 0x439C PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x43A9 DUP6 DUP3 DUP7 ADD PUSH2 0x4260 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43CA JUMPI PUSH2 0x43C9 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43D8 DUP6 DUP3 DUP7 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43F9 JUMPI PUSH2 0x43F8 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x4405 DUP6 DUP3 DUP7 ADD PUSH2 0x4260 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4428 JUMPI PUSH2 0x4427 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4436 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4447 DUP7 DUP3 DUP8 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4468 JUMPI PUSH2 0x4467 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x4474 DUP7 DUP3 DUP8 ADD PUSH2 0x4163 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x4487 DUP2 PUSH2 0x3CBC JUMP JUMPDEST DUP2 EQ PUSH2 0x4492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44A4 DUP2 PUSH2 0x447E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44C1 JUMPI PUSH2 0x44C0 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44CF DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x44E0 DUP6 DUP3 DUP7 ADD PUSH2 0x4495 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4504 JUMPI PUSH2 0x4503 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4512 DUP8 DUP3 DUP9 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4523 DUP8 DUP3 DUP9 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4534 DUP8 DUP3 DUP9 ADD PUSH2 0x3DC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4555 JUMPI PUSH2 0x4554 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH2 0x4561 DUP8 DUP3 DUP9 ADD PUSH2 0x4163 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x45AD JUMPI PUSH2 0x45AC PUSH2 0x456D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x45BE DUP3 PUSH2 0x459C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45CE DUP3 PUSH2 0x45B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45DE DUP2 PUSH2 0x45C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x460B DUP3 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x4615 DUP2 DUP6 PUSH2 0x45EF JUMP JUMPDEST SWAP4 POP PUSH2 0x4625 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D0E JUMP JUMPDEST PUSH2 0x462E DUP2 PUSH2 0x3D38 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x464E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x432D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4660 DUP2 DUP8 PUSH2 0x3D49 JUMP JUMPDEST SWAP1 POP PUSH2 0x466F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x45D5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4681 DUP2 DUP6 PUSH2 0x4600 JUMP JUMPDEST SWAP1 POP PUSH2 0x4690 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46B1 JUMPI PUSH2 0x46B0 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46BF DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x46D0 DUP6 DUP3 DUP7 ADD PUSH2 0x3E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4721 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4734 JUMPI PUSH2 0x4733 PUSH2 0x46DA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4770 PUSH1 0x14 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x477B DUP3 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x479F DUP2 PUSH2 0x4763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x47BB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x47C8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x432D JUMP JUMPDEST PUSH2 0x47D5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4164647265737320697320616C72656164792061206D616E6167657200000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4813 PUSH1 0x1C DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x481E DUP3 PUSH2 0x47DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4842 DUP2 PUSH2 0x4806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320697320616C726561647920616E20696E737469747574696F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A5 PUSH1 0x21 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x48B0 DUP3 PUSH2 0x4849 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48D4 DUP2 PUSH2 0x4898 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320697320616C726561647920616E2061646D696E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4911 PUSH1 0x1B DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x491C DUP3 PUSH2 0x48DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4940 DUP2 PUSH2 0x4904 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20494420616C726561647920657869737473000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x497D PUSH1 0x17 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4988 DUP3 PUSH2 0x4947 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49AC DUP2 PUSH2 0x4970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C9 DUP3 PUSH2 0x3CF2 JUMP JUMPDEST PUSH2 0x49D3 DUP2 DUP6 PUSH2 0x49B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x49E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D0E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49FB DUP3 DUP5 PUSH2 0x49BE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520495046532055524920697320616C7265616479206973737565642066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7220612063726564656E7469616C0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A62 PUSH1 0x2F DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4A6D DUP3 PUSH2 0x4A06 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A91 DUP2 PUSH2 0x4A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ACE PUSH1 0x11 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4AD9 DUP3 PUSH2 0x4A98 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AFD DUP2 PUSH2 0x4AC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4B66 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4B29 JUMP JUMPDEST PUSH2 0x4B70 DUP7 DUP4 PUSH2 0x4B29 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BAD PUSH2 0x4BA8 PUSH2 0x4BA3 DUP5 PUSH2 0x3DA4 JUMP JUMPDEST PUSH2 0x4B88 JUMP JUMPDEST PUSH2 0x3DA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BC7 DUP4 PUSH2 0x4B92 JUMP JUMPDEST PUSH2 0x4BDB PUSH2 0x4BD3 DUP3 PUSH2 0x4BB4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4B36 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4BF0 PUSH2 0x4BE3 JUMP JUMPDEST PUSH2 0x4BFB DUP2 DUP5 DUP5 PUSH2 0x4BBE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C1F JUMPI PUSH2 0x4C14 PUSH1 0x0 DUP3 PUSH2 0x4BE8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4C01 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4C64 JUMPI PUSH2 0x4C35 DUP2 PUSH2 0x4B04 JUMP JUMPDEST PUSH2 0x4C3E DUP5 PUSH2 0x4B19 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4C4D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4C61 PUSH2 0x4C59 DUP6 PUSH2 0x4B19 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4C00 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C87 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4C69 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA0 DUP4 DUP4 PUSH2 0x4C76 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CB9 DUP3 PUSH2 0x3CF2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CD2 JUMPI PUSH2 0x4CD1 PUSH2 0x4066 JUMP JUMPDEST JUMPDEST PUSH2 0x4CDC DUP3 SLOAD PUSH2 0x4709 JUMP JUMPDEST PUSH2 0x4CE7 DUP3 DUP3 DUP6 PUSH2 0x4C23 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4D1A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4D08 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4D12 DUP6 DUP3 PUSH2 0x4C94 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4D7A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4D28 DUP7 PUSH2 0x4B04 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4D50 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D2B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4D6D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4D69 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4C76 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4DD8 JUMPI PUSH2 0x4DA9 DUP2 PUSH2 0x4D82 JUMP JUMPDEST PUSH2 0x4DB2 DUP5 PUSH2 0x4B19 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4DC1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4DD5 PUSH2 0x4DCD DUP6 PUSH2 0x4B19 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4C00 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4DE6 DUP3 PUSH2 0x45E4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DFF JUMPI PUSH2 0x4DFE PUSH2 0x4066 JUMP JUMPDEST JUMPDEST PUSH2 0x4E09 DUP3 SLOAD PUSH2 0x4709 JUMP JUMPDEST PUSH2 0x4E14 DUP3 DUP3 DUP6 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4E47 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4E35 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4E3F DUP6 DUP3 PUSH2 0x4C94 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4E55 DUP7 PUSH2 0x4D82 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E7D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4E58 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E9A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E96 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4C76 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x41646472657373206973206E6F7420616E20696E737469747574696F6E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EE5 PUSH1 0x1D DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4EF0 DUP3 PUSH2 0x4EAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F14 DUP2 PUSH2 0x4ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F54 PUSH2 0x4F4F PUSH2 0x4F4A DUP5 PUSH2 0x4F1B JUMP JUMPDEST PUSH2 0x4B88 JUMP JUMPDEST PUSH2 0x4F25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F64 DUP2 PUSH2 0x4F39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4F5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373206973206E6F742061206D616E616765720000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FBB PUSH1 0x18 DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x4FC6 DUP3 PUSH2 0x4F85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FEA DUP2 PUSH2 0x4FAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726564656E7469616C20697320616C7265616479205245564F4B4544000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5027 PUSH1 0x1D DUP4 PUSH2 0x3CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x5032 DUP3 PUSH2 0x4FF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5056 DUP2 PUSH2 0x501A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5072 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x45D5 JUMP JUMPDEST PUSH2 0x507F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x45D5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5091 DUP2 DUP5 PUSH2 0x3D49 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x50AA DUP2 PUSH2 0x3E63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50C6 JUMPI PUSH2 0x50C5 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x50D4 DUP5 DUP3 DUP6 ADD PUSH2 0x509B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x50F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x50FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3ED9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5115 DUP2 PUSH2 0x3F03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5131 JUMPI PUSH2 0x5130 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x513F DUP5 DUP3 DUP6 ADD PUSH2 0x5106 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5182 DUP3 PUSH2 0x3DA4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x51B4 JUMPI PUSH2 0x51B3 PUSH2 0x5148 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x51D4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x51E1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x51EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x432D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5200 DUP2 DUP5 PUSH2 0x4600 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x521A DUP2 PUSH2 0x3C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5236 JUMPI PUSH2 0x5235 PUSH2 0x3C2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5244 DUP5 DUP3 DUP6 ADD PUSH2 0x520B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5262 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x526F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x432D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x528C DUP3 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x5296 DUP2 DUP6 PUSH2 0x5276 JUMP JUMPDEST SWAP4 POP PUSH2 0x52A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D0E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52BE DUP3 DUP5 PUSH2 0x5281 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52DF DUP2 PUSH2 0x52C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x52FA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3ED9 JUMP JUMPDEST PUSH2 0x5307 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x52D6 JUMP JUMPDEST PUSH2 0x5314 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3ED9 JUMP JUMPDEST PUSH2 0x5321 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3ED9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xEE 0xE1 0x23 SHL 0xF9 0xB0 0xD2 PUSH8 0x1D44943DBFE13B2D PUSH11 0xF1C3916AD4DF0BA840728E 0xDA MSTORE8 MUL PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"819:8291:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8881:226;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3545:146:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4791:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4617:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1373:72:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6548:653;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5494:578:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4759:191:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3390:441:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5246:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6348:245;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8618:69:29;;;;;;;;;;;;;:::i;:::-;;6138:132:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5458:1082:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2692:145:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3365:118:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3043:265;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4668:337:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:352;;;;;;;;;;;;;:::i;:::-;;8545:65;;;;;;;;;;;;;:::i;:::-;;3839:299;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3732:207:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7247:653:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3755:150:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5013:384:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2317:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5012:144:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6336:233:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8253:254:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5662:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1759:49:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;5222:210:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1302:64:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4179:481;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8881:226;9039:4;9063:36;9087:11;9063:23;:36::i;:::-;9056:43;;8881:226;;;:::o;3545:146:3:-;3590:13;3615:23;3641:19;:17;:19::i;:::-;3615:45;;3677:1;:7;;3670:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3545:146;:::o;4791:154::-;4858:7;4877:22;4891:7;4877:13;:22::i;:::-;;4917:21;4930:7;4917:12;:21::i;:::-;4910:28;;4791:154;;;:::o;4617:113::-;4688:35;4697:2;4701:7;4710:12;:10;:12::i;:::-;4688:8;:35::i;:::-;4617:113;;:::o;1373:72:29:-;1416:29;1373:72;:::o;6548:653::-;6673:4;6698:18;6708:7;6698:9;:18::i;:::-;6690:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;6871:22;6896:11;:20;6908:7;6896:20;;;;;;;;;;;:30;;6871:55;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6937:14;6954:11;:20;6966:7;6954:20;;;;;;;;;;;:27;;;;;;;;;;;;6937:44;;6992:15;7010:40;7026:4;7032:6;7040:9;7010:15;:40::i;:::-;6992:58;;7183:10;7176:17;;;;;6548:653;;;;:::o;5494:578:3:-;5602:1;5588:16;;:2;:16;;;5584:87;;5657:1;5627:33;;;;;;;;;;;:::i;:::-;;;;;;;;5584:87;5889:21;5913:34;5921:2;5925:7;5934:12;:10;:12::i;:::-;5913:7;:34::i;:::-;5889:58;;5978:4;5961:21;;:13;:21;;;5957:109;;6026:4;6032:7;6041:13;6005:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5957:109;5574:498;5494:578;;;:::o;4759:191:0:-;4824:7;4843:30;4876:26;:24;:26::i;:::-;4843:59;;4919:1;:8;;:14;4928:4;4919:14;;;;;;;;;;;:24;;;4912:31;;;4759:191;;;:::o;3390:441:29:-;3116:42;2362:4:0;3127:18:29;;3147:10;3116;:42::i;:::-;3490:31:::1;1341:25;3512:8;3490:7;:31::i;:::-;3489:32;3481:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3574:35;1416:29;3600:8;3574:7;:35::i;:::-;3573:36;3565:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3667:37;2362:4:0;3675:18:29::0;::::1;3695:8;3667:7;:37::i;:::-;3666:38;3658:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3747:33;1341:25;3771:8;3747:9;:33::i;:::-;3814:8;3796:27;;;;;;;;;;;;3390:441:::0;:::o;5246:136:0:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;6463:12;:10;:12::i;:::-;6441:34;;:18;:34;;;6437:102;;6498:30;;;;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;8618:69:29:-;3220:36;1341:25;3245:10;3220;:36::i;:::-;8669:10:::1;:8;:10::i;:::-;8618:69::o:0;6138:132:3:-;6224:39;6241:4;6247:2;6251:7;6224:39;;;;;;;;;;;;:16;:39::i;:::-;6138:132;;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:11::1;3803:32:2;;3796:39;;3708:134:::0;:::o;5458:1082:29:-;3322:40;1416:29;3351:10;3322;:40::i;:::-;2316:19:5::1;:17;:19::i;:::-;2500:21:20::2;:19;:21::i;:::-;5698:18:29::3;:16;:18::i;:::-;5727;5748:19;:17;:19::i;:::-;5727:40;;5821:1;5786:11;:23;5798:10;5786:23;;;;;;;;;;;:31;;;:36;5778:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;5890:1;5869:9;5879:8;5869:19;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;5861:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;5962:155;6051:5;6071:10;6096;5962:15;:155::i;:::-;5954:185;;;;;;;;;;;;:::i;:::-;;;;;;;;;6180:203;;;;;;;;6215:10;6180:203;;;;6294:8;6180:203;;;;6248:22;6180:203;;;;;;;;:::i;:::-;;;;;;6328:10;6180:203;;;;6361:10;6180:203;;;;::::0;6154:11:::3;:23;6166:10;6154:23;;;;;;;;;;;:229;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6416:10;6396:9;6406:8;6396:19;;;;;;:::i;:::-;;;;;;;;;;;;;:30;;;;6439:27;6445:8;6455:10;6439:5;:27::i;:::-;6521:10;6482:50;;6511:8;6482:50;;6499:10;6482:50;;;;;;;;;;5687:853;2542:20:20::2;:18;:20::i;:::-;5458:1082:29::0;;;;:::o;2692:145:5:-;2739:4;2755:25;2783:21;:19;:21::i;:::-;2755:49;;2821:1;:9;;;;;;;;;;;;2814:16;;;2692:145;:::o;3365:118:3:-;3428:7;3454:22;3468:7;3454:13;:22::i;:::-;3447:29;;3365:118;;;:::o;3043:265::-;3106:7;3125:23;3151:19;:17;:19::i;:::-;3125:45;;3201:1;3184:19;;:5;:19;;;3180:87;;3253:1;3226:30;;;;;;;;;;;:::i;:::-;;;;;;;;3180:87;3283:1;:11;;:18;3295:5;3283:18;;;;;;;;;;;;;;;;3276:25;;;3043:265;;;:::o;4668:337:29:-;3220:36;1341:25;3245:10;3220;:36::i;:::-;4815:39:::1;1416:29;4841:12;4815:7;:39::i;:::-;4807:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4899:42;1416:29;4928:12;4899:10;:42::i;:::-;4976:12;4957:40;;;4990:6;4957:40;;;;;;:::i;:::-;;;;;;;;4668:337:::0;;:::o;2707:352::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2759:46:29::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:13:::1;:46::i;:::-;2816:22;:20;:22::i;:::-;2849:17;:15;:17::i;:::-;2877:24;:22;:24::i;:::-;2912:42;2362:4:0;2923:18:29::0;::::1;2943:10;2912;:42::i;:::-;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;2707:352:29:o;8545:65::-;3220:36;1341:25;3245:10;3220;:36::i;:::-;8594:8:::1;:6;:8::i;:::-;8545:65::o:0;3839:299::-;3116:42;2362:4:0;3127:18:29;;3147:10;3116;:42::i;:::-;3976:31:::1;1341:25;3998:8;3976:7;:31::i;:::-;3968:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4047:34;1341:25;4072:8;4047:10;:34::i;:::-;4112:8;4097:33;;;4123:6;4097:33;;;;;;:::i;:::-;;;;;;;;3839:299:::0;;:::o;3732:207:0:-;3809:4;3825:30;3858:26;:24;:26::i;:::-;3825:59;;3901:1;:8;;:14;3910:4;3901:14;;;;;;;;;;;:22;;:31;3924:7;3901:31;;;;;;;;;;;;;;;;;;;;;;;;;3894:38;;;3732:207;;;;:::o;7247:653:29:-;3322:40;1416:29;3351:10;3322;:40::i;:::-;2500:21:20::1;:19;:21::i;:::-;7413:18:29::2;7423:7;7413:9;:18::i;:::-;7405:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;7467:23;7493:11;:20;7505:7;7493:20;;;;;;;;;;;7467:46;;7547:22;7532:37;;;;;;;;:::i;:::-;;:4;:11;;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;7524:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;7624:31;7658:4;:11;;;;;;;;;;;;7624:45;;7694:24;7680:4;:11;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7782:7;7744:148;7805:14;7835:24;7875:6;7744:148;;;;;;;;:::i;:::-;;;;;;;;7394:506;;2542:20:20::1;:18;:20::i;:::-;7247:653:29::0;;:::o;3755:150:3:-;3802:13;3827:23;3853:19;:17;:19::i;:::-;3827:45;;3889:1;:9;;3882:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3755:150;:::o;5013:384:29:-;5194:4;5215:12;5230:48;5270:7;5230:39;:48::i;:::-;5215:63;;5293:23;5319;5332:9;5319:4;:12;;:23;;;;:::i;:::-;5293:49;;5374:15;5364:25;;:6;:25;;;5357:32;;;;5013:384;;;;;:::o;2317:49:0:-;2362:4;2317:49;;;:::o;5012:144:3:-;5097:52;5116:12;:10;:12::i;:::-;5130:8;5140;5097:18;:52::i;:::-;5012:144;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;6336:233:3:-;6449:31;6462:4;6468:2;6472:7;6449:12;:31::i;:::-;6490:72;6524:12;:10;:12::i;:::-;6538:4;6544:2;6548:7;6557:4;6490:33;:72::i;:::-;6336:233;;;;:::o;8253:254:29:-;8376:13;8410:18;8420:7;8410:9;:18::i;:::-;8402:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;8471:11;:20;8483:7;8471:20;;;;;;;;;;;:28;;8464:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8253:254;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;:::-;;5662:138:::0;;;:::o;1759:49:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5222:210:3:-;5310:4;5326:23;5352:19;:17;:19::i;:::-;5326:45;;5388:1;:20;;:27;5409:5;5388:27;;;;;;;;;;;;;;;:37;5416:8;5388:37;;;;;;;;;;;;;;;;;;;;;;;;;5381:44;;;5222:210;;;;:::o;1302:64:29:-;1341:25;1302:64;:::o;4179:481::-;3220:36;1341:25;3245:10;3220;:36::i;:::-;4291:35:::1;1341:25;4313:12;4291:7;:35::i;:::-;4290:36;4282:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4379:39;1416:29;4405:12;4379:7;:39::i;:::-;4378:40;4370:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;4476:41;2362:4:0;4484:18:29::0;::::1;4504:12;4476:7;:41::i;:::-;4475:42;4467:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;4560:41;1416:29;4588:12;4560:9;:41::i;:::-;4639:12;4617:35;;;;;;;;;;;;4179:481:::0;:::o;3443:202:0:-;3528:4;3566:32;3551:47;;;:11;:47;;;;:87;;;;3602:36;3626:11;3602:23;:36::i;:::-;3551:87;3544:94;;3443:202;;;:::o;1957:156:3:-;2008:23;2076:21;2066:31;;1957:156;:::o;17910:241::-;17973:7;17992:13;18008:17;18017:7;18008:8;:17::i;:::-;17992:33;;18056:1;18039:19;;:5;:19;;;18035:88;;18104:7;18081:31;;;;;;;;;;;:::i;:::-;;;;;;;;18035:88;18139:5;18132:12;;;17910:241;;;:::o;7372:184::-;7442:7;7461:23;7487:19;:17;:19::i;:::-;7461:45;;7523:1;:17;;:26;7541:7;7523:26;;;;;;;;;;;;;;;;;;;;;7516:33;;;7372:184;;;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;16076:120:3:-;16156:33;16165:2;16169:7;16178:4;16184;16156:8;:33::i;:::-;16076:120;;;:::o;7967:238:29:-;8053:4;8074;:12;;;8087:7;8074:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;8070:128;;8181:5;8174:12;;;;8070:128;8136:4;8129:11;;;7967:238;;;;:::o;10384:856:3:-;10470:7;10489:23;10515:19;:17;:19::i;:::-;10489:45;;10544:12;10559:17;10568:7;10559:8;:17::i;:::-;10544:32;;10652:1;10636:18;;:4;:18;;;10632:86;;10670:37;10687:4;10693;10699:7;10670:16;:37::i;:::-;10632:86;10778:1;10762:18;;:4;:18;;;10758:258;;10878:48;10895:1;10899:7;10916:1;10920:5;10878:8;:48::i;:::-;10990:1;10969;:11;;:17;10981:4;10969:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;10758:258;11044:1;11030:16;;:2;:16;;;11026:109;;11109:1;11090;:11;;:15;11102:2;11090:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;11026:109;11166:2;11145:1;:9;;:18;11155:7;11145:18;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;11203:7;11199:2;11184:27;;11193:4;11184:27;;;;;;;;;;;;11229:4;11222:11;;;;10384:856;;;;;:::o;2787:177:0:-;2845:30;2920:28;2910:38;;2787:177;:::o;4381:197::-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4547:7;4556:4;4514:47;;;;;;;;;;;;:::i;:::-;;;;;;;;4464:108;4381:197;;:::o;4148:103::-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;7270:387::-;7347:4;7363:30;7396:26;:24;:26::i;:::-;7363:59;;7437:22;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7509:4;7475:1;:8;;:14;7484:4;7475:14;;;;;;;;;;;:22;;:31;7498:7;7475:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7559:12;:10;:12::i;:::-;7532:40;;7550:7;7532:40;;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;7892:388::-;7970:4;7986:30;8019:26;:24;:26::i;:::-;7986:59;;8059:22;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:1;:8;;:14;8106:4;8097:14;;;;;;;;;;;:22;;:31;8120:7;8097:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;8182:12;:10;:12::i;:::-;8155:40;;8173:7;8155:40;;8167:4;8155:40;;;;;;;;;;8216:4;8209:11;;;;;8055:219;8258:5;8251:12;;;7892:388;;;;;:::o;3674:178:5:-;2563:16;:14;:16::i;:::-;3732:25:::1;3760:21;:19;:21::i;:::-;3732:49;;3803:5;3791:1;:9;;;:17;;;;;;;;;;;;;;;;;;3823:22;3832:12;:10;:12::i;:::-;3823:22;;;;;;:::i;:::-;;;;;;;;3722:130;3674:178::o:0;4603:312:2:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;8734:113:29:-;3220:36;1341:25;3245:10;3220;:36::i;:::-;8734:113;:::o;6057:538:2:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:11;6258:32:2;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;2905:128:5:-;2970:8;:6;:8::i;:::-;2966:61;;;3001:15;;;;;;;;;;;;;;2966:61;2905:128::o;2575:307:20:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;1101:66:29:-;1149:8;;:10;;;;;;;;;:::i;:::-;;;;;;1101:66::o;1175:94::-;1226:7;1253:8;;1246:15;;1175:94;:::o;11562:327:3:-;11643:1;11629:16;;:2;:16;;;11625:87;;11698:1;11668:33;;;;;;;;;;;:::i;:::-;;;;;;;;11625:87;11721:21;11745:32;11753:2;11757:7;11774:1;11745:7;:32::i;:::-;11721:56;;11816:1;11791:27;;:13;:27;;;11787:96;;11869:1;11841:31;;;;;;;;;;;:::i;:::-;;;;;;;;11787:96;11615:274;11562:327;;:::o;2888:208:20:-;1857:1;3068:7;:21;;;;2888:208::o;1147:162:5:-;1200:25;1270:23;1260:33;;1147:162;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2232:149:3:-;6931:20:1;:18;:20::i;:::-;2335:39:3::1;2359:5;2366:7;2335:23;:39::i;:::-;2232:149:::0;;:::o;3231:65:0:-;6931:20:1;:18;:20::i;:::-;3231:65:0:o;1836:97:5:-;6931:20:1;:18;:20::i;:::-;1899:27:5::1;:25;:27::i;:::-;1836:97::o:0;2970:67:2:-;6931:20:1;:18;:20::i;:::-;2970:67:2:o;3366:176:5:-;2316:19;:17;:19::i;:::-;3425:25:::1;3453:21;:19;:21::i;:::-;3425:49;;3496:4;3484:1;:9;;;:16;;;;;;;;;;;;;;;;;;3515:20;3522:12;:10;:12::i;:::-;3515:20;;;;;;:::i;:::-;;;;;;;;3415:127;3366:176::o:0;1222:433:24:-;1298:14;1376:34;1370:4;1363:48;1478:11;1472:4;1465:25;1570:4;1564;1554:21;1544:31;;1222:433;;;:::o;3714:255:23:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;17306:369:3:-;17409:23;17435:19;:17;:19::i;:::-;17409:45;;17488:1;17468:22;;:8;:22;;;17464:91;;17535:8;17513:31;;;;;;;;;;;:::i;:::-;;;;;;;;17464:91;17604:8;17564:1;:20;;:27;17585:5;17564:27;;;;;;;;;;;;;;;:37;17592:8;17564:37;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;17649:8;17627:41;;17642:5;17627:41;;;17659:8;17627:41;;;;;;:::i;:::-;;;;;;;;17399:276;17306:369;;;:::o;985:924:16:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;2673:311:3:-;2786:4;2836:25;2821:40;;;:11;:40;;;;:104;;;;2892:33;2877:48;;;:11;:48;;;;2821:104;:156;;;;2941:36;2965:11;2941:23;:36::i;:::-;2821:156;2802:175;;2673:311;;;:::o;7084:172::-;7150:7;7169:23;7195:19;:17;:19::i;:::-;7169:45;;7231:1;:9;;:18;7241:7;7231:18;;;;;;;;;;;;;;;;;;;;;7224:25;;;7084:172;;;:::o;16378:719::-;16482:23;16508:19;:17;:19::i;:::-;16482:45;;16593:9;:31;;;;16622:1;16606:18;;:4;:18;;;;16593:31;16589:460;;;16640:13;16656:22;16670:7;16656:13;:22::i;:::-;16640:38;;16822:1;16806:18;;:4;:18;;;;:35;;;;;16837:4;16828:13;;:5;:13;;;;16806:35;:69;;;;;16846:29;16863:5;16870:4;16846:16;:29::i;:::-;16845:30;16806:69;16802:142;;;16924:4;16902:27;;;;;;;;;;;:::i;:::-;;;;;;;;16802:142;16962:9;16958:81;;;17016:7;17012:2;16996:28;;17005:5;16996:28;;;;;;;;;;;;16958:81;16626:423;16589:460;17088:2;17059:1;:17;;:26;17077:7;17059:26;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;16472:625;16378:719;;;;:::o;8571:368::-;8683:38;8697:5;8704:7;8713;8683:13;:38::i;:::-;8678:255;;8758:1;8741:19;;:5;:19;;;8737:186;;8810:7;8787:31;;;;;;;;;;;:::i;:::-;;;;;;;;8737:186;8891:7;8900;8864:44;;;;;;;;;;;;:::i;:::-;;;;;;;;8678:255;8571:368;;;:::o;3105:126:5:-;3168:8;:6;:8::i;:::-;3163:62;;3199:15;;;;;;;;;;;;;;3163:62;3105:126::o;1441:138:11:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2387:219:3:-;6931:20:1;:18;:20::i;:::-;2500:23:3::1;2526:19;:17;:19::i;:::-;2500:45;;2565:5;2555:1;:7;;:15;;;;;;:::i;:::-;;2592:7;2580:1;:9;;:19;;;;;;:::i;:::-;;2490:116;2387:219:::0;;:::o;1939:156:5:-;6931:20:1;:18;:20::i;:::-;2012:25:5::1;2040:21;:19;:21::i;:::-;2012:49;;2083:5;2071:1;:9;;;:17;;;;;;;;;;;;;;;;;;2002:93;1939:156::o:0;2129:778:23:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;1035:146:6:-;1111:4;1149:25;1134:40;;;:11;:40;;;;1127:47;;1035:146;;;:::o;7867:272:3:-;7970:4;8024:1;8005:21;;:7;:21;;;;:127;;;;;8052:7;8043:16;;:5;:16;;;:52;;;;8063:32;8080:5;8087:7;8063:16;:32::i;:::-;8043:52;:88;;;;8124:7;8099:32;;:21;8112:7;8099:12;:21::i;:::-;:32;;;8043:88;8005:127;7986:146;;7867:272;;;;;:::o;1899:163:21:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:11:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3900:253:17:-;3983:12;4008;4022:23;4049:6;:19;;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;;;;3900:253;;;;:::o;6113:122:11:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;5203:1551:23:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;4421:582:17:-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4862:1;4841:10;:17;:22;:49;;;;;4889:1;4867:6;:18;;;:23;4841:49;4837:119;;;4934:6;4917:24;;;;;;;;;;;:::i;:::-;;;;;;;;4837:119;4976:10;4969:17;;;;4589:408;4421:582;;;;;;:::o;5543:487::-;5694:1;5674:10;:17;:21;5670:354;;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;;;;;;;;;;;;;7:75:30;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:77::-;4929:7;4958:5;4947:16;;4892:77;;;:::o;4975:118::-;5062:24;5080:5;5062:24;:::i;:::-;5057:3;5050:37;4975:118;;:::o;5099:222::-;5192:4;5230:2;5219:9;5215:18;5207:26;;5243:71;5311:1;5300:9;5296:17;5287:6;5243:71;:::i;:::-;5099:222;;;;:::o;5327:122::-;5400:24;5418:5;5400:24;:::i;:::-;5393:5;5390:35;5380:63;;5439:1;5436;5429:12;5380:63;5327:122;:::o;5455:139::-;5501:5;5539:6;5526:20;5517:29;;5555:33;5582:5;5555:33;:::i;:::-;5455:139;;;;:::o;5600:474::-;5668:6;5676;5725:2;5713:9;5704:7;5700:23;5696:32;5693:119;;;5731:79;;:::i;:::-;5693:119;5851:1;5876:53;5921:7;5912:6;5901:9;5897:22;5876:53;:::i;:::-;5866:63;;5822:117;5978:2;6004:53;6049:7;6040:6;6029:9;6025:22;6004:53;:::i;:::-;5994:63;;5949:118;5600:474;;;;;:::o;6080:619::-;6157:6;6165;6173;6222:2;6210:9;6201:7;6197:23;6193:32;6190:119;;;6228:79;;:::i;:::-;6190:119;6348:1;6373:53;6418:7;6409:6;6398:9;6394:22;6373:53;:::i;:::-;6363:63;;6319:117;6475:2;6501:53;6546:7;6537:6;6526:9;6522:22;6501:53;:::i;:::-;6491:63;;6446:118;6603:2;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6574:118;6080:619;;;;;:::o;6705:329::-;6764:6;6813:2;6801:9;6792:7;6788:23;6784:32;6781:119;;;6819:79;;:::i;:::-;6781:119;6939:1;6964:53;7009:7;7000:6;6989:9;6985:22;6964:53;:::i;:::-;6954:63;;6910:117;6705:329;;;;:::o;7040:::-;7099:6;7148:2;7136:9;7127:7;7123:23;7119:32;7116:119;;;7154:79;;:::i;:::-;7116:119;7274:1;7299:53;7344:7;7335:6;7324:9;7320:22;7299:53;:::i;:::-;7289:63;;7245:117;7040:329;;;;:::o;7375:474::-;7443:6;7451;7500:2;7488:9;7479:7;7475:23;7471:32;7468:119;;;7506:79;;:::i;:::-;7468:119;7626:1;7651:53;7696:7;7687:6;7676:9;7672:22;7651:53;:::i;:::-;7641:63;;7597:117;7753:2;7779:53;7824:7;7815:6;7804:9;7800:22;7779:53;:::i;:::-;7769:63;;7724:118;7375:474;;;;;:::o;7855:117::-;7964:1;7961;7954:12;7978:117;8087:1;8084;8077:12;8101:180;8149:77;8146:1;8139:88;8246:4;8243:1;8236:15;8270:4;8267:1;8260:15;8287:281;8370:27;8392:4;8370:27;:::i;:::-;8362:6;8358:40;8500:6;8488:10;8485:22;8464:18;8452:10;8449:34;8446:62;8443:88;;;8511:18;;:::i;:::-;8443:88;8551:10;8547:2;8540:22;8330:238;8287:281;;:::o;8574:129::-;8608:6;8635:20;;:::i;:::-;8625:30;;8664:33;8692:4;8684:6;8664:33;:::i;:::-;8574:129;;;:::o;8709:307::-;8770:4;8860:18;8852:6;8849:30;8846:56;;;8882:18;;:::i;:::-;8846:56;8920:29;8942:6;8920:29;:::i;:::-;8912:37;;9004:4;8998;8994:15;8986:23;;8709:307;;;:::o;9022:148::-;9120:6;9115:3;9110;9097:30;9161:1;9152:6;9147:3;9143:16;9136:27;9022:148;;;:::o;9176:423::-;9253:5;9278:65;9294:48;9335:6;9294:48;:::i;:::-;9278:65;:::i;:::-;9269:74;;9366:6;9359:5;9352:21;9404:4;9397:5;9393:16;9442:3;9433:6;9428:3;9424:16;9421:25;9418:112;;;9449:79;;:::i;:::-;9418:112;9539:54;9586:6;9581:3;9576;9539:54;:::i;:::-;9259:340;9176:423;;;;;:::o;9618:338::-;9673:5;9722:3;9715:4;9707:6;9703:17;9699:27;9689:122;;9730:79;;:::i;:::-;9689:122;9847:6;9834:20;9872:78;9946:3;9938:6;9931:4;9923:6;9919:17;9872:78;:::i;:::-;9863:87;;9679:277;9618:338;;;;:::o;9962:652::-;10039:6;10047;10096:2;10084:9;10075:7;10071:23;10067:32;10064:119;;;10102:79;;:::i;:::-;10064:119;10222:1;10247:53;10292:7;10283:6;10272:9;10268:22;10247:53;:::i;:::-;10237:63;;10193:117;10377:2;10366:9;10362:18;10349:32;10408:18;10400:6;10397:30;10394:117;;;10430:79;;:::i;:::-;10394:117;10535:62;10589:7;10580:6;10569:9;10565:22;10535:62;:::i;:::-;10525:72;;10320:287;9962:652;;;;;:::o;10620:308::-;10682:4;10772:18;10764:6;10761:30;10758:56;;;10794:18;;:::i;:::-;10758:56;10832:29;10854:6;10832:29;:::i;:::-;10824:37;;10916:4;10910;10906:15;10898:23;;10620:308;;;:::o;10934:425::-;11012:5;11037:66;11053:49;11095:6;11053:49;:::i;:::-;11037:66;:::i;:::-;11028:75;;11126:6;11119:5;11112:21;11164:4;11157:5;11153:16;11202:3;11193:6;11188:3;11184:16;11181:25;11178:112;;;11209:79;;:::i;:::-;11178:112;11299:54;11346:6;11341:3;11336;11299:54;:::i;:::-;11018:341;10934:425;;;;;:::o;11379:340::-;11435:5;11484:3;11477:4;11469:6;11465:17;11461:27;11451:122;;11492:79;;:::i;:::-;11451:122;11609:6;11596:20;11634:79;11709:3;11701:6;11694:4;11686:6;11682:17;11634:79;:::i;:::-;11625:88;;11441:278;11379:340;;;;:::o;11725:1123::-;11830:6;11838;11846;11854;11903:3;11891:9;11882:7;11878:23;11874:33;11871:120;;;11910:79;;:::i;:::-;11871:120;12030:1;12055:53;12100:7;12091:6;12080:9;12076:22;12055:53;:::i;:::-;12045:63;;12001:117;12185:2;12174:9;12170:18;12157:32;12216:18;12208:6;12205:30;12202:117;;;12238:79;;:::i;:::-;12202:117;12343:63;12398:7;12389:6;12378:9;12374:22;12343:63;:::i;:::-;12333:73;;12128:288;12455:2;12481:53;12526:7;12517:6;12506:9;12502:22;12481:53;:::i;:::-;12471:63;;12426:118;12611:2;12600:9;12596:18;12583:32;12642:18;12634:6;12631:30;12628:117;;;12664:79;;:::i;:::-;12628:117;12769:62;12823:7;12814:6;12803:9;12799:22;12769:62;:::i;:::-;12759:72;;12554:287;11725:1123;;;;;;;:::o;12854:118::-;12941:24;12959:5;12941:24;:::i;:::-;12936:3;12929:37;12854:118;;:::o;12978:222::-;13071:4;13109:2;13098:9;13094:18;13086:26;;13122:71;13190:1;13179:9;13175:17;13166:6;13122:71;:::i;:::-;12978:222;;;;:::o;13206:654::-;13284:6;13292;13341:2;13329:9;13320:7;13316:23;13312:32;13309:119;;;13347:79;;:::i;:::-;13309:119;13467:1;13492:53;13537:7;13528:6;13517:9;13513:22;13492:53;:::i;:::-;13482:63;;13438:117;13622:2;13611:9;13607:18;13594:32;13653:18;13645:6;13642:30;13639:117;;;13675:79;;:::i;:::-;13639:117;13780:63;13835:7;13826:6;13815:9;13811:22;13780:63;:::i;:::-;13770:73;;13565:288;13206:654;;;;;:::o;13866:::-;13944:6;13952;14001:2;13989:9;13980:7;13976:23;13972:32;13969:119;;;14007:79;;:::i;:::-;13969:119;14127:1;14152:53;14197:7;14188:6;14177:9;14173:22;14152:53;:::i;:::-;14142:63;;14098:117;14282:2;14271:9;14267:18;14254:32;14313:18;14305:6;14302:30;14299:117;;;14335:79;;:::i;:::-;14299:117;14440:63;14495:7;14486:6;14475:9;14471:22;14440:63;:::i;:::-;14430:73;;14225:288;13866:654;;;;;:::o;14526:797::-;14612:6;14620;14628;14677:2;14665:9;14656:7;14652:23;14648:32;14645:119;;;14683:79;;:::i;:::-;14645:119;14803:1;14828:53;14873:7;14864:6;14853:9;14849:22;14828:53;:::i;:::-;14818:63;;14774:117;14930:2;14956:53;15001:7;14992:6;14981:9;14977:22;14956:53;:::i;:::-;14946:63;;14901:118;15086:2;15075:9;15071:18;15058:32;15117:18;15109:6;15106:30;15103:117;;;15139:79;;:::i;:::-;15103:117;15244:62;15298:7;15289:6;15278:9;15274:22;15244:62;:::i;:::-;15234:72;;15029:287;14526:797;;;;;:::o;15329:116::-;15399:21;15414:5;15399:21;:::i;:::-;15392:5;15389:32;15379:60;;15435:1;15432;15425:12;15379:60;15329:116;:::o;15451:133::-;15494:5;15532:6;15519:20;15510:29;;15548:30;15572:5;15548:30;:::i;:::-;15451:133;;;;:::o;15590:468::-;15655:6;15663;15712:2;15700:9;15691:7;15687:23;15683:32;15680:119;;;15718:79;;:::i;:::-;15680:119;15838:1;15863:53;15908:7;15899:6;15888:9;15884:22;15863:53;:::i;:::-;15853:63;;15809:117;15965:2;15991:50;16033:7;16024:6;16013:9;16009:22;15991:50;:::i;:::-;15981:60;;15936:115;15590:468;;;;;:::o;16064:943::-;16159:6;16167;16175;16183;16232:3;16220:9;16211:7;16207:23;16203:33;16200:120;;;16239:79;;:::i;:::-;16200:120;16359:1;16384:53;16429:7;16420:6;16409:9;16405:22;16384:53;:::i;:::-;16374:63;;16330:117;16486:2;16512:53;16557:7;16548:6;16537:9;16533:22;16512:53;:::i;:::-;16502:63;;16457:118;16614:2;16640:53;16685:7;16676:6;16665:9;16661:22;16640:53;:::i;:::-;16630:63;;16585:118;16770:2;16759:9;16755:18;16742:32;16801:18;16793:6;16790:30;16787:117;;;16823:79;;:::i;:::-;16787:117;16928:62;16982:7;16973:6;16962:9;16958:22;16928:62;:::i;:::-;16918:72;;16713:287;16064:943;;;;;;;:::o;17013:180::-;17061:77;17058:1;17051:88;17158:4;17155:1;17148:15;17182:4;17179:1;17172:15;17199:126;17293:1;17286:5;17283:12;17273:46;;17299:18;;:::i;:::-;17273:46;17199:126;:::o;17331:153::-;17389:7;17418:5;17407:16;;17424:54;17472:5;17424:54;:::i;:::-;17331:153;;;:::o;17490:::-;17559:9;17592:45;17631:5;17592:45;:::i;:::-;17579:58;;17490:153;;;:::o;17649:169::-;17755:56;17805:5;17755:56;:::i;:::-;17750:3;17743:69;17649:169;;:::o;17824:98::-;17875:6;17909:5;17903:12;17893:22;;17824:98;;;:::o;17928:168::-;18011:11;18045:6;18040:3;18033:19;18085:4;18080:3;18076:14;18061:29;;17928:168;;;;:::o;18102:373::-;18188:3;18216:38;18248:5;18216:38;:::i;:::-;18270:70;18333:6;18328:3;18270:70;:::i;:::-;18263:77;;18349:65;18407:6;18402:3;18395:4;18388:5;18384:16;18349:65;:::i;:::-;18439:29;18461:6;18439:29;:::i;:::-;18434:3;18430:39;18423:46;;18192:283;18102:373;;;;:::o;18481:880::-;18743:4;18781:3;18770:9;18766:19;18758:27;;18795:71;18863:1;18852:9;18848:17;18839:6;18795:71;:::i;:::-;18913:9;18907:4;18903:20;18898:2;18887:9;18883:18;18876:48;18941:78;19014:4;19005:6;18941:78;:::i;:::-;18933:86;;19029:91;19116:2;19105:9;19101:18;19092:6;19029:91;:::i;:::-;19167:9;19161:4;19157:20;19152:2;19141:9;19137:18;19130:48;19195:76;19266:4;19257:6;19195:76;:::i;:::-;19187:84;;19281:73;19349:3;19338:9;19334:19;19325:6;19281:73;:::i;:::-;18481:880;;;;;;;;:::o;19367:474::-;19435:6;19443;19492:2;19480:9;19471:7;19467:23;19463:32;19460:119;;;19498:79;;:::i;:::-;19460:119;19618:1;19643:53;19688:7;19679:6;19668:9;19664:22;19643:53;:::i;:::-;19633:63;;19589:117;19745:2;19771:53;19816:7;19807:6;19796:9;19792:22;19771:53;:::i;:::-;19761:63;;19716:118;19367:474;;;;;:::o;19847:180::-;19895:77;19892:1;19885:88;19992:4;19989:1;19982:15;20016:4;20013:1;20006:15;20033:320;20077:6;20114:1;20108:4;20104:12;20094:22;;20161:1;20155:4;20151:12;20182:18;20172:81;;20238:4;20230:6;20226:17;20216:27;;20172:81;20300:2;20292:6;20289:14;20269:18;20266:38;20263:84;;20319:18;;:::i;:::-;20263:84;20084:269;20033:320;;;:::o;20359:170::-;20499:22;20495:1;20487:6;20483:14;20476:46;20359:170;:::o;20535:366::-;20677:3;20698:67;20762:2;20757:3;20698:67;:::i;:::-;20691:74;;20774:93;20863:3;20774:93;:::i;:::-;20892:2;20887:3;20883:12;20876:19;;20535:366;;;:::o;20907:419::-;21073:4;21111:2;21100:9;21096:18;21088:26;;21160:9;21154:4;21150:20;21146:1;21135:9;21131:17;21124:47;21188:131;21314:4;21188:131;:::i;:::-;21180:139;;20907:419;;;:::o;21332:442::-;21481:4;21519:2;21508:9;21504:18;21496:26;;21532:71;21600:1;21589:9;21585:17;21576:6;21532:71;:::i;:::-;21613:72;21681:2;21670:9;21666:18;21657:6;21613:72;:::i;:::-;21695;21763:2;21752:9;21748:18;21739:6;21695:72;:::i;:::-;21332:442;;;;;;:::o;21780:178::-;21920:30;21916:1;21908:6;21904:14;21897:54;21780:178;:::o;21964:366::-;22106:3;22127:67;22191:2;22186:3;22127:67;:::i;:::-;22120:74;;22203:93;22292:3;22203:93;:::i;:::-;22321:2;22316:3;22312:12;22305:19;;21964:366;;;:::o;22336:419::-;22502:4;22540:2;22529:9;22525:18;22517:26;;22589:9;22583:4;22579:20;22575:1;22564:9;22560:17;22553:47;22617:131;22743:4;22617:131;:::i;:::-;22609:139;;22336:419;;;:::o;22761:220::-;22901:34;22897:1;22889:6;22885:14;22878:58;22970:3;22965:2;22957:6;22953:15;22946:28;22761:220;:::o;22987:366::-;23129:3;23150:67;23214:2;23209:3;23150:67;:::i;:::-;23143:74;;23226:93;23315:3;23226:93;:::i;:::-;23344:2;23339:3;23335:12;23328:19;;22987:366;;;:::o;23359:419::-;23525:4;23563:2;23552:9;23548:18;23540:26;;23612:9;23606:4;23602:20;23598:1;23587:9;23583:17;23576:47;23640:131;23766:4;23640:131;:::i;:::-;23632:139;;23359:419;;;:::o;23784:177::-;23924:29;23920:1;23912:6;23908:14;23901:53;23784:177;:::o;23967:366::-;24109:3;24130:67;24194:2;24189:3;24130:67;:::i;:::-;24123:74;;24206:93;24295:3;24206:93;:::i;:::-;24324:2;24319:3;24315:12;24308:19;;23967:366;;;:::o;24339:419::-;24505:4;24543:2;24532:9;24528:18;24520:26;;24592:9;24586:4;24582:20;24578:1;24567:9;24563:17;24556:47;24620:131;24746:4;24620:131;:::i;:::-;24612:139;;24339:419;;;:::o;24764:173::-;24904:25;24900:1;24892:6;24888:14;24881:49;24764:173;:::o;24943:366::-;25085:3;25106:67;25170:2;25165:3;25106:67;:::i;:::-;25099:74;;25182:93;25271:3;25182:93;:::i;:::-;25300:2;25295:3;25291:12;25284:19;;24943:366;;;:::o;25315:419::-;25481:4;25519:2;25508:9;25504:18;25496:26;;25568:9;25562:4;25558:20;25554:1;25543:9;25539:17;25532:47;25596:131;25722:4;25596:131;:::i;:::-;25588:139;;25315:419;;;:::o;25740:148::-;25842:11;25879:3;25864:18;;25740:148;;;;:::o;25894:390::-;26000:3;26028:39;26061:5;26028:39;:::i;:::-;26083:89;26165:6;26160:3;26083:89;:::i;:::-;26076:96;;26181:65;26239:6;26234:3;26227:4;26220:5;26216:16;26181:65;:::i;:::-;26271:6;26266:3;26262:16;26255:23;;26004:280;25894:390;;;;:::o;26290:275::-;26422:3;26444:95;26535:3;26526:6;26444:95;:::i;:::-;26437:102;;26556:3;26549:10;;26290:275;;;;:::o;26571:234::-;26711:34;26707:1;26699:6;26695:14;26688:58;26780:17;26775:2;26767:6;26763:15;26756:42;26571:234;:::o;26811:366::-;26953:3;26974:67;27038:2;27033:3;26974:67;:::i;:::-;26967:74;;27050:93;27139:3;27050:93;:::i;:::-;27168:2;27163:3;27159:12;27152:19;;26811:366;;;:::o;27183:419::-;27349:4;27387:2;27376:9;27372:18;27364:26;;27436:9;27430:4;27426:20;27422:1;27411:9;27407:17;27400:47;27464:131;27590:4;27464:131;:::i;:::-;27456:139;;27183:419;;;:::o;27608:167::-;27748:19;27744:1;27736:6;27732:14;27725:43;27608:167;:::o;27781:366::-;27923:3;27944:67;28008:2;28003:3;27944:67;:::i;:::-;27937:74;;28020:93;28109:3;28020:93;:::i;:::-;28138:2;28133:3;28129:12;28122:19;;27781:366;;;:::o;28153:419::-;28319:4;28357:2;28346:9;28342:18;28334:26;;28406:9;28400:4;28396:20;28392:1;28381:9;28377:17;28370:47;28434:131;28560:4;28434:131;:::i;:::-;28426:139;;28153:419;;;:::o;28578:141::-;28627:4;28650:3;28642:11;;28673:3;28670:1;28663:14;28707:4;28704:1;28694:18;28686:26;;28578:141;;;:::o;28725:93::-;28762:6;28809:2;28804;28797:5;28793:14;28789:23;28779:33;;28725:93;;;:::o;28824:107::-;28868:8;28918:5;28912:4;28908:16;28887:37;;28824:107;;;;:::o;28937:393::-;29006:6;29056:1;29044:10;29040:18;29079:97;29109:66;29098:9;29079:97;:::i;:::-;29197:39;29227:8;29216:9;29197:39;:::i;:::-;29185:51;;29269:4;29265:9;29258:5;29254:21;29245:30;;29318:4;29308:8;29304:19;29297:5;29294:30;29284:40;;29013:317;;28937:393;;;;;:::o;29336:60::-;29364:3;29385:5;29378:12;;29336:60;;;:::o;29402:142::-;29452:9;29485:53;29503:34;29512:24;29530:5;29512:24;:::i;:::-;29503:34;:::i;:::-;29485:53;:::i;:::-;29472:66;;29402:142;;;:::o;29550:75::-;29593:3;29614:5;29607:12;;29550:75;;;:::o;29631:269::-;29741:39;29772:7;29741:39;:::i;:::-;29802:91;29851:41;29875:16;29851:41;:::i;:::-;29843:6;29836:4;29830:11;29802:91;:::i;:::-;29796:4;29789:105;29707:193;29631:269;;;:::o;29906:73::-;29951:3;29906:73;:::o;29985:189::-;30062:32;;:::i;:::-;30103:65;30161:6;30153;30147:4;30103:65;:::i;:::-;30038:136;29985:189;;:::o;30180:186::-;30240:120;30257:3;30250:5;30247:14;30240:120;;;30311:39;30348:1;30341:5;30311:39;:::i;:::-;30284:1;30277:5;30273:13;30264:22;;30240:120;;;30180:186;;:::o;30372:543::-;30473:2;30468:3;30465:11;30462:446;;;30507:38;30539:5;30507:38;:::i;:::-;30591:29;30609:10;30591:29;:::i;:::-;30581:8;30577:44;30774:2;30762:10;30759:18;30756:49;;;30795:8;30780:23;;30756:49;30818:80;30874:22;30892:3;30874:22;:::i;:::-;30864:8;30860:37;30847:11;30818:80;:::i;:::-;30477:431;;30462:446;30372:543;;;:::o;30921:117::-;30975:8;31025:5;31019:4;31015:16;30994:37;;30921:117;;;;:::o;31044:169::-;31088:6;31121:51;31169:1;31165:6;31157:5;31154:1;31150:13;31121:51;:::i;:::-;31117:56;31202:4;31196;31192:15;31182:25;;31095:118;31044:169;;;;:::o;31218:295::-;31294:4;31440:29;31465:3;31459:4;31440:29;:::i;:::-;31432:37;;31502:3;31499:1;31495:11;31489:4;31486:21;31478:29;;31218:295;;;;:::o;31518:1395::-;31635:37;31668:3;31635:37;:::i;:::-;31737:18;31729:6;31726:30;31723:56;;;31759:18;;:::i;:::-;31723:56;31803:38;31835:4;31829:11;31803:38;:::i;:::-;31888:67;31948:6;31940;31934:4;31888:67;:::i;:::-;31982:1;32006:4;31993:17;;32038:2;32030:6;32027:14;32055:1;32050:618;;;;32712:1;32729:6;32726:77;;;32778:9;32773:3;32769:19;32763:26;32754:35;;32726:77;32829:67;32889:6;32882:5;32829:67;:::i;:::-;32823:4;32816:81;32685:222;32020:887;;32050:618;32102:4;32098:9;32090:6;32086:22;32136:37;32168:4;32136:37;:::i;:::-;32195:1;32209:208;32223:7;32220:1;32217:14;32209:208;;;32302:9;32297:3;32293:19;32287:26;32279:6;32272:42;32353:1;32345:6;32341:14;32331:24;;32400:2;32389:9;32385:18;32372:31;;32246:4;32243:1;32239:12;32234:17;;32209:208;;;32445:6;32436:7;32433:19;32430:179;;;32503:9;32498:3;32494:19;32488:26;32546:48;32588:4;32580:6;32576:17;32565:9;32546:48;:::i;:::-;32538:6;32531:64;32453:156;32430:179;32655:1;32651;32643:6;32639:14;32635:22;32629:4;32622:36;32057:611;;;32020:887;;31610:1303;;;31518:1395;;:::o;32919:140::-;32967:4;32990:3;32982:11;;33013:3;33010:1;33003:14;33047:4;33044:1;33034:18;33026:26;;32919:140;;;:::o;33065:541::-;33165:2;33160:3;33157:11;33154:445;;;33199:37;33230:5;33199:37;:::i;:::-;33282:29;33300:10;33282:29;:::i;:::-;33272:8;33268:44;33465:2;33453:10;33450:18;33447:49;;;33486:8;33471:23;;33447:49;33509:80;33565:22;33583:3;33565:22;:::i;:::-;33555:8;33551:37;33538:11;33509:80;:::i;:::-;33169:430;;33154:445;33065:541;;;:::o;33612:1390::-;33727:36;33759:3;33727:36;:::i;:::-;33828:18;33820:6;33817:30;33814:56;;;33850:18;;:::i;:::-;33814:56;33894:38;33926:4;33920:11;33894:38;:::i;:::-;33979:66;34038:6;34030;34024:4;33979:66;:::i;:::-;34072:1;34096:4;34083:17;;34128:2;34120:6;34117:14;34145:1;34140:617;;;;34801:1;34818:6;34815:77;;;34867:9;34862:3;34858:19;34852:26;34843:35;;34815:77;34918:67;34978:6;34971:5;34918:67;:::i;:::-;34912:4;34905:81;34774:222;34110:886;;34140:617;34192:4;34188:9;34180:6;34176:22;34226:36;34257:4;34226:36;:::i;:::-;34284:1;34298:208;34312:7;34309:1;34306:14;34298:208;;;34391:9;34386:3;34382:19;34376:26;34368:6;34361:42;34442:1;34434:6;34430:14;34420:24;;34489:2;34478:9;34474:18;34461:31;;34335:4;34332:1;34328:12;34323:17;;34298:208;;;34534:6;34525:7;34522:19;34519:179;;;34592:9;34587:3;34583:19;34577:26;34635:48;34677:4;34669:6;34665:17;34654:9;34635:48;:::i;:::-;34627:6;34620:64;34542:156;34519:179;34744:1;34740;34732:6;34728:14;34724:22;34718:4;34711:36;34147:610;;;34110:886;;33702:1300;;;33612:1390;;:::o;35008:179::-;35148:31;35144:1;35136:6;35132:14;35125:55;35008:179;:::o;35193:366::-;35335:3;35356:67;35420:2;35415:3;35356:67;:::i;:::-;35349:74;;35432:93;35521:3;35432:93;:::i;:::-;35550:2;35545:3;35541:12;35534:19;;35193:366;;;:::o;35565:419::-;35731:4;35769:2;35758:9;35754:18;35746:26;;35818:9;35812:4;35808:20;35804:1;35793:9;35789:17;35782:47;35846:131;35972:4;35846:131;:::i;:::-;35838:139;;35565:419;;;:::o;35990:85::-;36035:7;36064:5;36053:16;;35990:85;;;:::o;36081:101::-;36117:7;36157:18;36150:5;36146:30;36135:41;;36081:101;;;:::o;36188:156::-;36245:9;36278:60;36295:42;36304:32;36330:5;36304:32;:::i;:::-;36295:42;:::i;:::-;36278:60;:::i;:::-;36265:73;;36188:156;;;:::o;36350:145::-;36444:44;36482:5;36444:44;:::i;:::-;36439:3;36432:57;36350:145;;:::o;36501:236::-;36601:4;36639:2;36628:9;36624:18;36616:26;;36652:78;36727:1;36716:9;36712:17;36703:6;36652:78;:::i;:::-;36501:236;;;;:::o;36743:174::-;36883:26;36879:1;36871:6;36867:14;36860:50;36743:174;:::o;36923:366::-;37065:3;37086:67;37150:2;37145:3;37086:67;:::i;:::-;37079:74;;37162:93;37251:3;37162:93;:::i;:::-;37280:2;37275:3;37271:12;37264:19;;36923:366;;;:::o;37295:419::-;37461:4;37499:2;37488:9;37484:18;37476:26;;37548:9;37542:4;37538:20;37534:1;37523:9;37519:17;37512:47;37576:131;37702:4;37576:131;:::i;:::-;37568:139;;37295:419;;;:::o;37720:179::-;37860:31;37856:1;37848:6;37844:14;37837:55;37720:179;:::o;37905:366::-;38047:3;38068:67;38132:2;38127:3;38068:67;:::i;:::-;38061:74;;38144:93;38233:3;38144:93;:::i;:::-;38262:2;38257:3;38253:12;38246:19;;37905:366;;;:::o;38277:419::-;38443:4;38481:2;38470:9;38466:18;38458:26;;38530:9;38524:4;38520:20;38516:1;38505:9;38501:17;38494:47;38558:131;38684:4;38558:131;:::i;:::-;38550:139;;38277:419;;;:::o;38702:609::-;38909:4;38947:2;38936:9;38932:18;38924:26;;38960:90;39047:1;39036:9;39032:17;39023:6;38960:90;:::i;:::-;39060:91;39147:2;39136:9;39132:18;39123:6;39060:91;:::i;:::-;39198:9;39192:4;39188:20;39183:2;39172:9;39168:18;39161:48;39226:78;39299:4;39290:6;39226:78;:::i;:::-;39218:86;;38702:609;;;;;;:::o;39317:143::-;39374:5;39405:6;39399:13;39390:22;;39421:33;39448:5;39421:33;:::i;:::-;39317:143;;;;:::o;39466:351::-;39536:6;39585:2;39573:9;39564:7;39560:23;39556:32;39553:119;;;39591:79;;:::i;:::-;39553:119;39711:1;39736:64;39792:7;39783:6;39772:9;39768:22;39736:64;:::i;:::-;39726:74;;39682:128;39466:351;;;;:::o;39823:332::-;39944:4;39982:2;39971:9;39967:18;39959:26;;39995:71;40063:1;40052:9;40048:17;40039:6;39995:71;:::i;:::-;40076:72;40144:2;40133:9;40129:18;40120:6;40076:72;:::i;:::-;39823:332;;;;;:::o;40161:143::-;40218:5;40249:6;40243:13;40234:22;;40265:33;40292:5;40265:33;:::i;:::-;40161:143;;;;:::o;40310:351::-;40380:6;40429:2;40417:9;40408:7;40404:23;40400:32;40397:119;;;40435:79;;:::i;:::-;40397:119;40555:1;40580:64;40636:7;40627:6;40616:9;40612:22;40580:64;:::i;:::-;40570:74;;40526:128;40310:351;;;;:::o;40667:180::-;40715:77;40712:1;40705:88;40812:4;40809:1;40802:15;40836:4;40833:1;40826:15;40853:233;40892:3;40915:24;40933:5;40915:24;:::i;:::-;40906:33;;40961:66;40954:5;40951:77;40948:103;;41031:18;;:::i;:::-;40948:103;41078:1;41071:5;41067:13;41060:20;;40853:233;;;:::o;41092:640::-;41287:4;41325:3;41314:9;41310:19;41302:27;;41339:71;41407:1;41396:9;41392:17;41383:6;41339:71;:::i;:::-;41420:72;41488:2;41477:9;41473:18;41464:6;41420:72;:::i;:::-;41502;41570:2;41559:9;41555:18;41546:6;41502:72;:::i;:::-;41621:9;41615:4;41611:20;41606:2;41595:9;41591:18;41584:48;41649:76;41720:4;41711:6;41649:76;:::i;:::-;41641:84;;41092:640;;;;;;;:::o;41738:141::-;41794:5;41825:6;41819:13;41810:22;;41841:32;41867:5;41841:32;:::i;:::-;41738:141;;;;:::o;41885:349::-;41954:6;42003:2;41991:9;41982:7;41978:23;41974:32;41971:119;;;42009:79;;:::i;:::-;41971:119;42129:1;42154:63;42209:7;42200:6;42189:9;42185:22;42154:63;:::i;:::-;42144:73;;42100:127;41885:349;;;;:::o;42240:332::-;42361:4;42399:2;42388:9;42384:18;42376:26;;42412:71;42480:1;42469:9;42465:17;42456:6;42412:71;:::i;:::-;42493:72;42561:2;42550:9;42546:18;42537:6;42493:72;:::i;:::-;42240:332;;;;;:::o;42578:147::-;42679:11;42716:3;42701:18;;42578:147;;;;:::o;42731:386::-;42835:3;42863:38;42895:5;42863:38;:::i;:::-;42917:88;42998:6;42993:3;42917:88;:::i;:::-;42910:95;;43014:65;43072:6;43067:3;43060:4;43053:5;43049:16;43014:65;:::i;:::-;43104:6;43099:3;43095:16;43088:23;;42839:278;42731:386;;;;:::o;43123:271::-;43253:3;43275:93;43364:3;43355:6;43275:93;:::i;:::-;43268:100;;43385:3;43378:10;;43123:271;;;;:::o;43400:86::-;43435:7;43475:4;43468:5;43464:16;43453:27;;43400:86;;;:::o;43492:112::-;43575:22;43591:5;43575:22;:::i;:::-;43570:3;43563:35;43492:112;;:::o;43610:545::-;43783:4;43821:3;43810:9;43806:19;43798:27;;43835:71;43903:1;43892:9;43888:17;43879:6;43835:71;:::i;:::-;43916:68;43980:2;43969:9;43965:18;43956:6;43916:68;:::i;:::-;43994:72;44062:2;44051:9;44047:18;44038:6;43994:72;:::i;:::-;44076;44144:2;44133:9;44129:18;44120:6;44076:72;:::i;:::-;43610:545;;;;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","INSTITUTION_ROLE()":"1b929c21","MANAGER_ROLE()":"ec87621c","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","credentials(uint256)":"e0574e3f","getApproved(uint256)":"081812fc","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize()":"8129fc1c","isApprovedForAll(address,address)":"e985e9c5","issueCredential(address,string,bytes32,bytes)":"593dc75c","name()":"06fdde03","ownerOf(uint256)":"6352211e","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","registerInstitution(address)":"f06d80fc","registerManager(address)":"2b2da97e","renounceRole(bytes32,address)":"36568abe","revokeCredential(uint256,string)":"957a3205","revokeInstitution(address,string)":"7baa47d9","revokeManager(address,string)":"896695de","revokeRole(bytes32,address)":"d547741f","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","verifyCredential(uint256,bytes32)":"1b9519a8","verifySignature(bytes32,address,bytes)":"98a3410d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"}],\"name\":\"CredentialIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum NFTCMS.CredentialStatus\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum NFTCMS.CredentialStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"CredentialStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"}],\"name\":\"InstitutionRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InstitutionRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ManagerRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INSTITUTION_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"credentials\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsURI\",\"type\":\"string\"},{\"internalType\":\"enum NFTCMS.CredentialStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_student\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_ipfsURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"issueCredential\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_institution\",\"type\":\"address\"}],\"name\":\"registerInstitution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"registerManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeCredential\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_institution\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeInstitution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"verifyCredential\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"message\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifySignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTCMSvDigitalSignature.sol\":\"NFTCMS\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xfd473ea8f70e13eaa6475c7e348885b8a32925252e3bc237e07c0e3fde0f10f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea9d17ae8f18568ab1aedf555ebc79906ba3eaaccfa78efbaed05bd3a9e1b6f2\",\"dweb:/ipfs/QmUQDGwCVE72tExiyA9EuwBeaiu9a8DQin3DZxuX76umg4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NFTCMSvDigitalSignature.sol\":{\"keccak256\":\"0xffefc874bde2eb475cc324e356670919f5ba401b95c176b78f5c0969815591d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b15bb9ecbcc5ffc52cedb1d88b494ac4a5f30b60f1995afe32ebd82099977cae\",\"dweb:/ipfs/QmYLNK5CnxW3mTRcb5xDLW9eTEWy8gFBPJxeKgPYjJoHm2\"]}},\"version\":1}"}}}}}