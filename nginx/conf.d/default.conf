    server {
        listen 80;
        server_name localhost;

        #React frontend (dev server via Vite or npm start)
        # location / {
        #     proxy_pass http://127.0.0.1:5173/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        # }

        # Backend API
        location /api/ {
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://backend:4000/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Ensure CORS headers from backend are preserved
            proxy_pass_request_headers on;

            # OPTIONAL: Add CORS headers here too (in case backend fails)
            # add_header Access-Control-Allow-Origin *;
            # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            # add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";

            # Handle OPTIONS preflight requests directly
            if ($request_method = OPTIONS) {
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain charset=UTF-8";
                add_header Content-Length 0;
                return 204;
            }
        }


        # IPFS Gateway (proxy to ipfs container on port 8080)
        location /ipfs/ {
            rewrite ^/ipfs/(.*)$ /ipfs/$1 break;
            proxy_pass http://ipfs:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

            location /api/v0/ {
            proxy_pass http://ipfs:5001/api/v0/;
            
            # CORS headers for browser access
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }