services:
  # frontend:
  #   build:
  #     context: ./client
  #   container_name: react-dev
  #   working_dir: /app
  #   volumes:
  #     - ./client:/app
  #   ports:
  #     - "5173:5173"
  #   command: sh -c "npm install && npm run dev"
  #   env_file:
  #     - ./client/.env
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #     - HOST=0.0.0.0
  #     - VITE_IPFS_GATEWAY_URI=http://localhost:5001
  #     - VITE_IPFS_HTTP_URI=http://localhost:8080
  #   stdin_open: true
  #   tty: true

  # backend:
  #   build:
  #     context: ./api
  #   container_name: go-backend
  #   ports:
  #     - "4000:4000"
  #   depends_on:
  #     - cockroach
  #     - redis
  #   env_file:
  #     - ./api/.env
  #   environment:
  #     - REDIS_PASSWORD=PASSWORD
  #     - REDIS_ADDRESS=redis:6379
  #     - REDIS_URI=redis://:PASSWORD@redis:6379
  #     - DB_USER=postgres
  #     - DB_PASSWORD=saurav
  #     - DB_PORT=5432
  #     - DB_NAME=nft-cms
  #     - DB_HOST=postgres
  #     - DB_SSLMODE=disable
  #     - POSTGRES_PASSWORD=saurav
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=nft-cms
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     # - POSTGRES_DSN=postgresql://root@cockroach:26257/nft_cms?sslmode=disable
  #     - POSTGRES_DSN=postgresql://root@cockroachdb:26257/nft_cms?sslmode=disable
  #     - PORT=4000

  # ipfs:
  #   image: ipfs/kubo:latest
  #   container_name: private-ipfs
  #   ports:
  #     - "5001:5001"
  #     - "8080:8080"
  #     - "4001:4001"
  #   restart: unless-stopped
  #   volumes:
  #     - ipfs_data:/data/ipfs
  #   entrypoint: >
  #     sh -c "
  #     ipfs init &&
  #     ipfs config --json API.HTTPHeaders '{\"Access-Control-Allow-Origin\": [\"*\"], \"Access-Control-Allow-Methods\": [\"PUT\", \"POST\", \"GET\"], \"Access-Control-Allow-Credentials\": [\"true\"]}' &&
  #     ipfs config --json Addresses.API '\"/ip4/0.0.0.0/tcp/5001\"' &&
  #     ipfs config --json Addresses.Gateway '\"/ip4/0.0.0.0/tcp/8080\"' &&
  #     ipfs daemon
  #     "
  ipfs:
    image: ipfs/kubo:latest
    container_name: ipfs
    restart: unless-stopped
    volumes:
      - ipfs_data:/data/ipfs
    ports:
      - "5001:5001"  # API port (local access only)
      - "8080:8080"  # Gateway port (local access only)
      - "4001:4001"  # Swarm port (local access only)
    environment:
      - IPFS_PROFILE=server
    entrypoint: >
      sh -c "
      if [ ! -f /data/ipfs/config ]; then
        ipfs init &&
        ipfs config --json API.HTTPHeaders '{\"Access-Control-Allow-Origin\": [\"*\"], \"Access-Control-Allow-Methods\": [\"PUT\", \"POST\", \"GET\"], \"Access-Control-Allow-Credentials\": [\"true\"]}' &&
        ipfs config --json Addresses.API '\"/ip4/0.0.0.0/tcp/5001\"' &&
        ipfs config --json Addresses.Gateway '\"/ip4/0.0.0.0/tcp/8080\"';
      fi;
      ipfs daemon --migrate=true --enable-gc=true
      "

  cockroach:
    image: cockroachdb/cockroach:latest
    container_name: cockroachdb
    command: start-single-node --insecure
    ports:
      - "26257:26257"  # SQL
      - "8081:8080"    # Admin UI
    volumes:
      - cockroach-data:/cockroach/cockroach-data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - DB_USER=root
      - DB_PASSWORD=
      - DB_PORT=26257
      - DB_NAME=nft_cms
      - DB_HOST=localhost
      - DB_SSLMODE=disable
      - POSTGRES_DSN=postgresql://root@localhost:26257/nft_cms?sslmode=disable
    env_file:
      - ./api/.env
    entrypoint: >
      sh -c "
      cockroach start-single-node --insecure &
      pid=$!;
      sleep 5;
      cockroach sql --insecure --host=localhost -e 'CREATE DATABASE IF NOT EXISTS nft_cms;';
      wait $pid
      "

  redis:
    image: redis:latest
    container_name: redis_api
    restart: always
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    env_file:
      - ./api/.env

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis_exporter
    restart: always
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "9121:9121"
    env_file:
      - ./api/.env

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./api/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    env_file:
      - ./api/.env

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    env_file:
      - ./api/.env
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      # - backend
      - ipfs
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - ./api/.env
volumes:
  grafana-storage:
  cockroach-data:
  ipfs_data: